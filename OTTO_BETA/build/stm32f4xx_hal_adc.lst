ARM GAS  /tmp/ccRfYZzc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc."
  20      6572732F 
  20      53544D33 
  20      32463478 
  20      785F4841 
  21 0033 6300     		.ascii	"c\000"
  22              		.section	.text.HAL_ADC_Init,"ax",%progbits
  23              		.align	1
  24              		.global	HAL_ADC_Init
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	HAL_ADC_Init:
  32              	.LFB130:
  33              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + IO operation functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + State and errors functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
ARM GAS  /tmp/ccRfYZzc.s 			page 2


  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
ARM GAS  /tmp/ccRfYZzc.s 			page 3


  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
ARM GAS  /tmp/ccRfYZzc.s 			page 4


 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Callback registration ***
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      to register an interrupt callback.
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and a pointer to the user callback function.
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      weak function.
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and the Callback ID.
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function allows to reset following callbacks:
ARM GAS  /tmp/ccRfYZzc.s 			page 5


 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      are set to the corresponding weak functions.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
ARM GAS  /tmp/ccRfYZzc.s 			page 6


 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
ARM GAS  /tmp/ccRfYZzc.s 			page 7


 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  34              		.loc 1 313 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 16
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 84B0     		sub	sp, sp, #16
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 24
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 7860     		str	r0, [r7, #4]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  50              		.loc 1 314 21
  51 0008 0023     		movs	r3, #0
  52 000a FB73     		strb	r3, [r7, #15]
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  53              		.loc 1 317 5
  54 000c 7B68     		ldr	r3, [r7, #4]
  55 000e 002B     		cmp	r3, #0
  56 0010 01D1     		bne	.L2
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
  57              		.loc 1 319 12
  58 0012 0123     		movs	r3, #1
  59 0014 5BE1     		b	.L3
  60              	.L2:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  61              		.loc 1 323 3
  62 0016 7B68     		ldr	r3, [r7, #4]
  63 0018 1B68     		ldr	r3, [r3]
  64 001a A44A     		ldr	r2, .L20
  65 001c 9342     		cmp	r3, r2
  66 001e 0ED0     		beq	.L4
  67              		.loc 1 323 3 is_stmt 0 discriminator 1
  68 0020 7B68     		ldr	r3, [r7, #4]
  69 0022 1B68     		ldr	r3, [r3]
  70 0024 A24A     		ldr	r2, .L20+4
  71 0026 9342     		cmp	r3, r2
  72 0028 09D0     		beq	.L4
  73              		.loc 1 323 3 discriminator 2
ARM GAS  /tmp/ccRfYZzc.s 			page 8


  74 002a 7B68     		ldr	r3, [r7, #4]
  75 002c 1B68     		ldr	r3, [r3]
  76 002e A14A     		ldr	r2, .L20+8
  77 0030 9342     		cmp	r3, r2
  78 0032 04D0     		beq	.L4
  79              		.loc 1 323 3 discriminator 3
  80 0034 40F24311 		movw	r1, #323
  81 0038 9F48     		ldr	r0, .L20+12
  82 003a FFF7FEFF 		bl	assert_failed
  83              	.L4:
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  84              		.loc 1 324 3 is_stmt 1
  85 003e 7B68     		ldr	r3, [r7, #4]
  86 0040 5B68     		ldr	r3, [r3, #4]
  87 0042 002B     		cmp	r3, #0
  88 0044 13D0     		beq	.L5
  89              		.loc 1 324 3 is_stmt 0 discriminator 1
  90 0046 7B68     		ldr	r3, [r7, #4]
  91 0048 5B68     		ldr	r3, [r3, #4]
  92 004a B3F5803F 		cmp	r3, #65536
  93 004e 0ED0     		beq	.L5
  94              		.loc 1 324 3 discriminator 2
  95 0050 7B68     		ldr	r3, [r7, #4]
  96 0052 5B68     		ldr	r3, [r3, #4]
  97 0054 B3F5003F 		cmp	r3, #131072
  98 0058 09D0     		beq	.L5
  99              		.loc 1 324 3 discriminator 3
 100 005a 7B68     		ldr	r3, [r7, #4]
 101 005c 5B68     		ldr	r3, [r3, #4]
 102 005e B3F5403F 		cmp	r3, #196608
 103 0062 04D0     		beq	.L5
 104              		.loc 1 324 3 discriminator 4
 105 0064 4FF4A271 		mov	r1, #324
 106 0068 9348     		ldr	r0, .L20+12
 107 006a FFF7FEFF 		bl	assert_failed
 108              	.L5:
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 109              		.loc 1 325 3 is_stmt 1
 110 006e 7B68     		ldr	r3, [r7, #4]
 111 0070 9B68     		ldr	r3, [r3, #8]
 112 0072 002B     		cmp	r3, #0
 113 0074 13D0     		beq	.L6
 114              		.loc 1 325 3 is_stmt 0 discriminator 1
 115 0076 7B68     		ldr	r3, [r7, #4]
 116 0078 9B68     		ldr	r3, [r3, #8]
 117 007a B3F1807F 		cmp	r3, #16777216
 118 007e 0ED0     		beq	.L6
 119              		.loc 1 325 3 discriminator 2
 120 0080 7B68     		ldr	r3, [r7, #4]
 121 0082 9B68     		ldr	r3, [r3, #8]
 122 0084 B3F1007F 		cmp	r3, #33554432
 123 0088 09D0     		beq	.L6
 124              		.loc 1 325 3 discriminator 3
 125 008a 7B68     		ldr	r3, [r7, #4]
 126 008c 9B68     		ldr	r3, [r3, #8]
 127 008e B3F1407F 		cmp	r3, #50331648
 128 0092 04D0     		beq	.L6
ARM GAS  /tmp/ccRfYZzc.s 			page 9


 129              		.loc 1 325 3 discriminator 4
 130 0094 40F24511 		movw	r1, #325
 131 0098 8748     		ldr	r0, .L20+12
 132 009a FFF7FEFF 		bl	assert_failed
 133              	.L6:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 134              		.loc 1 326 3 is_stmt 1
 135 009e 7B68     		ldr	r3, [r7, #4]
 136 00a0 1B69     		ldr	r3, [r3, #16]
 137 00a2 002B     		cmp	r3, #0
 138 00a4 08D0     		beq	.L7
 139              		.loc 1 326 3 is_stmt 0 discriminator 1
 140 00a6 7B68     		ldr	r3, [r7, #4]
 141 00a8 1B69     		ldr	r3, [r3, #16]
 142 00aa 012B     		cmp	r3, #1
 143 00ac 04D0     		beq	.L7
 144              		.loc 1 326 3 discriminator 2
 145 00ae 4FF4A371 		mov	r1, #326
 146 00b2 8148     		ldr	r0, .L20+12
 147 00b4 FFF7FEFF 		bl	assert_failed
 148              	.L7:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 149              		.loc 1 327 3 is_stmt 1
 150 00b8 7B68     		ldr	r3, [r7, #4]
 151 00ba 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 152 00bc 002B     		cmp	r3, #0
 153 00be 08D0     		beq	.L8
 154              		.loc 1 327 3 is_stmt 0 discriminator 1
 155 00c0 7B68     		ldr	r3, [r7, #4]
 156 00c2 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 157 00c4 012B     		cmp	r3, #1
 158 00c6 04D0     		beq	.L8
 159              		.loc 1 327 3 discriminator 2
 160 00c8 40F24711 		movw	r1, #327
 161 00cc 7A48     		ldr	r0, .L20+12
 162 00ce FFF7FEFF 		bl	assert_failed
 163              	.L8:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 164              		.loc 1 328 3 is_stmt 1
 165 00d2 7B68     		ldr	r3, [r7, #4]
 166 00d4 9B6A     		ldr	r3, [r3, #40]
 167 00d6 002B     		cmp	r3, #0
 168 00d8 54D0     		beq	.L9
 169              		.loc 1 328 3 is_stmt 0 discriminator 1
 170 00da 7B68     		ldr	r3, [r7, #4]
 171 00dc 9B6A     		ldr	r3, [r3, #40]
 172 00de B3F1807F 		cmp	r3, #16777216
 173 00e2 4FD0     		beq	.L9
 174              		.loc 1 328 3 discriminator 2
 175 00e4 7B68     		ldr	r3, [r7, #4]
 176 00e6 9B6A     		ldr	r3, [r3, #40]
 177 00e8 B3F1007F 		cmp	r3, #33554432
 178 00ec 4AD0     		beq	.L9
 179              		.loc 1 328 3 discriminator 3
 180 00ee 7B68     		ldr	r3, [r7, #4]
 181 00f0 9B6A     		ldr	r3, [r3, #40]
 182 00f2 B3F1407F 		cmp	r3, #50331648
ARM GAS  /tmp/ccRfYZzc.s 			page 10


 183 00f6 45D0     		beq	.L9
 184              		.loc 1 328 3 discriminator 4
 185 00f8 7B68     		ldr	r3, [r7, #4]
 186 00fa 9B6A     		ldr	r3, [r3, #40]
 187 00fc B3F1806F 		cmp	r3, #67108864
 188 0100 40D0     		beq	.L9
 189              		.loc 1 328 3 discriminator 5
 190 0102 7B68     		ldr	r3, [r7, #4]
 191 0104 9B6A     		ldr	r3, [r3, #40]
 192 0106 B3F1A06F 		cmp	r3, #83886080
 193 010a 3BD0     		beq	.L9
 194              		.loc 1 328 3 discriminator 6
 195 010c 7B68     		ldr	r3, [r7, #4]
 196 010e 9B6A     		ldr	r3, [r3, #40]
 197 0110 B3F1C06F 		cmp	r3, #100663296
 198 0114 36D0     		beq	.L9
 199              		.loc 1 328 3 discriminator 7
 200 0116 7B68     		ldr	r3, [r7, #4]
 201 0118 9B6A     		ldr	r3, [r3, #40]
 202 011a B3F1E06F 		cmp	r3, #117440512
 203 011e 31D0     		beq	.L9
 204              		.loc 1 328 3 discriminator 8
 205 0120 7B68     		ldr	r3, [r7, #4]
 206 0122 9B6A     		ldr	r3, [r3, #40]
 207 0124 B3F1006F 		cmp	r3, #134217728
 208 0128 2CD0     		beq	.L9
 209              		.loc 1 328 3 discriminator 9
 210 012a 7B68     		ldr	r3, [r7, #4]
 211 012c 9B6A     		ldr	r3, [r3, #40]
 212 012e B3F1106F 		cmp	r3, #150994944
 213 0132 27D0     		beq	.L9
 214              		.loc 1 328 3 discriminator 10
 215 0134 7B68     		ldr	r3, [r7, #4]
 216 0136 9B6A     		ldr	r3, [r3, #40]
 217 0138 B3F1206F 		cmp	r3, #167772160
 218 013c 22D0     		beq	.L9
 219              		.loc 1 328 3 discriminator 11
 220 013e 7B68     		ldr	r3, [r7, #4]
 221 0140 9B6A     		ldr	r3, [r3, #40]
 222 0142 B3F1306F 		cmp	r3, #184549376
 223 0146 1DD0     		beq	.L9
 224              		.loc 1 328 3 discriminator 12
 225 0148 7B68     		ldr	r3, [r7, #4]
 226 014a 9B6A     		ldr	r3, [r3, #40]
 227 014c B3F1406F 		cmp	r3, #201326592
 228 0150 18D0     		beq	.L9
 229              		.loc 1 328 3 discriminator 13
 230 0152 7B68     		ldr	r3, [r7, #4]
 231 0154 9B6A     		ldr	r3, [r3, #40]
 232 0156 B3F1506F 		cmp	r3, #218103808
 233 015a 13D0     		beq	.L9
 234              		.loc 1 328 3 discriminator 14
 235 015c 7B68     		ldr	r3, [r7, #4]
 236 015e 9B6A     		ldr	r3, [r3, #40]
 237 0160 B3F1606F 		cmp	r3, #234881024
 238 0164 0ED0     		beq	.L9
 239              		.loc 1 328 3 discriminator 15
ARM GAS  /tmp/ccRfYZzc.s 			page 11


 240 0166 7B68     		ldr	r3, [r7, #4]
 241 0168 9B6A     		ldr	r3, [r3, #40]
 242 016a B3F1706F 		cmp	r3, #251658240
 243 016e 09D0     		beq	.L9
 244              		.loc 1 328 3 discriminator 16
 245 0170 7B68     		ldr	r3, [r7, #4]
 246 0172 9B6A     		ldr	r3, [r3, #40]
 247 0174 514A     		ldr	r2, .L20+16
 248 0176 9342     		cmp	r3, r2
 249 0178 04D0     		beq	.L9
 250              		.loc 1 328 3 discriminator 17
 251 017a 4FF4A471 		mov	r1, #328
 252 017e 4E48     		ldr	r0, .L20+12
 253 0180 FFF7FEFF 		bl	assert_failed
 254              	.L9:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 255              		.loc 1 329 3 is_stmt 1
 256 0184 7B68     		ldr	r3, [r7, #4]
 257 0186 DB68     		ldr	r3, [r3, #12]
 258 0188 002B     		cmp	r3, #0
 259 018a 09D0     		beq	.L10
 260              		.loc 1 329 3 is_stmt 0 discriminator 1
 261 018c 7B68     		ldr	r3, [r7, #4]
 262 018e DB68     		ldr	r3, [r3, #12]
 263 0190 B3F5006F 		cmp	r3, #2048
 264 0194 04D0     		beq	.L10
 265              		.loc 1 329 3 discriminator 2
 266 0196 40F24911 		movw	r1, #329
 267 019a 4748     		ldr	r0, .L20+12
 268 019c FFF7FEFF 		bl	assert_failed
 269              	.L10:
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 270              		.loc 1 330 3 is_stmt 1
 271 01a0 7B68     		ldr	r3, [r7, #4]
 272 01a2 DB69     		ldr	r3, [r3, #28]
 273 01a4 002B     		cmp	r3, #0
 274 01a6 03D0     		beq	.L11
 275              		.loc 1 330 3 is_stmt 0 discriminator 2
 276 01a8 7B68     		ldr	r3, [r7, #4]
 277 01aa DB69     		ldr	r3, [r3, #28]
 278 01ac 102B     		cmp	r3, #16
 279 01ae 04D9     		bls	.L12
 280              	.L11:
 281              		.loc 1 330 3 discriminator 3
 282 01b0 4FF4A571 		mov	r1, #330
 283 01b4 4048     		ldr	r0, .L20+12
 284 01b6 FFF7FEFF 		bl	assert_failed
 285              	.L12:
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 286              		.loc 1 331 3 is_stmt 1
 287 01ba 7B68     		ldr	r3, [r7, #4]
 288 01bc 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 289 01c0 002B     		cmp	r3, #0
 290 01c2 09D0     		beq	.L13
 291              		.loc 1 331 3 is_stmt 0 discriminator 1
 292 01c4 7B68     		ldr	r3, [r7, #4]
 293 01c6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
ARM GAS  /tmp/ccRfYZzc.s 			page 12


 294 01ca 012B     		cmp	r3, #1
 295 01cc 04D0     		beq	.L13
 296              		.loc 1 331 3 discriminator 2
 297 01ce 40F24B11 		movw	r1, #331
 298 01d2 3948     		ldr	r0, .L20+12
 299 01d4 FFF7FEFF 		bl	assert_failed
 300              	.L13:
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 301              		.loc 1 332 3 is_stmt 1
 302 01d8 7B68     		ldr	r3, [r7, #4]
 303 01da 5B69     		ldr	r3, [r3, #20]
 304 01dc 012B     		cmp	r3, #1
 305 01de 0CD0     		beq	.L14
 306              		.loc 1 332 3 is_stmt 0 discriminator 1
 307 01e0 7B68     		ldr	r3, [r7, #4]
 308 01e2 5B69     		ldr	r3, [r3, #20]
 309 01e4 002B     		cmp	r3, #0
 310 01e6 08D0     		beq	.L14
 311              		.loc 1 332 3 discriminator 2
 312 01e8 7B68     		ldr	r3, [r7, #4]
 313 01ea 5B69     		ldr	r3, [r3, #20]
 314 01ec 022B     		cmp	r3, #2
 315 01ee 04D0     		beq	.L14
 316              		.loc 1 332 3 discriminator 3
 317 01f0 4FF4A671 		mov	r1, #332
 318 01f4 3048     		ldr	r0, .L20+12
 319 01f6 FFF7FEFF 		bl	assert_failed
 320              	.L14:
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 321              		.loc 1 333 3 is_stmt 1
 322 01fa 7B68     		ldr	r3, [r7, #4]
 323 01fc 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 324 0200 002B     		cmp	r3, #0
 325 0202 09D0     		beq	.L15
 326              		.loc 1 333 3 is_stmt 0 discriminator 1
 327 0204 7B68     		ldr	r3, [r7, #4]
 328 0206 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 329 020a 012B     		cmp	r3, #1
 330 020c 04D0     		beq	.L15
 331              		.loc 1 333 3 discriminator 2
 332 020e 40F24D11 		movw	r1, #333
 333 0212 2948     		ldr	r0, .L20+12
 334 0214 FFF7FEFF 		bl	assert_failed
 335              	.L15:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 336              		.loc 1 335 16 is_stmt 1
 337 0218 7B68     		ldr	r3, [r7, #4]
 338 021a 9B6A     		ldr	r3, [r3, #40]
 339              		.loc 1 335 5
 340 021c 274A     		ldr	r2, .L20+16
 341 021e 9342     		cmp	r3, r2
 342 0220 17D0     		beq	.L16
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 343              		.loc 1 337 5
 344 0222 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 13


 345 0224 DB6A     		ldr	r3, [r3, #44]
 346 0226 002B     		cmp	r3, #0
 347 0228 13D0     		beq	.L16
 348              		.loc 1 337 5 is_stmt 0 discriminator 1
 349 022a 7B68     		ldr	r3, [r7, #4]
 350 022c DB6A     		ldr	r3, [r3, #44]
 351 022e B3F1805F 		cmp	r3, #268435456
 352 0232 0ED0     		beq	.L16
 353              		.loc 1 337 5 discriminator 2
 354 0234 7B68     		ldr	r3, [r7, #4]
 355 0236 DB6A     		ldr	r3, [r3, #44]
 356 0238 B3F1005F 		cmp	r3, #536870912
 357 023c 09D0     		beq	.L16
 358              		.loc 1 337 5 discriminator 3
 359 023e 7B68     		ldr	r3, [r7, #4]
 360 0240 DB6A     		ldr	r3, [r3, #44]
 361 0242 B3F1405F 		cmp	r3, #805306368
 362 0246 04D0     		beq	.L16
 363              		.loc 1 337 5 discriminator 4
 364 0248 40F25111 		movw	r1, #337
 365 024c 1A48     		ldr	r0, .L20+12
 366 024e FFF7FEFF 		bl	assert_failed
 367              	.L16:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 368              		.loc 1 340 10 is_stmt 1
 369 0252 7B68     		ldr	r3, [r7, #4]
 370 0254 1B6C     		ldr	r3, [r3, #64]
 371              		.loc 1 340 5
 372 0256 002B     		cmp	r3, #0
 373 0258 09D1     		bne	.L17
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 374              		.loc 1 358 5
 375 025a 7868     		ldr	r0, [r7, #4]
 376 025c FFF7FEFF 		bl	HAL_ADC_MspInit
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
ARM GAS  /tmp/ccRfYZzc.s 			page 14


 377              		.loc 1 362 5
 378 0260 7B68     		ldr	r3, [r7, #4]
 379 0262 0022     		movs	r2, #0
 380 0264 5A64     		str	r2, [r3, #68]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 381              		.loc 1 365 16
 382 0266 7B68     		ldr	r3, [r7, #4]
 383 0268 0022     		movs	r2, #0
 384 026a 83F83C20 		strb	r2, [r3, #60]
 385              	.L17:
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 386              		.loc 1 370 7
 387 026e 7B68     		ldr	r3, [r7, #4]
 388 0270 1B6C     		ldr	r3, [r3, #64]
 389 0272 03F01003 		and	r3, r3, #16
 390              		.loc 1 370 6
 391 0276 002B     		cmp	r3, #0
 392 0278 22D1     		bne	.L18
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 393              		.loc 1 373 5
 394 027a 7B68     		ldr	r3, [r7, #4]
 395 027c 1B6C     		ldr	r3, [r3, #64]
 396 027e 23F48853 		bic	r3, r3, #4352
 397 0282 23F00203 		bic	r3, r3, #2
 398 0286 43F00202 		orr	r2, r3, #2
 399 028a 7B68     		ldr	r3, [r7, #4]
 400 028c 1A64     		str	r2, [r3, #64]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
 401              		.loc 1 378 5
 402 028e 7868     		ldr	r0, [r7, #4]
 403 0290 FFF7FEFF 		bl	ADC_Init
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 404              		.loc 1 381 5
 405 0294 7B68     		ldr	r3, [r7, #4]
 406 0296 0022     		movs	r2, #0
 407 0298 5A64     		str	r2, [r3, #68]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 408              		.loc 1 384 5
 409 029a 7B68     		ldr	r3, [r7, #4]
 410 029c 1B6C     		ldr	r3, [r3, #64]
 411 029e 23F00303 		bic	r3, r3, #3
ARM GAS  /tmp/ccRfYZzc.s 			page 15


 412 02a2 43F00102 		orr	r2, r3, #1
 413 02a6 7B68     		ldr	r3, [r7, #4]
 414 02a8 1A64     		str	r2, [r3, #64]
 415 02aa 0BE0     		b	.L19
 416              	.L21:
 417              		.align	2
 418              	.L20:
 419 02ac 00200140 		.word	1073815552
 420 02b0 00210140 		.word	1073815808
 421 02b4 00220140 		.word	1073816064
 422 02b8 00000000 		.word	.LC0
 423 02bc 0100000F 		.word	251658241
 424              	.L18:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 425              		.loc 1 390 20
 426 02c0 0123     		movs	r3, #1
 427 02c2 FB73     		strb	r3, [r7, #15]
 428              	.L19:
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 429              		.loc 1 394 3
 430 02c4 7B68     		ldr	r3, [r7, #4]
 431 02c6 0022     		movs	r2, #0
 432 02c8 83F83C20 		strb	r2, [r3, #60]
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 433              		.loc 1 397 10
 434 02cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 435              	.L3:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 436              		.loc 1 398 1
 437 02ce 1846     		mov	r0, r3
 438 02d0 1037     		adds	r7, r7, #16
 439              	.LCFI3:
 440              		.cfi_def_cfa_offset 8
 441 02d2 BD46     		mov	sp, r7
 442              	.LCFI4:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 02d4 80BD     		pop	{r7, pc}
 446              		.cfi_endproc
 447              	.LFE130:
 449 02d6 00BF     		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 450              		.align	1
 451              		.global	HAL_ADC_DeInit
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccRfYZzc.s 			page 16


 457              	HAL_ADC_DeInit:
 458              	.LFB131:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 459              		.loc 1 407 1
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 16
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
 464              	.LCFI5:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 84B0     		sub	sp, sp, #16
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 24
 471 0004 00AF     		add	r7, sp, #0
 472              	.LCFI7:
 473              		.cfi_def_cfa_register 7
 474 0006 7860     		str	r0, [r7, #4]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 475              		.loc 1 408 21
 476 0008 0023     		movs	r3, #0
 477 000a FB73     		strb	r3, [r7, #15]
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 478              		.loc 1 411 5
 479 000c 7B68     		ldr	r3, [r7, #4]
 480 000e 002B     		cmp	r3, #0
 481 0010 01D1     		bne	.L23
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 482              		.loc 1 413 12
 483 0012 0123     		movs	r3, #1
 484 0014 36E0     		b	.L24
 485              	.L23:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 486              		.loc 1 417 3
 487 0016 7B68     		ldr	r3, [r7, #4]
 488 0018 1B68     		ldr	r3, [r3]
 489 001a 1C4A     		ldr	r2, .L27
 490 001c 9342     		cmp	r3, r2
 491 001e 0ED0     		beq	.L25
 492              		.loc 1 417 3 is_stmt 0 discriminator 1
 493 0020 7B68     		ldr	r3, [r7, #4]
 494 0022 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 17


 495 0024 1A4A     		ldr	r2, .L27+4
 496 0026 9342     		cmp	r3, r2
 497 0028 09D0     		beq	.L25
 498              		.loc 1 417 3 discriminator 2
 499 002a 7B68     		ldr	r3, [r7, #4]
 500 002c 1B68     		ldr	r3, [r3]
 501 002e 194A     		ldr	r2, .L27+8
 502 0030 9342     		cmp	r3, r2
 503 0032 04D0     		beq	.L25
 504              		.loc 1 417 3 discriminator 3
 505 0034 40F2A111 		movw	r1, #417
 506 0038 1748     		ldr	r0, .L27+12
 507 003a FFF7FEFF 		bl	assert_failed
 508              	.L25:
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 509              		.loc 1 420 3 is_stmt 1
 510 003e 7B68     		ldr	r3, [r7, #4]
 511 0040 1B6C     		ldr	r3, [r3, #64]
 512 0042 43F00202 		orr	r2, r3, #2
 513 0046 7B68     		ldr	r3, [r7, #4]
 514 0048 1A64     		str	r2, [r3, #64]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 515              		.loc 1 424 3
 516 004a 7B68     		ldr	r3, [r7, #4]
 517 004c 1B68     		ldr	r3, [r3]
 518 004e 9A68     		ldr	r2, [r3, #8]
 519 0050 7B68     		ldr	r3, [r7, #4]
 520 0052 1B68     		ldr	r3, [r3]
 521 0054 22F00102 		bic	r2, r2, #1
 522 0058 9A60     		str	r2, [r3, #8]
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 523              		.loc 1 428 6
 524 005a 7B68     		ldr	r3, [r7, #4]
 525 005c 1B68     		ldr	r3, [r3]
 526 005e 9B68     		ldr	r3, [r3, #8]
 527 0060 03F00103 		and	r3, r3, #1
 528              		.loc 1 428 5
 529 0064 002B     		cmp	r3, #0
 530 0066 08D1     		bne	.L26
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
ARM GAS  /tmp/ccRfYZzc.s 			page 18


 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 531              		.loc 1 440 3
 532 0068 7868     		ldr	r0, [r7, #4]
 533 006a FFF7FEFF 		bl	HAL_ADC_MspDeInit
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 534              		.loc 1 444 5
 535 006e 7B68     		ldr	r3, [r7, #4]
 536 0070 0022     		movs	r2, #0
 537 0072 5A64     		str	r2, [r3, #68]
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 538              		.loc 1 447 17
 539 0074 7B68     		ldr	r3, [r7, #4]
 540 0076 0022     		movs	r2, #0
 541 0078 1A64     		str	r2, [r3, #64]
 542              	.L26:
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 543              		.loc 1 451 3
 544 007a 7B68     		ldr	r3, [r7, #4]
 545 007c 0022     		movs	r2, #0
 546 007e 83F83C20 		strb	r2, [r3, #60]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 547              		.loc 1 454 10
 548 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 549              	.L24:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 550              		.loc 1 455 1
 551 0084 1846     		mov	r0, r3
 552 0086 1037     		adds	r7, r7, #16
 553              	.LCFI8:
 554              		.cfi_def_cfa_offset 8
 555 0088 BD46     		mov	sp, r7
 556              	.LCFI9:
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 008a 80BD     		pop	{r7, pc}
 560              	.L28:
 561              		.align	2
 562              	.L27:
 563 008c 00200140 		.word	1073815552
 564 0090 00210140 		.word	1073815808
 565 0094 00220140 		.word	1073816064
 566 0098 00000000 		.word	.LC0
 567              		.cfi_endproc
 568              	.LFE131:
 570              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 571              		.align	1
ARM GAS  /tmp/ccRfYZzc.s 			page 19


 572              		.weak	HAL_ADC_MspInit
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	HAL_ADC_MspInit:
 579              	.LFB132:
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (pCallback == NULL)
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
ARM GAS  /tmp/ccRfYZzc.s 			page 20


 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
ARM GAS  /tmp/ccRfYZzc.s 			page 21


 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
ARM GAS  /tmp/ccRfYZzc.s 			page 22


 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 580              		.loc 1 664 1
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 8
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585 0000 80B4     		push	{r7}
 586              	.LCFI10:
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
 589 0002 83B0     		sub	sp, sp, #12
 590              	.LCFI11:
 591              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccRfYZzc.s 			page 23


 592 0004 00AF     		add	r7, sp, #0
 593              	.LCFI12:
 594              		.cfi_def_cfa_register 7
 595 0006 7860     		str	r0, [r7, #4]
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 596              		.loc 1 670 1
 597 0008 00BF     		nop
 598 000a 0C37     		adds	r7, r7, #12
 599              	.LCFI13:
 600              		.cfi_def_cfa_offset 4
 601 000c BD46     		mov	sp, r7
 602              	.LCFI14:
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 000e 5DF8047B 		ldr	r7, [sp], #4
 606              	.LCFI15:
 607              		.cfi_restore 7
 608              		.cfi_def_cfa_offset 0
 609 0012 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE132:
 613              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 614              		.align	1
 615              		.weak	HAL_ADC_MspDeInit
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	HAL_ADC_MspDeInit:
 622              	.LFB133:
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 623              		.loc 1 679 1
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI16:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              	.LCFI17:
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccRfYZzc.s 			page 24


 636              	.LCFI18:
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 639              		.loc 1 685 1
 640 0008 00BF     		nop
 641 000a 0C37     		adds	r7, r7, #12
 642              	.LCFI19:
 643              		.cfi_def_cfa_offset 4
 644 000c BD46     		mov	sp, r7
 645              	.LCFI20:
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 000e 5DF8047B 		ldr	r7, [sp], #4
 649              	.LCFI21:
 650              		.cfi_restore 7
 651              		.cfi_def_cfa_offset 0
 652 0012 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE133:
 656              		.section	.text.HAL_ADC_Start,"ax",%progbits
 657              		.align	1
 658              		.global	HAL_ADC_Start
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	HAL_ADC_Start:
 665              	.LFB134:
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
ARM GAS  /tmp/ccRfYZzc.s 			page 25


 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 666              		.loc 1 718 1
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 80B5     		push	{r7, lr}
 671              	.LCFI22:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 84B0     		sub	sp, sp, #16
 676              	.LCFI23:
 677              		.cfi_def_cfa_offset 24
 678 0004 00AF     		add	r7, sp, #0
 679              	.LCFI24:
 680              		.cfi_def_cfa_register 7
 681 0006 7860     		str	r0, [r7, #4]
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 682              		.loc 1 719 17
 683 0008 0023     		movs	r3, #0
 684 000a BB60     		str	r3, [r7, #8]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 685              		.loc 1 723 3
 686 000c 7B68     		ldr	r3, [r7, #4]
 687 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 688 0010 002B     		cmp	r3, #0
 689 0012 08D0     		beq	.L32
 690              		.loc 1 723 3 is_stmt 0 discriminator 1
 691 0014 7B68     		ldr	r3, [r7, #4]
 692 0016 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 693 0018 012B     		cmp	r3, #1
 694 001a 04D0     		beq	.L32
 695              		.loc 1 723 3 discriminator 2
 696 001c 40F2D321 		movw	r1, #723
 697 0020 6548     		ldr	r0, .L46
 698 0022 FFF7FEFF 		bl	assert_failed
 699              	.L32:
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 700              		.loc 1 724 3 is_stmt 1
 701 0026 7B68     		ldr	r3, [r7, #4]
 702 0028 DB6A     		ldr	r3, [r3, #44]
 703 002a 002B     		cmp	r3, #0
 704 002c 13D0     		beq	.L33
 705              		.loc 1 724 3 is_stmt 0 discriminator 1
 706 002e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 26


 707 0030 DB6A     		ldr	r3, [r3, #44]
 708 0032 B3F1805F 		cmp	r3, #268435456
 709 0036 0ED0     		beq	.L33
 710              		.loc 1 724 3 discriminator 2
 711 0038 7B68     		ldr	r3, [r7, #4]
 712 003a DB6A     		ldr	r3, [r3, #44]
 713 003c B3F1005F 		cmp	r3, #536870912
 714 0040 09D0     		beq	.L33
 715              		.loc 1 724 3 discriminator 3
 716 0042 7B68     		ldr	r3, [r7, #4]
 717 0044 DB6A     		ldr	r3, [r3, #44]
 718 0046 B3F1405F 		cmp	r3, #805306368
 719 004a 04D0     		beq	.L33
 720              		.loc 1 724 3 discriminator 4
 721 004c 4FF43571 		mov	r1, #724
 722 0050 5948     		ldr	r0, .L46
 723 0052 FFF7FEFF 		bl	assert_failed
 724              	.L33:
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 725              		.loc 1 727 3 is_stmt 1
 726 0056 7B68     		ldr	r3, [r7, #4]
 727 0058 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 728 005c 012B     		cmp	r3, #1
 729 005e 01D1     		bne	.L34
 730              		.loc 1 727 3 is_stmt 0 discriminator 1
 731 0060 0223     		movs	r3, #2
 732 0062 A5E0     		b	.L35
 733              	.L34:
 734              		.loc 1 727 3 discriminator 2
 735 0064 7B68     		ldr	r3, [r7, #4]
 736 0066 0122     		movs	r2, #1
 737 0068 83F83C20 		strb	r2, [r3, #60]
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 738              		.loc 1 732 11 is_stmt 1 discriminator 2
 739 006c 7B68     		ldr	r3, [r7, #4]
 740 006e 1B68     		ldr	r3, [r3]
 741              		.loc 1 732 21 discriminator 2
 742 0070 9B68     		ldr	r3, [r3, #8]
 743              		.loc 1 732 27 discriminator 2
 744 0072 03F00103 		and	r3, r3, #1
 745              		.loc 1 732 5 discriminator 2
 746 0076 012B     		cmp	r3, #1
 747 0078 18D0     		beq	.L36
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 748              		.loc 1 735 5
 749 007a 7B68     		ldr	r3, [r7, #4]
 750 007c 1B68     		ldr	r3, [r3]
 751 007e 9A68     		ldr	r2, [r3, #8]
 752 0080 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 27


 753 0082 1B68     		ldr	r3, [r3]
 754 0084 42F00102 		orr	r2, r2, #1
 755 0088 9A60     		str	r2, [r3, #8]
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 756              		.loc 1 739 53
 757 008a 4C4B     		ldr	r3, .L46+4
 758 008c 1B68     		ldr	r3, [r3]
 759 008e 4C4A     		ldr	r2, .L46+8
 760 0090 A2FB0323 		umull	r2, r3, r2, r3
 761 0094 9A0C     		lsrs	r2, r3, #18
 762              		.loc 1 739 34
 763 0096 1346     		mov	r3, r2
 764 0098 5B00     		lsls	r3, r3, #1
 765 009a 1344     		add	r3, r3, r2
 766              		.loc 1 739 13
 767 009c BB60     		str	r3, [r7, #8]
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 768              		.loc 1 740 10
 769 009e 02E0     		b	.L37
 770              	.L38:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 771              		.loc 1 742 14
 772 00a0 BB68     		ldr	r3, [r7, #8]
 773 00a2 013B     		subs	r3, r3, #1
 774 00a4 BB60     		str	r3, [r7, #8]
 775              	.L37:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 776              		.loc 1 740 19
 777 00a6 BB68     		ldr	r3, [r7, #8]
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 778              		.loc 1 740 10
 779 00a8 002B     		cmp	r3, #0
 780 00aa F9D1     		bne	.L38
 781              	.L36:
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 782              		.loc 1 747 6
 783 00ac 7B68     		ldr	r3, [r7, #4]
 784 00ae 1B68     		ldr	r3, [r3]
 785 00b0 9B68     		ldr	r3, [r3, #8]
 786 00b2 03F00103 		and	r3, r3, #1
 787              		.loc 1 747 5
 788 00b6 012B     		cmp	r3, #1
 789 00b8 79D1     		bne	.L39
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 790              		.loc 1 752 5
ARM GAS  /tmp/ccRfYZzc.s 			page 28


 791 00ba 7B68     		ldr	r3, [r7, #4]
 792 00bc 1B6C     		ldr	r3, [r3, #64]
 793 00be 23F4E063 		bic	r3, r3, #1792
 794 00c2 23F00103 		bic	r3, r3, #1
 795 00c6 43F48072 		orr	r2, r3, #256
 796 00ca 7B68     		ldr	r3, [r7, #4]
 797 00cc 1A64     		str	r2, [r3, #64]
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 798              		.loc 1 758 9
 799 00ce 7B68     		ldr	r3, [r7, #4]
 800 00d0 1B68     		ldr	r3, [r3]
 801 00d2 5B68     		ldr	r3, [r3, #4]
 802 00d4 03F48063 		and	r3, r3, #1024
 803              		.loc 1 758 8
 804 00d8 002B     		cmp	r3, #0
 805 00da 07D0     		beq	.L40
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 806              		.loc 1 760 7
 807 00dc 7B68     		ldr	r3, [r7, #4]
 808 00de 1B6C     		ldr	r3, [r3, #64]
 809 00e0 23F44053 		bic	r3, r3, #12288
 810 00e4 43F48052 		orr	r2, r3, #4096
 811 00e8 7B68     		ldr	r3, [r7, #4]
 812 00ea 1A64     		str	r2, [r3, #64]
 813              	.L40:
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 814              		.loc 1 764 9
 815 00ec 7B68     		ldr	r3, [r7, #4]
 816 00ee 1B6C     		ldr	r3, [r3, #64]
 817 00f0 03F48053 		and	r3, r3, #4096
 818              		.loc 1 764 8
 819 00f4 B3F5805F 		cmp	r3, #4096
 820 00f8 06D1     		bne	.L41
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 821              		.loc 1 767 7
 822 00fa 7B68     		ldr	r3, [r7, #4]
 823 00fc 5B6C     		ldr	r3, [r3, #68]
 824 00fe 23F00602 		bic	r2, r3, #6
 825 0102 7B68     		ldr	r3, [r7, #4]
 826 0104 5A64     		str	r2, [r3, #68]
 827 0106 02E0     		b	.L42
 828              	.L41:
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
ARM GAS  /tmp/ccRfYZzc.s 			page 29


 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 829              		.loc 1 772 7
 830 0108 7B68     		ldr	r3, [r7, #4]
 831 010a 0022     		movs	r2, #0
 832 010c 5A64     		str	r2, [r3, #68]
 833              	.L42:
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 834              		.loc 1 778 5
 835 010e 7B68     		ldr	r3, [r7, #4]
 836 0110 0022     		movs	r2, #0
 837 0112 83F83C20 		strb	r2, [r3, #60]
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 838              		.loc 1 783 19
 839 0116 2B4B     		ldr	r3, .L46+12
 840 0118 FB60     		str	r3, [r7, #12]
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 841              		.loc 1 787 5
 842 011a 7B68     		ldr	r3, [r7, #4]
 843 011c 1B68     		ldr	r3, [r3]
 844 011e 6FF02202 		mvn	r2, #34
 845 0122 1A60     		str	r2, [r3]
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 846              		.loc 1 790 8
 847 0124 FB68     		ldr	r3, [r7, #12]
 848 0126 5B68     		ldr	r3, [r3, #4]
 849 0128 03F01F03 		and	r3, r3, #31
 850              		.loc 1 790 7
 851 012c 002B     		cmp	r3, #0
 852 012e 2AD1     		bne	.L43
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 853              		.loc 1 793 15
 854 0130 7B68     		ldr	r3, [r7, #4]
 855 0132 1B68     		ldr	r3, [r3]
 856              		.loc 1 793 9
 857 0134 244A     		ldr	r2, .L46+16
 858 0136 9342     		cmp	r3, r2
 859 0138 15D0     		beq	.L44
 860              		.loc 1 793 44 discriminator 1
 861 013a 7B68     		ldr	r3, [r7, #4]
 862 013c 1B68     		ldr	r3, [r3]
 863              		.loc 1 793 35 discriminator 1
ARM GAS  /tmp/ccRfYZzc.s 			page 30


 864 013e 234A     		ldr	r2, .L46+20
 865 0140 9342     		cmp	r3, r2
 866 0142 05D1     		bne	.L45
 867              		.loc 1 793 72 discriminator 2
 868 0144 1F4B     		ldr	r3, .L46+12
 869 0146 5B68     		ldr	r3, [r3, #4]
 870              		.loc 1 793 78 discriminator 2
 871 0148 03F01F03 		and	r3, r3, #31
 872              		.loc 1 793 64 discriminator 2
 873 014c 002B     		cmp	r3, #0
 874 014e 0AD0     		beq	.L44
 875              	.L45:
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 876              		.loc 1 794 44
 877 0150 7B68     		ldr	r3, [r7, #4]
 878 0152 1B68     		ldr	r3, [r3]
 879              		.loc 1 794 35
 880 0154 1E4A     		ldr	r2, .L46+24
 881 0156 9342     		cmp	r3, r2
 882 0158 29D1     		bne	.L39
 883              		.loc 1 794 72 discriminator 1
 884 015a 1A4B     		ldr	r3, .L46+12
 885 015c 5B68     		ldr	r3, [r3, #4]
 886              		.loc 1 794 99 discriminator 1
 887 015e 03F01003 		and	r3, r3, #16
 888              		.loc 1 794 64 discriminator 1
 889 0162 002B     		cmp	r3, #0
 890 0164 23D1     		bne	.L39
 891              	.L44:
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 892              		.loc 1 798 17
 893 0166 7B68     		ldr	r3, [r7, #4]
 894 0168 1B68     		ldr	r3, [r3]
 895              		.loc 1 798 27
 896 016a 9B68     		ldr	r3, [r3, #8]
 897              		.loc 1 798 33
 898 016c 03F04053 		and	r3, r3, #805306368
 899              		.loc 1 798 11
 900 0170 002B     		cmp	r3, #0
 901 0172 1CD1     		bne	.L39
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 902              		.loc 1 801 15
 903 0174 7B68     		ldr	r3, [r7, #4]
 904 0176 1B68     		ldr	r3, [r3]
 905              		.loc 1 801 31
 906 0178 9A68     		ldr	r2, [r3, #8]
 907              		.loc 1 801 15
 908 017a 7B68     		ldr	r3, [r7, #4]
 909 017c 1B68     		ldr	r3, [r3]
 910              		.loc 1 801 31
 911 017e 42F08042 		orr	r2, r2, #1073741824
 912 0182 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccRfYZzc.s 			page 31


 913 0184 13E0     		b	.L39
 914              	.L43:
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 915              		.loc 1 810 15
 916 0186 7B68     		ldr	r3, [r7, #4]
 917 0188 1B68     		ldr	r3, [r3]
 918              		.loc 1 810 9
 919 018a 0F4A     		ldr	r2, .L46+16
 920 018c 9342     		cmp	r3, r2
 921 018e 0ED1     		bne	.L39
 922              		.loc 1 810 44 discriminator 1
 923 0190 7B68     		ldr	r3, [r7, #4]
 924 0192 1B68     		ldr	r3, [r3]
 925              		.loc 1 810 54 discriminator 1
 926 0194 9B68     		ldr	r3, [r3, #8]
 927              		.loc 1 810 60 discriminator 1
 928 0196 03F04053 		and	r3, r3, #805306368
 929              		.loc 1 810 35 discriminator 1
 930 019a 002B     		cmp	r3, #0
 931 019c 07D1     		bne	.L39
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 932              		.loc 1 813 15
 933 019e 7B68     		ldr	r3, [r7, #4]
 934 01a0 1B68     		ldr	r3, [r3]
 935              		.loc 1 813 31
 936 01a2 9A68     		ldr	r2, [r3, #8]
 937              		.loc 1 813 15
 938 01a4 7B68     		ldr	r3, [r7, #4]
 939 01a6 1B68     		ldr	r3, [r3]
 940              		.loc 1 813 31
 941 01a8 42F08042 		orr	r2, r2, #1073741824
 942 01ac 9A60     		str	r2, [r3, #8]
 943              	.L39:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 944              		.loc 1 819 10
 945 01ae 0023     		movs	r3, #0
 946              	.L35:
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 947              		.loc 1 820 1
 948 01b0 1846     		mov	r0, r3
 949 01b2 1037     		adds	r7, r7, #16
 950              	.LCFI25:
ARM GAS  /tmp/ccRfYZzc.s 			page 32


 951              		.cfi_def_cfa_offset 8
 952 01b4 BD46     		mov	sp, r7
 953              	.LCFI26:
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 01b6 80BD     		pop	{r7, pc}
 957              	.L47:
 958              		.align	2
 959              	.L46:
 960 01b8 00000000 		.word	.LC0
 961 01bc 00000000 		.word	SystemCoreClock
 962 01c0 83DE1B43 		.word	1125899907
 963 01c4 00230140 		.word	1073816320
 964 01c8 00200140 		.word	1073815552
 965 01cc 00210140 		.word	1073815808
 966 01d0 00220140 		.word	1073816064
 967              		.cfi_endproc
 968              	.LFE134:
 970              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 971              		.align	1
 972              		.global	HAL_ADC_Stop
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv4-sp-d16
 978              	HAL_ADC_Stop:
 979              	.LFB135:
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 980              		.loc 1 833 1
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              	.LCFI27:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 82B0     		sub	sp, sp, #8
 990              	.LCFI28:
 991              		.cfi_def_cfa_offset 16
 992 0004 00AF     		add	r7, sp, #0
 993              	.LCFI29:
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccRfYZzc.s 			page 33


 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 996              		.loc 1 835 3
 997 0008 7B68     		ldr	r3, [r7, #4]
 998 000a 1B68     		ldr	r3, [r3]
 999 000c 1F4A     		ldr	r2, .L53
 1000 000e 9342     		cmp	r3, r2
 1001 0010 0ED0     		beq	.L49
 1002              		.loc 1 835 3 is_stmt 0 discriminator 1
 1003 0012 7B68     		ldr	r3, [r7, #4]
 1004 0014 1B68     		ldr	r3, [r3]
 1005 0016 1E4A     		ldr	r2, .L53+4
 1006 0018 9342     		cmp	r3, r2
 1007 001a 09D0     		beq	.L49
 1008              		.loc 1 835 3 discriminator 2
 1009 001c 7B68     		ldr	r3, [r7, #4]
 1010 001e 1B68     		ldr	r3, [r3]
 1011 0020 1C4A     		ldr	r2, .L53+8
 1012 0022 9342     		cmp	r3, r2
 1013 0024 04D0     		beq	.L49
 1014              		.loc 1 835 3 discriminator 3
 1015 0026 40F24331 		movw	r1, #835
 1016 002a 1B48     		ldr	r0, .L53+12
 1017 002c FFF7FEFF 		bl	assert_failed
 1018              	.L49:
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1019              		.loc 1 838 3 is_stmt 1
 1020 0030 7B68     		ldr	r3, [r7, #4]
 1021 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1022 0036 012B     		cmp	r3, #1
 1023 0038 01D1     		bne	.L50
 1024              		.loc 1 838 3 is_stmt 0 discriminator 1
 1025 003a 0223     		movs	r3, #2
 1026 003c 21E0     		b	.L51
 1027              	.L50:
 1028              		.loc 1 838 3 discriminator 2
 1029 003e 7B68     		ldr	r3, [r7, #4]
 1030 0040 0122     		movs	r2, #1
 1031 0042 83F83C20 		strb	r2, [r3, #60]
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1032              		.loc 1 842 3 is_stmt 1 discriminator 2
 1033 0046 7B68     		ldr	r3, [r7, #4]
 1034 0048 1B68     		ldr	r3, [r3]
 1035 004a 9A68     		ldr	r2, [r3, #8]
 1036 004c 7B68     		ldr	r3, [r7, #4]
 1037 004e 1B68     		ldr	r3, [r3]
 1038 0050 22F00102 		bic	r2, r2, #1
 1039 0054 9A60     		str	r2, [r3, #8]
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1040              		.loc 1 845 6 discriminator 2
 1041 0056 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 34


 1042 0058 1B68     		ldr	r3, [r3]
 1043 005a 9B68     		ldr	r3, [r3, #8]
 1044 005c 03F00103 		and	r3, r3, #1
 1045              		.loc 1 845 5 discriminator 2
 1046 0060 002B     		cmp	r3, #0
 1047 0062 09D1     		bne	.L52
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1048              		.loc 1 848 5
 1049 0064 7B68     		ldr	r3, [r7, #4]
 1050 0066 1B6C     		ldr	r3, [r3, #64]
 1051 0068 23F48853 		bic	r3, r3, #4352
 1052 006c 23F00103 		bic	r3, r3, #1
 1053 0070 43F00102 		orr	r2, r3, #1
 1054 0074 7B68     		ldr	r3, [r7, #4]
 1055 0076 1A64     		str	r2, [r3, #64]
 1056              	.L52:
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1057              		.loc 1 854 3
 1058 0078 7B68     		ldr	r3, [r7, #4]
 1059 007a 0022     		movs	r2, #0
 1060 007c 83F83C20 		strb	r2, [r3, #60]
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1061              		.loc 1 857 10
 1062 0080 0023     		movs	r3, #0
 1063              	.L51:
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1064              		.loc 1 858 1
 1065 0082 1846     		mov	r0, r3
 1066 0084 0837     		adds	r7, r7, #8
 1067              	.LCFI30:
 1068              		.cfi_def_cfa_offset 8
 1069 0086 BD46     		mov	sp, r7
 1070              	.LCFI31:
 1071              		.cfi_def_cfa_register 13
 1072              		@ sp needed
 1073 0088 80BD     		pop	{r7, pc}
 1074              	.L54:
 1075 008a 00BF     		.align	2
 1076              	.L53:
 1077 008c 00200140 		.word	1073815552
 1078 0090 00210140 		.word	1073815808
 1079 0094 00220140 		.word	1073816064
 1080 0098 00000000 		.word	.LC0
 1081              		.cfi_endproc
 1082              	.LFE135:
 1084              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 1085              		.align	1
 1086              		.global	HAL_ADC_PollForConversion
ARM GAS  /tmp/ccRfYZzc.s 			page 35


 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu fpv4-sp-d16
 1092              	HAL_ADC_PollForConversion:
 1093              	.LFB136:
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1094              		.loc 1 876 1
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 0000 80B5     		push	{r7, lr}
 1099              	.LCFI32:
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 84B0     		sub	sp, sp, #16
 1104              	.LCFI33:
 1105              		.cfi_def_cfa_offset 24
 1106 0004 00AF     		add	r7, sp, #0
 1107              	.LCFI34:
 1108              		.cfi_def_cfa_register 7
 1109 0006 7860     		str	r0, [r7, #4]
 1110 0008 3960     		str	r1, [r7]
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1111              		.loc 1 877 12
 1112 000a 0023     		movs	r3, #0
 1113 000c FB60     		str	r3, [r7, #12]
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 1114              		.loc 1 885 7
 1115 000e 7B68     		ldr	r3, [r7, #4]
 1116 0010 1B68     		ldr	r3, [r3]
 1117 0012 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccRfYZzc.s 			page 36


 1118 0014 03F48063 		and	r3, r3, #1024
 1119              		.loc 1 885 6
 1120 0018 B3F5806F 		cmp	r3, #1024
 1121 001c 13D1     		bne	.L56
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 1122              		.loc 1 886 7 discriminator 1
 1123 001e 7B68     		ldr	r3, [r7, #4]
 1124 0020 1B68     		ldr	r3, [r3]
 1125 0022 9B68     		ldr	r3, [r3, #8]
 1126 0024 03F48073 		and	r3, r3, #256
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 1127              		.loc 1 885 57 discriminator 1
 1128 0028 B3F5807F 		cmp	r3, #256
 1129 002c 0BD1     		bne	.L56
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1130              		.loc 1 889 5
 1131 002e 7B68     		ldr	r3, [r7, #4]
 1132 0030 1B6C     		ldr	r3, [r3, #64]
 1133 0032 43F02002 		orr	r2, r3, #32
 1134 0036 7B68     		ldr	r3, [r7, #4]
 1135 0038 1A64     		str	r2, [r3, #64]
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1136              		.loc 1 892 5
 1137 003a 7B68     		ldr	r3, [r7, #4]
 1138 003c 0022     		movs	r2, #0
 1139 003e 83F83C20 		strb	r2, [r3, #60]
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 1140              		.loc 1 894 12
 1141 0042 0123     		movs	r3, #1
 1142 0044 5CE0     		b	.L57
 1143              	.L56:
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1144              		.loc 1 898 15
 1145 0046 FFF7FEFF 		bl	HAL_GetTick
 1146 004a F860     		str	r0, [r7, #12]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 1147              		.loc 1 901 8
 1148 004c 1AE0     		b	.L58
 1149              	.L60:
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 1150              		.loc 1 904 7
 1151 004e 3B68     		ldr	r3, [r7]
 1152 0050 B3F1FF3F 		cmp	r3, #-1
 1153 0054 16D0     		beq	.L58
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccRfYZzc.s 			page 37


 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 1154              		.loc 1 906 9
 1155 0056 3B68     		ldr	r3, [r7]
 1156 0058 002B     		cmp	r3, #0
 1157 005a 07D0     		beq	.L59
 1158              		.loc 1 906 31 discriminator 1
 1159 005c FFF7FEFF 		bl	HAL_GetTick
 1160 0060 0246     		mov	r2, r0
 1161              		.loc 1 906 45 discriminator 1
 1162 0062 FB68     		ldr	r3, [r7, #12]
 1163 0064 D31A     		subs	r3, r2, r3
 1164              		.loc 1 906 26 discriminator 1
 1165 0066 3A68     		ldr	r2, [r7]
 1166 0068 9A42     		cmp	r2, r3
 1167 006a 0BD2     		bcs	.L58
 1168              	.L59:
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1169              		.loc 1 909 9
 1170 006c 7B68     		ldr	r3, [r7, #4]
 1171 006e 1B6C     		ldr	r3, [r3, #64]
 1172 0070 43F00402 		orr	r2, r3, #4
 1173 0074 7B68     		ldr	r3, [r7, #4]
 1174 0076 1A64     		str	r2, [r3, #64]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 1175              		.loc 1 912 9
 1176 0078 7B68     		ldr	r3, [r7, #4]
 1177 007a 0022     		movs	r2, #0
 1178 007c 83F83C20 		strb	r2, [r3, #60]
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 1179              		.loc 1 914 16
 1180 0080 0323     		movs	r3, #3
 1181 0082 3DE0     		b	.L57
 1182              	.L58:
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1183              		.loc 1 901 11
 1184 0084 7B68     		ldr	r3, [r7, #4]
 1185 0086 1B68     		ldr	r3, [r3]
 1186 0088 1B68     		ldr	r3, [r3]
 1187 008a 03F00203 		and	r3, r3, #2
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1188              		.loc 1 901 8
 1189 008e 022B     		cmp	r3, #2
 1190 0090 DDD1     		bne	.L60
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1191              		.loc 1 920 3
 1192 0092 7B68     		ldr	r3, [r7, #4]
 1193 0094 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 38


 1194 0096 6FF01202 		mvn	r2, #18
 1195 009a 1A60     		str	r2, [r3]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 1196              		.loc 1 923 3
 1197 009c 7B68     		ldr	r3, [r7, #4]
 1198 009e 1B6C     		ldr	r3, [r3, #64]
 1199 00a0 43F40072 		orr	r2, r3, #512
 1200 00a4 7B68     		ldr	r3, [r7, #4]
 1201 00a6 1A64     		str	r2, [r3, #64]
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 1202              		.loc 1 931 6
 1203 00a8 7B68     		ldr	r3, [r7, #4]
 1204 00aa 1B68     		ldr	r3, [r3]
 1205 00ac 9B68     		ldr	r3, [r3, #8]
 1206 00ae 03F04053 		and	r3, r3, #805306368
 1207              		.loc 1 931 5
 1208 00b2 002B     		cmp	r3, #0
 1209 00b4 23D1     		bne	.L61
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1210              		.loc 1 932 17 discriminator 1
 1211 00b6 7B68     		ldr	r3, [r7, #4]
 1212 00b8 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1213              		.loc 1 931 60 discriminator 1
 1214 00ba 002B     		cmp	r3, #0
 1215 00bc 1FD1     		bne	.L61
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 1216              		.loc 1 933 7
 1217 00be 7B68     		ldr	r3, [r7, #4]
 1218 00c0 1B68     		ldr	r3, [r3]
 1219 00c2 DB6A     		ldr	r3, [r3, #44]
 1220 00c4 03F47003 		and	r3, r3, #15728640
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1221              		.loc 1 932 60
 1222 00c8 002B     		cmp	r3, #0
 1223 00ca 06D0     		beq	.L62
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1224              		.loc 1 934 7
 1225 00cc 7B68     		ldr	r3, [r7, #4]
 1226 00ce 1B68     		ldr	r3, [r3]
 1227 00d0 9B68     		ldr	r3, [r3, #8]
 1228 00d2 03F48063 		and	r3, r3, #1024
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 1229              		.loc 1 933 56
 1230 00d6 002B     		cmp	r3, #0
 1231 00d8 11D1     		bne	.L61
 1232              	.L62:
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccRfYZzc.s 			page 39


 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 1233              		.loc 1 937 5
 1234 00da 7B68     		ldr	r3, [r7, #4]
 1235 00dc 1B6C     		ldr	r3, [r3, #64]
 1236 00de 23F48072 		bic	r2, r3, #256
 1237 00e2 7B68     		ldr	r3, [r7, #4]
 1238 00e4 1A64     		str	r2, [r3, #64]
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1239              		.loc 1 939 9
 1240 00e6 7B68     		ldr	r3, [r7, #4]
 1241 00e8 1B6C     		ldr	r3, [r3, #64]
 1242 00ea 03F48053 		and	r3, r3, #4096
 1243              		.loc 1 939 8
 1244 00ee 002B     		cmp	r3, #0
 1245 00f0 05D1     		bne	.L61
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1246              		.loc 1 941 7
 1247 00f2 7B68     		ldr	r3, [r7, #4]
 1248 00f4 1B6C     		ldr	r3, [r3, #64]
 1249 00f6 43F00102 		orr	r2, r3, #1
 1250 00fa 7B68     		ldr	r3, [r7, #4]
 1251 00fc 1A64     		str	r2, [r3, #64]
 1252              	.L61:
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1253              		.loc 1 946 10
 1254 00fe 0023     		movs	r3, #0
 1255              	.L57:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1256              		.loc 1 947 1
 1257 0100 1846     		mov	r0, r3
 1258 0102 1037     		adds	r7, r7, #16
 1259              	.LCFI35:
 1260              		.cfi_def_cfa_offset 8
 1261 0104 BD46     		mov	sp, r7
 1262              	.LCFI36:
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 0106 80BD     		pop	{r7, pc}
 1266              		.cfi_endproc
 1267              	.LFE136:
 1269              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1270              		.align	1
 1271              		.global	HAL_ADC_PollForEvent
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1275              		.fpu fpv4-sp-d16
 1277              	HAL_ADC_PollForEvent:
 1278              	.LFB137:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccRfYZzc.s 			page 40


 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1279              		.loc 1 961 1
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 24
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0000 80B5     		push	{r7, lr}
 1284              	.LCFI37:
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 86B0     		sub	sp, sp, #24
 1289              	.LCFI38:
 1290              		.cfi_def_cfa_offset 32
 1291 0004 00AF     		add	r7, sp, #0
 1292              	.LCFI39:
 1293              		.cfi_def_cfa_register 7
 1294 0006 F860     		str	r0, [r7, #12]
 1295 0008 B960     		str	r1, [r7, #8]
 1296 000a 7A60     		str	r2, [r7, #4]
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1297              		.loc 1 962 12
 1298 000c 0023     		movs	r3, #0
 1299 000e 7B61     		str	r3, [r7, #20]
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1300              		.loc 1 965 3
 1301 0010 FB68     		ldr	r3, [r7, #12]
 1302 0012 1B68     		ldr	r3, [r3]
 1303 0014 344A     		ldr	r2, .L72
 1304 0016 9342     		cmp	r3, r2
 1305 0018 0ED0     		beq	.L64
 1306              		.loc 1 965 3 is_stmt 0 discriminator 1
 1307 001a FB68     		ldr	r3, [r7, #12]
 1308 001c 1B68     		ldr	r3, [r3]
 1309 001e 334A     		ldr	r2, .L72+4
 1310 0020 9342     		cmp	r3, r2
 1311 0022 09D0     		beq	.L64
 1312              		.loc 1 965 3 discriminator 2
 1313 0024 FB68     		ldr	r3, [r7, #12]
 1314 0026 1B68     		ldr	r3, [r3]
 1315 0028 314A     		ldr	r2, .L72+8
 1316 002a 9342     		cmp	r3, r2
 1317 002c 04D0     		beq	.L64
 1318              		.loc 1 965 3 discriminator 3
ARM GAS  /tmp/ccRfYZzc.s 			page 41


 1319 002e 40F2C531 		movw	r1, #965
 1320 0032 3048     		ldr	r0, .L72+12
 1321 0034 FFF7FEFF 		bl	assert_failed
 1322              	.L64:
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1323              		.loc 1 966 3 is_stmt 1
 1324 0038 BB68     		ldr	r3, [r7, #8]
 1325 003a 012B     		cmp	r3, #1
 1326 003c 07D0     		beq	.L65
 1327              		.loc 1 966 3 is_stmt 0 discriminator 1
 1328 003e BB68     		ldr	r3, [r7, #8]
 1329 0040 202B     		cmp	r3, #32
 1330 0042 04D0     		beq	.L65
 1331              		.loc 1 966 3 discriminator 2
 1332 0044 40F2C631 		movw	r1, #966
 1333 0048 2A48     		ldr	r0, .L72+12
 1334 004a FFF7FEFF 		bl	assert_failed
 1335              	.L65:
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1336              		.loc 1 969 15 is_stmt 1
 1337 004e FFF7FEFF 		bl	HAL_GetTick
 1338 0052 7861     		str	r0, [r7, #20]
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 1339              		.loc 1 972 8
 1340 0054 1AE0     		b	.L66
 1341              	.L69:
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 1342              		.loc 1 975 7
 1343 0056 7B68     		ldr	r3, [r7, #4]
 1344 0058 B3F1FF3F 		cmp	r3, #-1
 1345 005c 16D0     		beq	.L66
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 1346              		.loc 1 977 9
 1347 005e 7B68     		ldr	r3, [r7, #4]
 1348 0060 002B     		cmp	r3, #0
 1349 0062 07D0     		beq	.L67
 1350              		.loc 1 977 31 discriminator 1
 1351 0064 FFF7FEFF 		bl	HAL_GetTick
 1352 0068 0246     		mov	r2, r0
 1353              		.loc 1 977 45 discriminator 1
 1354 006a 7B69     		ldr	r3, [r7, #20]
 1355 006c D31A     		subs	r3, r2, r3
 1356              		.loc 1 977 26 discriminator 1
 1357 006e 7A68     		ldr	r2, [r7, #4]
 1358 0070 9A42     		cmp	r2, r3
 1359 0072 0BD2     		bcs	.L66
 1360              	.L67:
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
ARM GAS  /tmp/ccRfYZzc.s 			page 42


 1361              		.loc 1 980 9
 1362 0074 FB68     		ldr	r3, [r7, #12]
 1363 0076 1B6C     		ldr	r3, [r3, #64]
 1364 0078 43F00402 		orr	r2, r3, #4
 1365 007c FB68     		ldr	r3, [r7, #12]
 1366 007e 1A64     		str	r2, [r3, #64]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 1367              		.loc 1 983 9
 1368 0080 FB68     		ldr	r3, [r7, #12]
 1369 0082 0022     		movs	r2, #0
 1370 0084 83F83C20 		strb	r2, [r3, #60]
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 1371              		.loc 1 985 16
 1372 0088 0323     		movs	r3, #3
 1373 008a 28E0     		b	.L68
 1374              	.L66:
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1375              		.loc 1 972 11
 1376 008c FB68     		ldr	r3, [r7, #12]
 1377 008e 1B68     		ldr	r3, [r3]
 1378 0090 1A68     		ldr	r2, [r3]
 1379 0092 BB68     		ldr	r3, [r7, #8]
 1380 0094 1340     		ands	r3, r3, r2
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1381              		.loc 1 972 8
 1382 0096 BA68     		ldr	r2, [r7, #8]
 1383 0098 9A42     		cmp	r2, r3
 1384 009a DCD1     		bne	.L69
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 1385              		.loc 1 991 5
 1386 009c BB68     		ldr	r3, [r7, #8]
 1387 009e 012B     		cmp	r3, #1
 1388 00a0 0BD1     		bne	.L70
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1389              		.loc 1 994 5
 1390 00a2 FB68     		ldr	r3, [r7, #12]
 1391 00a4 1B6C     		ldr	r3, [r3, #64]
 1392 00a6 43F48032 		orr	r2, r3, #65536
 1393 00aa FB68     		ldr	r3, [r7, #12]
 1394 00ac 1A64     		str	r2, [r3, #64]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1395              		.loc 1 997 5
 1396 00ae FB68     		ldr	r3, [r7, #12]
 1397 00b0 1B68     		ldr	r3, [r3]
 1398 00b2 6FF00102 		mvn	r2, #1
ARM GAS  /tmp/ccRfYZzc.s 			page 43


 1399 00b6 1A60     		str	r2, [r3]
 1400 00b8 10E0     		b	.L71
 1401              	.L70:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 1402              		.loc 1 1003 5
 1403 00ba FB68     		ldr	r3, [r7, #12]
 1404 00bc 1B6C     		ldr	r3, [r3, #64]
 1405 00be 43F48062 		orr	r2, r3, #1024
 1406 00c2 FB68     		ldr	r3, [r7, #12]
 1407 00c4 1A64     		str	r2, [r3, #64]
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1408              		.loc 1 1005 5
 1409 00c6 FB68     		ldr	r3, [r7, #12]
 1410 00c8 5B6C     		ldr	r3, [r3, #68]
 1411 00ca 43F00202 		orr	r2, r3, #2
 1412 00ce FB68     		ldr	r3, [r7, #12]
 1413 00d0 5A64     		str	r2, [r3, #68]
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1414              		.loc 1 1008 5
 1415 00d2 FB68     		ldr	r3, [r7, #12]
 1416 00d4 1B68     		ldr	r3, [r3]
 1417 00d6 6FF02002 		mvn	r2, #32
 1418 00da 1A60     		str	r2, [r3]
 1419              	.L71:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1420              		.loc 1 1012 10
 1421 00dc 0023     		movs	r3, #0
 1422              	.L68:
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1423              		.loc 1 1013 1
 1424 00de 1846     		mov	r0, r3
 1425 00e0 1837     		adds	r7, r7, #24
 1426              	.LCFI40:
 1427              		.cfi_def_cfa_offset 8
 1428 00e2 BD46     		mov	sp, r7
 1429              	.LCFI41:
 1430              		.cfi_def_cfa_register 13
 1431              		@ sp needed
 1432 00e4 80BD     		pop	{r7, pc}
 1433              	.L73:
 1434 00e6 00BF     		.align	2
 1435              	.L72:
 1436 00e8 00200140 		.word	1073815552
 1437 00ec 00210140 		.word	1073815808
 1438 00f0 00220140 		.word	1073816064
 1439 00f4 00000000 		.word	.LC0
ARM GAS  /tmp/ccRfYZzc.s 			page 44


 1440              		.cfi_endproc
 1441              	.LFE137:
 1443              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1444              		.align	1
 1445              		.global	HAL_ADC_Start_IT
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv4-sp-d16
 1451              	HAL_ADC_Start_IT:
 1452              	.LFB138:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1453              		.loc 1 1023 1
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 16
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457 0000 80B5     		push	{r7, lr}
 1458              	.LCFI42:
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
 1462 0002 84B0     		sub	sp, sp, #16
 1463              	.LCFI43:
 1464              		.cfi_def_cfa_offset 24
 1465 0004 00AF     		add	r7, sp, #0
 1466              	.LCFI44:
 1467              		.cfi_def_cfa_register 7
 1468 0006 7860     		str	r0, [r7, #4]
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1469              		.loc 1 1024 17
 1470 0008 0023     		movs	r3, #0
 1471 000a BB60     		str	r3, [r7, #8]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1472              		.loc 1 1028 3
 1473 000c 7B68     		ldr	r3, [r7, #4]
 1474 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1475 0010 002B     		cmp	r3, #0
 1476 0012 08D0     		beq	.L75
 1477              		.loc 1 1028 3 is_stmt 0 discriminator 1
 1478 0014 7B68     		ldr	r3, [r7, #4]
 1479 0016 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1480 0018 012B     		cmp	r3, #1
 1481 001a 04D0     		beq	.L75
 1482              		.loc 1 1028 3 discriminator 2
 1483 001c 40F20441 		movw	r1, #1028
ARM GAS  /tmp/ccRfYZzc.s 			page 45


 1484 0020 6B48     		ldr	r0, .L89
 1485 0022 FFF7FEFF 		bl	assert_failed
 1486              	.L75:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 1487              		.loc 1 1029 3 is_stmt 1
 1488 0026 7B68     		ldr	r3, [r7, #4]
 1489 0028 DB6A     		ldr	r3, [r3, #44]
 1490 002a 002B     		cmp	r3, #0
 1491 002c 13D0     		beq	.L76
 1492              		.loc 1 1029 3 is_stmt 0 discriminator 1
 1493 002e 7B68     		ldr	r3, [r7, #4]
 1494 0030 DB6A     		ldr	r3, [r3, #44]
 1495 0032 B3F1805F 		cmp	r3, #268435456
 1496 0036 0ED0     		beq	.L76
 1497              		.loc 1 1029 3 discriminator 2
 1498 0038 7B68     		ldr	r3, [r7, #4]
 1499 003a DB6A     		ldr	r3, [r3, #44]
 1500 003c B3F1005F 		cmp	r3, #536870912
 1501 0040 09D0     		beq	.L76
 1502              		.loc 1 1029 3 discriminator 3
 1503 0042 7B68     		ldr	r3, [r7, #4]
 1504 0044 DB6A     		ldr	r3, [r3, #44]
 1505 0046 B3F1405F 		cmp	r3, #805306368
 1506 004a 04D0     		beq	.L76
 1507              		.loc 1 1029 3 discriminator 4
 1508 004c 40F20541 		movw	r1, #1029
 1509 0050 5F48     		ldr	r0, .L89
 1510 0052 FFF7FEFF 		bl	assert_failed
 1511              	.L76:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1512              		.loc 1 1032 3 is_stmt 1
 1513 0056 7B68     		ldr	r3, [r7, #4]
 1514 0058 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1515 005c 012B     		cmp	r3, #1
 1516 005e 01D1     		bne	.L77
 1517              		.loc 1 1032 3 is_stmt 0 discriminator 1
 1518 0060 0223     		movs	r3, #2
 1519 0062 B0E0     		b	.L78
 1520              	.L77:
 1521              		.loc 1 1032 3 discriminator 2
 1522 0064 7B68     		ldr	r3, [r7, #4]
 1523 0066 0122     		movs	r2, #1
 1524 0068 83F83C20 		strb	r2, [r3, #60]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1525              		.loc 1 1037 11 is_stmt 1 discriminator 2
 1526 006c 7B68     		ldr	r3, [r7, #4]
 1527 006e 1B68     		ldr	r3, [r3]
 1528              		.loc 1 1037 21 discriminator 2
 1529 0070 9B68     		ldr	r3, [r3, #8]
 1530              		.loc 1 1037 27 discriminator 2
 1531 0072 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccRfYZzc.s 			page 46


 1532              		.loc 1 1037 5 discriminator 2
 1533 0076 012B     		cmp	r3, #1
 1534 0078 18D0     		beq	.L79
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1535              		.loc 1 1040 5
 1536 007a 7B68     		ldr	r3, [r7, #4]
 1537 007c 1B68     		ldr	r3, [r3]
 1538 007e 9A68     		ldr	r2, [r3, #8]
 1539 0080 7B68     		ldr	r3, [r7, #4]
 1540 0082 1B68     		ldr	r3, [r3]
 1541 0084 42F00102 		orr	r2, r2, #1
 1542 0088 9A60     		str	r2, [r3, #8]
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1543              		.loc 1 1044 53
 1544 008a 524B     		ldr	r3, .L89+4
 1545 008c 1B68     		ldr	r3, [r3]
 1546 008e 524A     		ldr	r2, .L89+8
 1547 0090 A2FB0323 		umull	r2, r3, r2, r3
 1548 0094 9A0C     		lsrs	r2, r3, #18
 1549              		.loc 1 1044 34
 1550 0096 1346     		mov	r3, r2
 1551 0098 5B00     		lsls	r3, r3, #1
 1552 009a 1344     		add	r3, r3, r2
 1553              		.loc 1 1044 13
 1554 009c BB60     		str	r3, [r7, #8]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1555              		.loc 1 1045 10
 1556 009e 02E0     		b	.L80
 1557              	.L81:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1558              		.loc 1 1047 14
 1559 00a0 BB68     		ldr	r3, [r7, #8]
 1560 00a2 013B     		subs	r3, r3, #1
 1561 00a4 BB60     		str	r3, [r7, #8]
 1562              	.L80:
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1563              		.loc 1 1045 19
 1564 00a6 BB68     		ldr	r3, [r7, #8]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1565              		.loc 1 1045 10
 1566 00a8 002B     		cmp	r3, #0
 1567 00aa F9D1     		bne	.L81
 1568              	.L79:
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1569              		.loc 1 1052 6
 1570 00ac 7B68     		ldr	r3, [r7, #4]
 1571 00ae 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 47


 1572 00b0 9B68     		ldr	r3, [r3, #8]
 1573 00b2 03F00103 		and	r3, r3, #1
 1574              		.loc 1 1052 5
 1575 00b6 012B     		cmp	r3, #1
 1576 00b8 40F08480 		bne	.L82
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1577              		.loc 1 1057 5
 1578 00bc 7B68     		ldr	r3, [r7, #4]
 1579 00be 1B6C     		ldr	r3, [r3, #64]
 1580 00c0 23F4E063 		bic	r3, r3, #1792
 1581 00c4 23F00103 		bic	r3, r3, #1
 1582 00c8 43F48072 		orr	r2, r3, #256
 1583 00cc 7B68     		ldr	r3, [r7, #4]
 1584 00ce 1A64     		str	r2, [r3, #64]
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1585              		.loc 1 1063 9
 1586 00d0 7B68     		ldr	r3, [r7, #4]
 1587 00d2 1B68     		ldr	r3, [r3]
 1588 00d4 5B68     		ldr	r3, [r3, #4]
 1589 00d6 03F48063 		and	r3, r3, #1024
 1590              		.loc 1 1063 8
 1591 00da 002B     		cmp	r3, #0
 1592 00dc 07D0     		beq	.L83
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1593              		.loc 1 1065 7
 1594 00de 7B68     		ldr	r3, [r7, #4]
 1595 00e0 1B6C     		ldr	r3, [r3, #64]
 1596 00e2 23F44053 		bic	r3, r3, #12288
 1597 00e6 43F48052 		orr	r2, r3, #4096
 1598 00ea 7B68     		ldr	r3, [r7, #4]
 1599 00ec 1A64     		str	r2, [r3, #64]
 1600              	.L83:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1601              		.loc 1 1069 9
 1602 00ee 7B68     		ldr	r3, [r7, #4]
 1603 00f0 1B6C     		ldr	r3, [r3, #64]
 1604 00f2 03F48053 		and	r3, r3, #4096
 1605              		.loc 1 1069 8
 1606 00f6 B3F5805F 		cmp	r3, #4096
 1607 00fa 06D1     		bne	.L84
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1608              		.loc 1 1072 7
ARM GAS  /tmp/ccRfYZzc.s 			page 48


 1609 00fc 7B68     		ldr	r3, [r7, #4]
 1610 00fe 5B6C     		ldr	r3, [r3, #68]
 1611 0100 23F00602 		bic	r2, r3, #6
 1612 0104 7B68     		ldr	r3, [r7, #4]
 1613 0106 5A64     		str	r2, [r3, #68]
 1614 0108 02E0     		b	.L85
 1615              	.L84:
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1616              		.loc 1 1077 7
 1617 010a 7B68     		ldr	r3, [r7, #4]
 1618 010c 0022     		movs	r2, #0
 1619 010e 5A64     		str	r2, [r3, #68]
 1620              	.L85:
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1621              		.loc 1 1083 5
 1622 0110 7B68     		ldr	r3, [r7, #4]
 1623 0112 0022     		movs	r2, #0
 1624 0114 83F83C20 		strb	r2, [r3, #60]
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1625              		.loc 1 1088 19
 1626 0118 304B     		ldr	r3, .L89+12
 1627 011a FB60     		str	r3, [r7, #12]
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1628              		.loc 1 1092 5
 1629 011c 7B68     		ldr	r3, [r7, #4]
 1630 011e 1B68     		ldr	r3, [r3]
 1631 0120 6FF02202 		mvn	r2, #34
 1632 0124 1A60     		str	r2, [r3]
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1633              		.loc 1 1095 5
 1634 0126 7B68     		ldr	r3, [r7, #4]
 1635 0128 1B68     		ldr	r3, [r3]
 1636 012a 5B68     		ldr	r3, [r3, #4]
 1637 012c 7A68     		ldr	r2, [r7, #4]
 1638 012e 1268     		ldr	r2, [r2]
 1639 0130 43F08063 		orr	r3, r3, #67108864
 1640 0134 43F02003 		orr	r3, r3, #32
 1641 0138 5360     		str	r3, [r2, #4]
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccRfYZzc.s 			page 49


1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1642              		.loc 1 1098 8
 1643 013a FB68     		ldr	r3, [r7, #12]
 1644 013c 5B68     		ldr	r3, [r3, #4]
 1645 013e 03F01F03 		and	r3, r3, #31
 1646              		.loc 1 1098 7
 1647 0142 002B     		cmp	r3, #0
 1648 0144 2AD1     		bne	.L86
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 1649              		.loc 1 1101 15
 1650 0146 7B68     		ldr	r3, [r7, #4]
 1651 0148 1B68     		ldr	r3, [r3]
 1652              		.loc 1 1101 9
 1653 014a 254A     		ldr	r2, .L89+16
 1654 014c 9342     		cmp	r3, r2
 1655 014e 15D0     		beq	.L87
 1656              		.loc 1 1101 44 discriminator 1
 1657 0150 7B68     		ldr	r3, [r7, #4]
 1658 0152 1B68     		ldr	r3, [r3]
 1659              		.loc 1 1101 35 discriminator 1
 1660 0154 234A     		ldr	r2, .L89+20
 1661 0156 9342     		cmp	r3, r2
 1662 0158 05D1     		bne	.L88
 1663              		.loc 1 1101 72 discriminator 2
 1664 015a 204B     		ldr	r3, .L89+12
 1665 015c 5B68     		ldr	r3, [r3, #4]
 1666              		.loc 1 1101 78 discriminator 2
 1667 015e 03F01F03 		and	r3, r3, #31
 1668              		.loc 1 1101 64 discriminator 2
 1669 0162 002B     		cmp	r3, #0
 1670 0164 0AD0     		beq	.L87
 1671              	.L88:
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 1672              		.loc 1 1102 44
 1673 0166 7B68     		ldr	r3, [r7, #4]
 1674 0168 1B68     		ldr	r3, [r3]
 1675              		.loc 1 1102 35
 1676 016a 1F4A     		ldr	r2, .L89+24
 1677 016c 9342     		cmp	r3, r2
 1678 016e 29D1     		bne	.L82
 1679              		.loc 1 1102 72 discriminator 1
 1680 0170 1A4B     		ldr	r3, .L89+12
 1681 0172 5B68     		ldr	r3, [r3, #4]
 1682              		.loc 1 1102 99 discriminator 1
 1683 0174 03F01003 		and	r3, r3, #16
 1684              		.loc 1 1102 64 discriminator 1
 1685 0178 002B     		cmp	r3, #0
 1686 017a 23D1     		bne	.L82
 1687              	.L87:
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1688              		.loc 1 1106 17
ARM GAS  /tmp/ccRfYZzc.s 			page 50


 1689 017c 7B68     		ldr	r3, [r7, #4]
 1690 017e 1B68     		ldr	r3, [r3]
 1691              		.loc 1 1106 27
 1692 0180 9B68     		ldr	r3, [r3, #8]
 1693              		.loc 1 1106 33
 1694 0182 03F04053 		and	r3, r3, #805306368
 1695              		.loc 1 1106 11
 1696 0186 002B     		cmp	r3, #0
 1697 0188 1CD1     		bne	.L82
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1698              		.loc 1 1109 15
 1699 018a 7B68     		ldr	r3, [r7, #4]
 1700 018c 1B68     		ldr	r3, [r3]
 1701              		.loc 1 1109 31
 1702 018e 9A68     		ldr	r2, [r3, #8]
 1703              		.loc 1 1109 15
 1704 0190 7B68     		ldr	r3, [r7, #4]
 1705 0192 1B68     		ldr	r3, [r3]
 1706              		.loc 1 1109 31
 1707 0194 42F08042 		orr	r2, r2, #1073741824
 1708 0198 9A60     		str	r2, [r3, #8]
 1709 019a 13E0     		b	.L82
 1710              	.L86:
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1711              		.loc 1 1118 15
 1712 019c 7B68     		ldr	r3, [r7, #4]
 1713 019e 1B68     		ldr	r3, [r3]
 1714              		.loc 1 1118 9
 1715 01a0 0F4A     		ldr	r2, .L89+16
 1716 01a2 9342     		cmp	r3, r2
 1717 01a4 0ED1     		bne	.L82
 1718              		.loc 1 1118 44 discriminator 1
 1719 01a6 7B68     		ldr	r3, [r7, #4]
 1720 01a8 1B68     		ldr	r3, [r3]
 1721              		.loc 1 1118 54 discriminator 1
 1722 01aa 9B68     		ldr	r3, [r3, #8]
 1723              		.loc 1 1118 60 discriminator 1
 1724 01ac 03F04053 		and	r3, r3, #805306368
 1725              		.loc 1 1118 35 discriminator 1
 1726 01b0 002B     		cmp	r3, #0
 1727 01b2 07D1     		bne	.L82
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1728              		.loc 1 1121 15
 1729 01b4 7B68     		ldr	r3, [r7, #4]
 1730 01b6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 51


 1731              		.loc 1 1121 31
 1732 01b8 9A68     		ldr	r2, [r3, #8]
 1733              		.loc 1 1121 15
 1734 01ba 7B68     		ldr	r3, [r7, #4]
 1735 01bc 1B68     		ldr	r3, [r3]
 1736              		.loc 1 1121 31
 1737 01be 42F08042 		orr	r2, r2, #1073741824
 1738 01c2 9A60     		str	r2, [r3, #8]
 1739              	.L82:
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1740              		.loc 1 1127 10
 1741 01c4 0023     		movs	r3, #0
 1742              	.L78:
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1743              		.loc 1 1128 1
 1744 01c6 1846     		mov	r0, r3
 1745 01c8 1037     		adds	r7, r7, #16
 1746              	.LCFI45:
 1747              		.cfi_def_cfa_offset 8
 1748 01ca BD46     		mov	sp, r7
 1749              	.LCFI46:
 1750              		.cfi_def_cfa_register 13
 1751              		@ sp needed
 1752 01cc 80BD     		pop	{r7, pc}
 1753              	.L90:
 1754 01ce 00BF     		.align	2
 1755              	.L89:
 1756 01d0 00000000 		.word	.LC0
 1757 01d4 00000000 		.word	SystemCoreClock
 1758 01d8 83DE1B43 		.word	1125899907
 1759 01dc 00230140 		.word	1073816320
 1760 01e0 00200140 		.word	1073815552
 1761 01e4 00210140 		.word	1073815808
 1762 01e8 00220140 		.word	1073816064
 1763              		.cfi_endproc
 1764              	.LFE138:
 1766              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1767              		.align	1
 1768              		.global	HAL_ADC_Stop_IT
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu fpv4-sp-d16
 1774              	HAL_ADC_Stop_IT:
 1775              	.LFB139:
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
ARM GAS  /tmp/ccRfYZzc.s 			page 52


1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1776              		.loc 1 1140 1
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 8
 1779              		@ frame_needed = 1, uses_anonymous_args = 0
 1780 0000 80B5     		push	{r7, lr}
 1781              	.LCFI47:
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 7, -8
 1784              		.cfi_offset 14, -4
 1785 0002 82B0     		sub	sp, sp, #8
 1786              	.LCFI48:
 1787              		.cfi_def_cfa_offset 16
 1788 0004 00AF     		add	r7, sp, #0
 1789              	.LCFI49:
 1790              		.cfi_def_cfa_register 7
 1791 0006 7860     		str	r0, [r7, #4]
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1792              		.loc 1 1142 3
 1793 0008 7B68     		ldr	r3, [r7, #4]
 1794 000a 1B68     		ldr	r3, [r3]
 1795 000c 244A     		ldr	r2, .L96
 1796 000e 9342     		cmp	r3, r2
 1797 0010 0ED0     		beq	.L92
 1798              		.loc 1 1142 3 is_stmt 0 discriminator 1
 1799 0012 7B68     		ldr	r3, [r7, #4]
 1800 0014 1B68     		ldr	r3, [r3]
 1801 0016 234A     		ldr	r2, .L96+4
 1802 0018 9342     		cmp	r3, r2
 1803 001a 09D0     		beq	.L92
 1804              		.loc 1 1142 3 discriminator 2
 1805 001c 7B68     		ldr	r3, [r7, #4]
 1806 001e 1B68     		ldr	r3, [r3]
 1807 0020 214A     		ldr	r2, .L96+8
 1808 0022 9342     		cmp	r3, r2
 1809 0024 04D0     		beq	.L92
 1810              		.loc 1 1142 3 discriminator 3
 1811 0026 40F27641 		movw	r1, #1142
 1812 002a 2048     		ldr	r0, .L96+12
 1813 002c FFF7FEFF 		bl	assert_failed
 1814              	.L92:
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1815              		.loc 1 1145 3 is_stmt 1
 1816 0030 7B68     		ldr	r3, [r7, #4]
 1817 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1818 0036 012B     		cmp	r3, #1
 1819 0038 01D1     		bne	.L93
 1820              		.loc 1 1145 3 is_stmt 0 discriminator 1
 1821 003a 0223     		movs	r3, #2
 1822 003c 2BE0     		b	.L94
ARM GAS  /tmp/ccRfYZzc.s 			page 53


 1823              	.L93:
 1824              		.loc 1 1145 3 discriminator 2
 1825 003e 7B68     		ldr	r3, [r7, #4]
 1826 0040 0122     		movs	r2, #1
 1827 0042 83F83C20 		strb	r2, [r3, #60]
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1828              		.loc 1 1149 3 is_stmt 1 discriminator 2
 1829 0046 7B68     		ldr	r3, [r7, #4]
 1830 0048 1B68     		ldr	r3, [r3]
 1831 004a 9A68     		ldr	r2, [r3, #8]
 1832 004c 7B68     		ldr	r3, [r7, #4]
 1833 004e 1B68     		ldr	r3, [r3]
 1834 0050 22F00102 		bic	r2, r2, #1
 1835 0054 9A60     		str	r2, [r3, #8]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1836              		.loc 1 1152 6 discriminator 2
 1837 0056 7B68     		ldr	r3, [r7, #4]
 1838 0058 1B68     		ldr	r3, [r3]
 1839 005a 9B68     		ldr	r3, [r3, #8]
 1840 005c 03F00103 		and	r3, r3, #1
 1841              		.loc 1 1152 5 discriminator 2
 1842 0060 002B     		cmp	r3, #0
 1843 0062 13D1     		bne	.L95
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1844              		.loc 1 1155 5
 1845 0064 7B68     		ldr	r3, [r7, #4]
 1846 0066 1B68     		ldr	r3, [r3]
 1847 0068 5B68     		ldr	r3, [r3, #4]
 1848 006a 7A68     		ldr	r2, [r7, #4]
 1849 006c 1268     		ldr	r2, [r2]
 1850 006e 23F08063 		bic	r3, r3, #67108864
 1851 0072 23F02003 		bic	r3, r3, #32
 1852 0076 5360     		str	r3, [r2, #4]
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1853              		.loc 1 1158 5
 1854 0078 7B68     		ldr	r3, [r7, #4]
 1855 007a 1B6C     		ldr	r3, [r3, #64]
 1856 007c 23F48853 		bic	r3, r3, #4352
 1857 0080 23F00103 		bic	r3, r3, #1
 1858 0084 43F00102 		orr	r2, r3, #1
 1859 0088 7B68     		ldr	r3, [r7, #4]
 1860 008a 1A64     		str	r2, [r3, #64]
 1861              	.L95:
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
ARM GAS  /tmp/ccRfYZzc.s 			page 54


1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1862              		.loc 1 1164 3
 1863 008c 7B68     		ldr	r3, [r7, #4]
 1864 008e 0022     		movs	r2, #0
 1865 0090 83F83C20 		strb	r2, [r3, #60]
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1866              		.loc 1 1167 10
 1867 0094 0023     		movs	r3, #0
 1868              	.L94:
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1869              		.loc 1 1168 1
 1870 0096 1846     		mov	r0, r3
 1871 0098 0837     		adds	r7, r7, #8
 1872              	.LCFI50:
 1873              		.cfi_def_cfa_offset 8
 1874 009a BD46     		mov	sp, r7
 1875              	.LCFI51:
 1876              		.cfi_def_cfa_register 13
 1877              		@ sp needed
 1878 009c 80BD     		pop	{r7, pc}
 1879              	.L97:
 1880 009e 00BF     		.align	2
 1881              	.L96:
 1882 00a0 00200140 		.word	1073815552
 1883 00a4 00210140 		.word	1073815808
 1884 00a8 00220140 		.word	1073816064
 1885 00ac 00000000 		.word	.LC0
 1886              		.cfi_endproc
 1887              	.LFE139:
 1889              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1890              		.align	1
 1891              		.global	HAL_ADC_IRQHandler
 1892              		.syntax unified
 1893              		.thumb
 1894              		.thumb_func
 1895              		.fpu fpv4-sp-d16
 1897              	HAL_ADC_IRQHandler:
 1898              	.LFB140:
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1899              		.loc 1 1177 1
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 16
 1902              		@ frame_needed = 1, uses_anonymous_args = 0
 1903 0000 80B5     		push	{r7, lr}
 1904              	.LCFI52:
 1905              		.cfi_def_cfa_offset 8
 1906              		.cfi_offset 7, -8
ARM GAS  /tmp/ccRfYZzc.s 			page 55


 1907              		.cfi_offset 14, -4
 1908 0002 84B0     		sub	sp, sp, #16
 1909              	.LCFI53:
 1910              		.cfi_def_cfa_offset 24
 1911 0004 00AF     		add	r7, sp, #0
 1912              	.LCFI54:
 1913              		.cfi_def_cfa_register 7
 1914 0006 7860     		str	r0, [r7, #4]
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1915              		.loc 1 1178 12
 1916 0008 0023     		movs	r3, #0
 1917 000a FB60     		str	r3, [r7, #12]
 1918              		.loc 1 1178 23
 1919 000c 0023     		movs	r3, #0
 1920 000e BB60     		str	r3, [r7, #8]
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1921              		.loc 1 1181 3
 1922 0010 7B68     		ldr	r3, [r7, #4]
 1923 0012 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1924 0014 002B     		cmp	r3, #0
 1925 0016 08D0     		beq	.L99
 1926              		.loc 1 1181 3 is_stmt 0 discriminator 1
 1927 0018 7B68     		ldr	r3, [r7, #4]
 1928 001a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1929 001c 012B     		cmp	r3, #1
 1930 001e 04D0     		beq	.L99
 1931              		.loc 1 1181 3 discriminator 2
 1932 0020 40F29D41 		movw	r1, #1181
 1933 0024 6048     		ldr	r0, .L114
 1934 0026 FFF7FEFF 		bl	assert_failed
 1935              	.L99:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 1936              		.loc 1 1182 3 is_stmt 1
 1937 002a 7B68     		ldr	r3, [r7, #4]
 1938 002c DB69     		ldr	r3, [r3, #28]
 1939 002e 002B     		cmp	r3, #0
 1940 0030 03D0     		beq	.L100
 1941              		.loc 1 1182 3 is_stmt 0 discriminator 2
 1942 0032 7B68     		ldr	r3, [r7, #4]
 1943 0034 DB69     		ldr	r3, [r3, #28]
 1944 0036 102B     		cmp	r3, #16
 1945 0038 04D9     		bls	.L101
 1946              	.L100:
 1947              		.loc 1 1182 3 discriminator 3
 1948 003a 40F29E41 		movw	r1, #1182
 1949 003e 5A48     		ldr	r0, .L114
 1950 0040 FFF7FEFF 		bl	assert_failed
 1951              	.L101:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 1952              		.loc 1 1183 3 is_stmt 1
 1953 0044 7B68     		ldr	r3, [r7, #4]
 1954 0046 5B69     		ldr	r3, [r3, #20]
 1955 0048 012B     		cmp	r3, #1
 1956 004a 0CD0     		beq	.L102
 1957              		.loc 1 1183 3 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccRfYZzc.s 			page 56


 1958 004c 7B68     		ldr	r3, [r7, #4]
 1959 004e 5B69     		ldr	r3, [r3, #20]
 1960 0050 002B     		cmp	r3, #0
 1961 0052 08D0     		beq	.L102
 1962              		.loc 1 1183 3 discriminator 2
 1963 0054 7B68     		ldr	r3, [r7, #4]
 1964 0056 5B69     		ldr	r3, [r3, #20]
 1965 0058 022B     		cmp	r3, #2
 1966 005a 04D0     		beq	.L102
 1967              		.loc 1 1183 3 discriminator 3
 1968 005c 40F29F41 		movw	r1, #1183
 1969 0060 5148     		ldr	r0, .L114
 1970 0062 FFF7FEFF 		bl	assert_failed
 1971              	.L102:
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
 1972              		.loc 1 1185 10 is_stmt 1
 1973 0066 7B68     		ldr	r3, [r7, #4]
 1974 0068 1B68     		ldr	r3, [r3]
 1975 006a 1B68     		ldr	r3, [r3]
 1976 006c 03F00203 		and	r3, r3, #2
 1977 0070 022B     		cmp	r3, #2
 1978 0072 0CBF     		ite	eq
 1979 0074 0123     		moveq	r3, #1
 1980 0076 0023     		movne	r3, #0
 1981 0078 DBB2     		uxtb	r3, r3
 1982              		.loc 1 1185 8
 1983 007a FB60     		str	r3, [r7, #12]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1984              		.loc 1 1186 10
 1985 007c 7B68     		ldr	r3, [r7, #4]
 1986 007e 1B68     		ldr	r3, [r3]
 1987 0080 5B68     		ldr	r3, [r3, #4]
 1988 0082 03F02003 		and	r3, r3, #32
 1989 0086 202B     		cmp	r3, #32
 1990 0088 0CBF     		ite	eq
 1991 008a 0123     		moveq	r3, #1
 1992 008c 0023     		movne	r3, #0
 1993 008e DBB2     		uxtb	r3, r3
 1994              		.loc 1 1186 8
 1995 0090 BB60     		str	r3, [r7, #8]
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1996              		.loc 1 1188 5
 1997 0092 FB68     		ldr	r3, [r7, #12]
 1998 0094 002B     		cmp	r3, #0
 1999 0096 49D0     		beq	.L103
 2000              		.loc 1 1188 11 discriminator 1
 2001 0098 BB68     		ldr	r3, [r7, #8]
 2002 009a 002B     		cmp	r3, #0
 2003 009c 46D0     		beq	.L103
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 2004              		.loc 1 1191 9
 2005 009e 7B68     		ldr	r3, [r7, #4]
 2006 00a0 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccRfYZzc.s 			page 57


 2007 00a2 03F01003 		and	r3, r3, #16
 2008              		.loc 1 1191 8
 2009 00a6 002B     		cmp	r3, #0
 2010 00a8 05D1     		bne	.L104
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 2011              		.loc 1 1194 7
 2012 00aa 7B68     		ldr	r3, [r7, #4]
 2013 00ac 1B6C     		ldr	r3, [r3, #64]
 2014 00ae 43F40072 		orr	r2, r3, #512
 2015 00b2 7B68     		ldr	r3, [r7, #4]
 2016 00b4 1A64     		str	r2, [r3, #64]
 2017              	.L104:
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 2018              		.loc 1 1203 8
 2019 00b6 7B68     		ldr	r3, [r7, #4]
 2020 00b8 1B68     		ldr	r3, [r3]
 2021 00ba 9B68     		ldr	r3, [r3, #8]
 2022 00bc 03F04053 		and	r3, r3, #805306368
 2023              		.loc 1 1203 7
 2024 00c0 002B     		cmp	r3, #0
 2025 00c2 2BD1     		bne	.L105
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2026              		.loc 1 1204 19 discriminator 1
 2027 00c4 7B68     		ldr	r3, [r7, #4]
 2028 00c6 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2029              		.loc 1 1203 62 discriminator 1
 2030 00c8 002B     		cmp	r3, #0
 2031 00ca 27D1     		bne	.L105
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 2032              		.loc 1 1205 9
 2033 00cc 7B68     		ldr	r3, [r7, #4]
 2034 00ce 1B68     		ldr	r3, [r3]
 2035 00d0 DB6A     		ldr	r3, [r3, #44]
 2036 00d2 03F47003 		and	r3, r3, #15728640
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 2037              		.loc 1 1204 62
 2038 00d6 002B     		cmp	r3, #0
 2039 00d8 06D0     		beq	.L106
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 2040              		.loc 1 1206 9
 2041 00da 7B68     		ldr	r3, [r7, #4]
 2042 00dc 1B68     		ldr	r3, [r3]
 2043 00de 9B68     		ldr	r3, [r3, #8]
 2044 00e0 03F48063 		and	r3, r3, #1024
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 2045              		.loc 1 1205 58
ARM GAS  /tmp/ccRfYZzc.s 			page 58


 2046 00e4 002B     		cmp	r3, #0
 2047 00e6 19D1     		bne	.L105
 2048              	.L106:
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 2049              		.loc 1 1212 7
 2050 00e8 7B68     		ldr	r3, [r7, #4]
 2051 00ea 1B68     		ldr	r3, [r3]
 2052 00ec 5A68     		ldr	r2, [r3, #4]
 2053 00ee 7B68     		ldr	r3, [r7, #4]
 2054 00f0 1B68     		ldr	r3, [r3]
 2055 00f2 22F02002 		bic	r2, r2, #32
 2056 00f6 5A60     		str	r2, [r3, #4]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2057              		.loc 1 1215 7
 2058 00f8 7B68     		ldr	r3, [r7, #4]
 2059 00fa 1B6C     		ldr	r3, [r3, #64]
 2060 00fc 23F48072 		bic	r2, r3, #256
 2061 0100 7B68     		ldr	r3, [r7, #4]
 2062 0102 1A64     		str	r2, [r3, #64]
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2063              		.loc 1 1217 11
 2064 0104 7B68     		ldr	r3, [r7, #4]
 2065 0106 1B6C     		ldr	r3, [r3, #64]
 2066 0108 03F48053 		and	r3, r3, #4096
 2067              		.loc 1 1217 10
 2068 010c 002B     		cmp	r3, #0
 2069 010e 05D1     		bne	.L105
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 2070              		.loc 1 1219 9
 2071 0110 7B68     		ldr	r3, [r7, #4]
 2072 0112 1B6C     		ldr	r3, [r3, #64]
 2073 0114 43F00102 		orr	r2, r3, #1
 2074 0118 7B68     		ldr	r3, [r7, #4]
 2075 011a 1A64     		str	r2, [r3, #64]
 2076              	.L105:
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 2077              		.loc 1 1227 5
 2078 011c 7868     		ldr	r0, [r7, #4]
 2079 011e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccRfYZzc.s 			page 59


1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 2080              		.loc 1 1231 5
 2081 0122 7B68     		ldr	r3, [r7, #4]
 2082 0124 1B68     		ldr	r3, [r3]
 2083 0126 6FF01202 		mvn	r2, #18
 2084 012a 1A60     		str	r2, [r3]
 2085              	.L103:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
 2086              		.loc 1 1234 10
 2087 012c 7B68     		ldr	r3, [r7, #4]
 2088 012e 1B68     		ldr	r3, [r3]
 2089 0130 1B68     		ldr	r3, [r3]
 2090 0132 03F00403 		and	r3, r3, #4
 2091 0136 042B     		cmp	r3, #4
 2092 0138 0CBF     		ite	eq
 2093 013a 0123     		moveq	r3, #1
 2094 013c 0023     		movne	r3, #0
 2095 013e DBB2     		uxtb	r3, r3
 2096              		.loc 1 1234 8
 2097 0140 FB60     		str	r3, [r7, #12]
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 2098              		.loc 1 1235 10
 2099 0142 7B68     		ldr	r3, [r7, #4]
 2100 0144 1B68     		ldr	r3, [r3]
 2101 0146 5B68     		ldr	r3, [r3, #4]
 2102 0148 03F08003 		and	r3, r3, #128
 2103 014c 802B     		cmp	r3, #128
 2104 014e 0CBF     		ite	eq
 2105 0150 0123     		moveq	r3, #1
 2106 0152 0023     		movne	r3, #0
 2107 0154 DBB2     		uxtb	r3, r3
 2108              		.loc 1 1235 8
 2109 0156 BB60     		str	r3, [r7, #8]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 2110              		.loc 1 1237 5
 2111 0158 FB68     		ldr	r3, [r7, #12]
 2112 015a 002B     		cmp	r3, #0
 2113 015c 5AD0     		beq	.L107
 2114              		.loc 1 1237 11 discriminator 1
 2115 015e BB68     		ldr	r3, [r7, #8]
 2116 0160 002B     		cmp	r3, #0
 2117 0162 57D0     		beq	.L107
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 2118              		.loc 1 1240 9
 2119 0164 7B68     		ldr	r3, [r7, #4]
 2120 0166 1B6C     		ldr	r3, [r3, #64]
 2121 0168 03F01003 		and	r3, r3, #16
 2122              		.loc 1 1240 8
 2123 016c 002B     		cmp	r3, #0
 2124 016e 05D1     		bne	.L108
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccRfYZzc.s 			page 60


1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 2125              		.loc 1 1243 7
 2126 0170 7B68     		ldr	r3, [r7, #4]
 2127 0172 1B6C     		ldr	r3, [r3, #64]
 2128 0174 43F40052 		orr	r2, r3, #8192
 2129 0178 7B68     		ldr	r3, [r7, #4]
 2130 017a 1A64     		str	r2, [r3, #64]
 2131              	.L108:
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 2132              		.loc 1 1250 8
 2133 017c 7B68     		ldr	r3, [r7, #4]
 2134 017e 1B68     		ldr	r3, [r3]
 2135 0180 9B68     		ldr	r3, [r3, #8]
 2136 0182 03F44013 		and	r3, r3, #3145728
 2137              		.loc 1 1250 7
 2138 0186 002B     		cmp	r3, #0
 2139 0188 3CD1     		bne	.L109
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2140              		.loc 1 1251 9 discriminator 1
 2141 018a 7B68     		ldr	r3, [r7, #4]
 2142 018c 1B68     		ldr	r3, [r3]
 2143 018e 9B6B     		ldr	r3, [r3, #56]
 2144 0190 03F44013 		and	r3, r3, #3145728
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2145              		.loc 1 1250 64 discriminator 1
 2146 0194 002B     		cmp	r3, #0
 2147 0196 09D0     		beq	.L110
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 2148              		.loc 1 1252 9
 2149 0198 7B68     		ldr	r3, [r7, #4]
 2150 019a 1B68     		ldr	r3, [r3]
 2151 019c 9B68     		ldr	r3, [r3, #8]
 2152 019e 03F48063 		and	r3, r3, #1024
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 2153              		.loc 1 1251 60
 2154 01a2 002B     		cmp	r3, #0
 2155 01a4 2ED1     		bne	.L109
 2156 01a6 01E0     		b	.L115
 2157              	.L116:
 2158              		.align	2
 2159              	.L114:
 2160 01a8 00000000 		.word	.LC0
 2161              	.L115:
 2162              	.L110:
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 2163              		.loc 1 1253 9
 2164 01ac 7B68     		ldr	r3, [r7, #4]
 2165 01ae 1B68     		ldr	r3, [r3]
 2166 01b0 5B68     		ldr	r3, [r3, #4]
 2167 01b2 03F48063 		and	r3, r3, #1024
ARM GAS  /tmp/ccRfYZzc.s 			page 61


1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 2168              		.loc 1 1252 64
 2169 01b6 002B     		cmp	r3, #0
 2170 01b8 24D1     		bne	.L109
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 2171              		.loc 1 1254 10
 2172 01ba 7B68     		ldr	r3, [r7, #4]
 2173 01bc 1B68     		ldr	r3, [r3]
 2174 01be 9B68     		ldr	r3, [r3, #8]
 2175 01c0 03F04053 		and	r3, r3, #805306368
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 2176              		.loc 1 1253 60
 2177 01c4 002B     		cmp	r3, #0
 2178 01c6 1DD1     		bne	.L109
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 2179              		.loc 1 1255 20
 2180 01c8 7B68     		ldr	r3, [r7, #4]
 2181 01ca 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 2182              		.loc 1 1254 52
 2183 01cc 002B     		cmp	r3, #0
 2184 01ce 19D1     		bne	.L109
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 2185              		.loc 1 1258 7
 2186 01d0 7B68     		ldr	r3, [r7, #4]
 2187 01d2 1B68     		ldr	r3, [r3]
 2188 01d4 5A68     		ldr	r2, [r3, #4]
 2189 01d6 7B68     		ldr	r3, [r7, #4]
 2190 01d8 1B68     		ldr	r3, [r3]
 2191 01da 22F08002 		bic	r2, r2, #128
 2192 01de 5A60     		str	r2, [r3, #4]
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 2193              		.loc 1 1261 7
 2194 01e0 7B68     		ldr	r3, [r7, #4]
 2195 01e2 1B6C     		ldr	r3, [r3, #64]
 2196 01e4 23F48052 		bic	r2, r3, #4096
 2197 01e8 7B68     		ldr	r3, [r7, #4]
 2198 01ea 1A64     		str	r2, [r3, #64]
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 2199              		.loc 1 1263 11
 2200 01ec 7B68     		ldr	r3, [r7, #4]
 2201 01ee 1B6C     		ldr	r3, [r3, #64]
 2202 01f0 03F48073 		and	r3, r3, #256
 2203              		.loc 1 1263 10
 2204 01f4 002B     		cmp	r3, #0
 2205 01f6 05D1     		bne	.L109
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 2206              		.loc 1 1265 9
 2207 01f8 7B68     		ldr	r3, [r7, #4]
 2208 01fa 1B6C     		ldr	r3, [r3, #64]
 2209 01fc 43F00102 		orr	r2, r3, #1
ARM GAS  /tmp/ccRfYZzc.s 			page 62


 2210 0200 7B68     		ldr	r3, [r7, #4]
 2211 0202 1A64     		str	r2, [r3, #64]
 2212              	.L109:
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
 2213              		.loc 1 1274 7
 2214 0204 7868     		ldr	r0, [r7, #4]
 2215 0206 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 2216              		.loc 1 1278 5
 2217 020a 7B68     		ldr	r3, [r7, #4]
 2218 020c 1B68     		ldr	r3, [r3]
 2219 020e 6FF00C02 		mvn	r2, #12
 2220 0212 1A60     		str	r2, [r3]
 2221              	.L107:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
 2222              		.loc 1 1281 10
 2223 0214 7B68     		ldr	r3, [r7, #4]
 2224 0216 1B68     		ldr	r3, [r3]
 2225 0218 1B68     		ldr	r3, [r3]
 2226 021a 03F00103 		and	r3, r3, #1
 2227 021e 012B     		cmp	r3, #1
 2228 0220 0CBF     		ite	eq
 2229 0222 0123     		moveq	r3, #1
 2230 0224 0023     		movne	r3, #0
 2231 0226 DBB2     		uxtb	r3, r3
 2232              		.loc 1 1281 8
 2233 0228 FB60     		str	r3, [r7, #12]
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 2234              		.loc 1 1282 10
 2235 022a 7B68     		ldr	r3, [r7, #4]
 2236 022c 1B68     		ldr	r3, [r3]
 2237 022e 5B68     		ldr	r3, [r3, #4]
 2238 0230 03F04003 		and	r3, r3, #64
 2239 0234 402B     		cmp	r3, #64
 2240 0236 0CBF     		ite	eq
 2241 0238 0123     		moveq	r3, #1
 2242 023a 0023     		movne	r3, #0
 2243 023c DBB2     		uxtb	r3, r3
 2244              		.loc 1 1282 8
 2245 023e BB60     		str	r3, [r7, #8]
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 2246              		.loc 1 1284 5
 2247 0240 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRfYZzc.s 			page 63


 2248 0242 002B     		cmp	r3, #0
 2249 0244 17D0     		beq	.L111
 2250              		.loc 1 1284 11 discriminator 1
 2251 0246 BB68     		ldr	r3, [r7, #8]
 2252 0248 002B     		cmp	r3, #0
 2253 024a 14D0     		beq	.L111
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 2254              		.loc 1 1286 8
 2255 024c 7B68     		ldr	r3, [r7, #4]
 2256 024e 1B68     		ldr	r3, [r3]
 2257 0250 1B68     		ldr	r3, [r3]
 2258 0252 03F00103 		and	r3, r3, #1
 2259              		.loc 1 1286 7
 2260 0256 012B     		cmp	r3, #1
 2261 0258 0DD1     		bne	.L111
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 2262              		.loc 1 1289 7
 2263 025a 7B68     		ldr	r3, [r7, #4]
 2264 025c 1B6C     		ldr	r3, [r3, #64]
 2265 025e 43F48032 		orr	r2, r3, #65536
 2266 0262 7B68     		ldr	r3, [r7, #4]
 2267 0264 1A64     		str	r2, [r3, #64]
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 2268              		.loc 1 1295 7
 2269 0266 7868     		ldr	r0, [r7, #4]
 2270 0268 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 2271              		.loc 1 1299 7
 2272 026c 7B68     		ldr	r3, [r7, #4]
 2273 026e 1B68     		ldr	r3, [r3]
 2274 0270 6FF00102 		mvn	r2, #1
 2275 0274 1A60     		str	r2, [r3]
 2276              	.L111:
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
 2277              		.loc 1 1303 10
 2278 0276 7B68     		ldr	r3, [r7, #4]
 2279 0278 1B68     		ldr	r3, [r3]
 2280 027a 1B68     		ldr	r3, [r3]
 2281 027c 03F02003 		and	r3, r3, #32
 2282 0280 202B     		cmp	r3, #32
 2283 0282 0CBF     		ite	eq
 2284 0284 0123     		moveq	r3, #1
 2285 0286 0023     		movne	r3, #0
ARM GAS  /tmp/ccRfYZzc.s 			page 64


 2286 0288 DBB2     		uxtb	r3, r3
 2287              		.loc 1 1303 8
 2288 028a FB60     		str	r3, [r7, #12]
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 2289              		.loc 1 1304 10
 2290 028c 7B68     		ldr	r3, [r7, #4]
 2291 028e 1B68     		ldr	r3, [r3]
 2292 0290 5B68     		ldr	r3, [r3, #4]
 2293 0292 03F08063 		and	r3, r3, #67108864
 2294 0296 B3F1806F 		cmp	r3, #67108864
 2295 029a 0CBF     		ite	eq
 2296 029c 0123     		moveq	r3, #1
 2297 029e 0023     		movne	r3, #0
 2298 02a0 DBB2     		uxtb	r3, r3
 2299              		.loc 1 1304 8
 2300 02a2 BB60     		str	r3, [r7, #8]
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 2301              		.loc 1 1306 5
 2302 02a4 FB68     		ldr	r3, [r7, #12]
 2303 02a6 002B     		cmp	r3, #0
 2304 02a8 15D0     		beq	.L113
 2305              		.loc 1 1306 11 discriminator 1
 2306 02aa BB68     		ldr	r3, [r7, #8]
 2307 02ac 002B     		cmp	r3, #0
 2308 02ae 12D0     		beq	.L113
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 2309              		.loc 1 1313 5
 2310 02b0 7B68     		ldr	r3, [r7, #4]
 2311 02b2 5B6C     		ldr	r3, [r3, #68]
 2312 02b4 43F00202 		orr	r2, r3, #2
 2313 02b8 7B68     		ldr	r3, [r7, #4]
 2314 02ba 5A64     		str	r2, [r3, #68]
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 2315              		.loc 1 1316 5
 2316 02bc 7B68     		ldr	r3, [r7, #4]
 2317 02be 1B68     		ldr	r3, [r3]
 2318 02c0 6FF02002 		mvn	r2, #32
 2319 02c4 1A60     		str	r2, [r3]
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
 2320              		.loc 1 1322 7
 2321 02c6 7868     		ldr	r0, [r7, #4]
 2322 02c8 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccRfYZzc.s 			page 65


1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 2323              		.loc 1 1326 5
 2324 02cc 7B68     		ldr	r3, [r7, #4]
 2325 02ce 1B68     		ldr	r3, [r3]
 2326 02d0 6FF02002 		mvn	r2, #32
 2327 02d4 1A60     		str	r2, [r3]
 2328              	.L113:
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2329              		.loc 1 1328 1
 2330 02d6 00BF     		nop
 2331 02d8 1037     		adds	r7, r7, #16
 2332              	.LCFI55:
 2333              		.cfi_def_cfa_offset 8
 2334 02da BD46     		mov	sp, r7
 2335              	.LCFI56:
 2336              		.cfi_def_cfa_register 13
 2337              		@ sp needed
 2338 02dc 80BD     		pop	{r7, pc}
 2339              		.cfi_endproc
 2340              	.LFE140:
 2342 02de 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 2343              		.align	1
 2344              		.global	HAL_ADC_Start_DMA
 2345              		.syntax unified
 2346              		.thumb
 2347              		.thumb_func
 2348              		.fpu fpv4-sp-d16
 2350              	HAL_ADC_Start_DMA:
 2351              	.LFB141:
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2352              		.loc 1 1339 1
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 24
 2355              		@ frame_needed = 1, uses_anonymous_args = 0
 2356 0000 80B5     		push	{r7, lr}
 2357              	.LCFI57:
 2358              		.cfi_def_cfa_offset 8
 2359              		.cfi_offset 7, -8
 2360              		.cfi_offset 14, -4
 2361 0002 86B0     		sub	sp, sp, #24
 2362              	.LCFI58:
 2363              		.cfi_def_cfa_offset 32
 2364 0004 00AF     		add	r7, sp, #0
 2365              	.LCFI59:
ARM GAS  /tmp/ccRfYZzc.s 			page 66


 2366              		.cfi_def_cfa_register 7
 2367 0006 F860     		str	r0, [r7, #12]
 2368 0008 B960     		str	r1, [r7, #8]
 2369 000a 7A60     		str	r2, [r7, #4]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2370              		.loc 1 1340 17
 2371 000c 0023     		movs	r3, #0
 2372 000e 3B61     		str	r3, [r7, #16]
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 2373              		.loc 1 1344 3
 2374 0010 FB68     		ldr	r3, [r7, #12]
 2375 0012 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 2376 0014 002B     		cmp	r3, #0
 2377 0016 08D0     		beq	.L118
 2378              		.loc 1 1344 3 is_stmt 0 discriminator 1
 2379 0018 FB68     		ldr	r3, [r7, #12]
 2380 001a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 2381 001c 012B     		cmp	r3, #1
 2382 001e 04D0     		beq	.L118
 2383              		.loc 1 1344 3 discriminator 2
 2384 0020 4FF4A861 		mov	r1, #1344
 2385 0024 7948     		ldr	r0, .L132
 2386 0026 FFF7FEFF 		bl	assert_failed
 2387              	.L118:
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 2388              		.loc 1 1345 3 is_stmt 1
 2389 002a FB68     		ldr	r3, [r7, #12]
 2390 002c DB6A     		ldr	r3, [r3, #44]
 2391 002e 002B     		cmp	r3, #0
 2392 0030 13D0     		beq	.L119
 2393              		.loc 1 1345 3 is_stmt 0 discriminator 1
 2394 0032 FB68     		ldr	r3, [r7, #12]
 2395 0034 DB6A     		ldr	r3, [r3, #44]
 2396 0036 B3F1805F 		cmp	r3, #268435456
 2397 003a 0ED0     		beq	.L119
 2398              		.loc 1 1345 3 discriminator 2
 2399 003c FB68     		ldr	r3, [r7, #12]
 2400 003e DB6A     		ldr	r3, [r3, #44]
 2401 0040 B3F1005F 		cmp	r3, #536870912
 2402 0044 09D0     		beq	.L119
 2403              		.loc 1 1345 3 discriminator 3
 2404 0046 FB68     		ldr	r3, [r7, #12]
 2405 0048 DB6A     		ldr	r3, [r3, #44]
 2406 004a B3F1405F 		cmp	r3, #805306368
 2407 004e 04D0     		beq	.L119
 2408              		.loc 1 1345 3 discriminator 4
 2409 0050 40F24151 		movw	r1, #1345
 2410 0054 6D48     		ldr	r0, .L132
 2411 0056 FFF7FEFF 		bl	assert_failed
 2412              	.L119:
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2413              		.loc 1 1348 3 is_stmt 1
ARM GAS  /tmp/ccRfYZzc.s 			page 67


 2414 005a FB68     		ldr	r3, [r7, #12]
 2415 005c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2416 0060 012B     		cmp	r3, #1
 2417 0062 01D1     		bne	.L120
 2418              		.loc 1 1348 3 is_stmt 0 discriminator 1
 2419 0064 0223     		movs	r3, #2
 2420 0066 CCE0     		b	.L121
 2421              	.L120:
 2422              		.loc 1 1348 3 discriminator 2
 2423 0068 FB68     		ldr	r3, [r7, #12]
 2424 006a 0122     		movs	r2, #1
 2425 006c 83F83C20 		strb	r2, [r3, #60]
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 2426              		.loc 1 1353 11 is_stmt 1 discriminator 2
 2427 0070 FB68     		ldr	r3, [r7, #12]
 2428 0072 1B68     		ldr	r3, [r3]
 2429              		.loc 1 1353 21 discriminator 2
 2430 0074 9B68     		ldr	r3, [r3, #8]
 2431              		.loc 1 1353 27 discriminator 2
 2432 0076 03F00103 		and	r3, r3, #1
 2433              		.loc 1 1353 5 discriminator 2
 2434 007a 012B     		cmp	r3, #1
 2435 007c 18D0     		beq	.L122
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 2436              		.loc 1 1356 5
 2437 007e FB68     		ldr	r3, [r7, #12]
 2438 0080 1B68     		ldr	r3, [r3]
 2439 0082 9A68     		ldr	r2, [r3, #8]
 2440 0084 FB68     		ldr	r3, [r7, #12]
 2441 0086 1B68     		ldr	r3, [r3]
 2442 0088 42F00102 		orr	r2, r2, #1
 2443 008c 9A60     		str	r2, [r3, #8]
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 2444              		.loc 1 1360 53
 2445 008e 604B     		ldr	r3, .L132+4
 2446 0090 1B68     		ldr	r3, [r3]
 2447 0092 604A     		ldr	r2, .L132+8
 2448 0094 A2FB0323 		umull	r2, r3, r2, r3
 2449 0098 9A0C     		lsrs	r2, r3, #18
 2450              		.loc 1 1360 34
 2451 009a 1346     		mov	r3, r2
 2452 009c 5B00     		lsls	r3, r3, #1
 2453 009e 1344     		add	r3, r3, r2
 2454              		.loc 1 1360 13
 2455 00a0 3B61     		str	r3, [r7, #16]
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 2456              		.loc 1 1361 10
 2457 00a2 02E0     		b	.L123
ARM GAS  /tmp/ccRfYZzc.s 			page 68


 2458              	.L124:
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 2459              		.loc 1 1363 14
 2460 00a4 3B69     		ldr	r3, [r7, #16]
 2461 00a6 013B     		subs	r3, r3, #1
 2462 00a8 3B61     		str	r3, [r7, #16]
 2463              	.L123:
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 2464              		.loc 1 1361 19
 2465 00aa 3B69     		ldr	r3, [r7, #16]
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 2466              		.loc 1 1361 10
 2467 00ac 002B     		cmp	r3, #0
 2468 00ae F9D1     		bne	.L124
 2469              	.L122:
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 2470              		.loc 1 1368 6
 2471 00b0 FB68     		ldr	r3, [r7, #12]
 2472 00b2 1B68     		ldr	r3, [r3]
 2473 00b4 9B68     		ldr	r3, [r3, #8]
 2474 00b6 03F00103 		and	r3, r3, #1
 2475              		.loc 1 1368 5
 2476 00ba 012B     		cmp	r3, #1
 2477 00bc 40F0A080 		bne	.L125
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 2478              		.loc 1 1373 5
 2479 00c0 FB68     		ldr	r3, [r7, #12]
 2480 00c2 1B6C     		ldr	r3, [r3, #64]
 2481 00c4 23F4E063 		bic	r3, r3, #1792
 2482 00c8 23F00103 		bic	r3, r3, #1
 2483 00cc 43F48072 		orr	r2, r3, #256
 2484 00d0 FB68     		ldr	r3, [r7, #12]
 2485 00d2 1A64     		str	r2, [r3, #64]
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 2486              		.loc 1 1379 9
 2487 00d4 FB68     		ldr	r3, [r7, #12]
 2488 00d6 1B68     		ldr	r3, [r3]
 2489 00d8 5B68     		ldr	r3, [r3, #4]
 2490 00da 03F48063 		and	r3, r3, #1024
 2491              		.loc 1 1379 8
 2492 00de 002B     		cmp	r3, #0
 2493 00e0 07D0     		beq	.L126
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccRfYZzc.s 			page 69


1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 2494              		.loc 1 1381 7
 2495 00e2 FB68     		ldr	r3, [r7, #12]
 2496 00e4 1B6C     		ldr	r3, [r3, #64]
 2497 00e6 23F44053 		bic	r3, r3, #12288
 2498 00ea 43F48052 		orr	r2, r3, #4096
 2499 00ee FB68     		ldr	r3, [r7, #12]
 2500 00f0 1A64     		str	r2, [r3, #64]
 2501              	.L126:
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2502              		.loc 1 1385 9
 2503 00f2 FB68     		ldr	r3, [r7, #12]
 2504 00f4 1B6C     		ldr	r3, [r3, #64]
 2505 00f6 03F48053 		and	r3, r3, #4096
 2506              		.loc 1 1385 8
 2507 00fa B3F5805F 		cmp	r3, #4096
 2508 00fe 06D1     		bne	.L127
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 2509              		.loc 1 1388 7
 2510 0100 FB68     		ldr	r3, [r7, #12]
 2511 0102 5B6C     		ldr	r3, [r3, #68]
 2512 0104 23F00602 		bic	r2, r3, #6
 2513 0108 FB68     		ldr	r3, [r7, #12]
 2514 010a 5A64     		str	r2, [r3, #68]
 2515 010c 02E0     		b	.L128
 2516              	.L127:
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 2517              		.loc 1 1393 7
 2518 010e FB68     		ldr	r3, [r7, #12]
 2519 0110 0022     		movs	r2, #0
 2520 0112 5A64     		str	r2, [r3, #68]
 2521              	.L128:
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
 2522              		.loc 1 1399 5
 2523 0114 FB68     		ldr	r3, [r7, #12]
 2524 0116 0022     		movs	r2, #0
 2525 0118 83F83C20 		strb	r2, [r3, #60]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2526              		.loc 1 1404 19
ARM GAS  /tmp/ccRfYZzc.s 			page 70


 2527 011c 3E4B     		ldr	r3, .L132+12
 2528 011e 7B61     		str	r3, [r7, #20]
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 2529              		.loc 1 1407 9
 2530 0120 FB68     		ldr	r3, [r7, #12]
 2531 0122 9B6B     		ldr	r3, [r3, #56]
 2532              		.loc 1 1407 40
 2533 0124 3D4A     		ldr	r2, .L132+16
 2534 0126 DA63     		str	r2, [r3, #60]
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 2535              		.loc 1 1410 9
 2536 0128 FB68     		ldr	r3, [r7, #12]
 2537 012a 9B6B     		ldr	r3, [r3, #56]
 2538              		.loc 1 1410 44
 2539 012c 3C4A     		ldr	r2, .L132+20
 2540 012e 1A64     		str	r2, [r3, #64]
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 2541              		.loc 1 1413 9
 2542 0130 FB68     		ldr	r3, [r7, #12]
 2543 0132 9B6B     		ldr	r3, [r3, #56]
 2544              		.loc 1 1413 41
 2545 0134 3B4A     		ldr	r2, .L132+24
 2546 0136 DA64     		str	r2, [r3, #76]
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 2547              		.loc 1 1421 5
 2548 0138 FB68     		ldr	r3, [r7, #12]
 2549 013a 1B68     		ldr	r3, [r3]
 2550 013c 6FF02202 		mvn	r2, #34
 2551 0140 1A60     		str	r2, [r3]
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 2552              		.loc 1 1424 5
 2553 0142 FB68     		ldr	r3, [r7, #12]
 2554 0144 1B68     		ldr	r3, [r3]
 2555 0146 5A68     		ldr	r2, [r3, #4]
 2556 0148 FB68     		ldr	r3, [r7, #12]
 2557 014a 1B68     		ldr	r3, [r3]
 2558 014c 42F08062 		orr	r2, r2, #67108864
 2559 0150 5A60     		str	r2, [r3, #4]
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
 2560              		.loc 1 1427 9
ARM GAS  /tmp/ccRfYZzc.s 			page 71


 2561 0152 FB68     		ldr	r3, [r7, #12]
 2562 0154 1B68     		ldr	r3, [r3]
 2563              		.loc 1 1427 25
 2564 0156 9A68     		ldr	r2, [r3, #8]
 2565              		.loc 1 1427 9
 2566 0158 FB68     		ldr	r3, [r7, #12]
 2567 015a 1B68     		ldr	r3, [r3]
 2568              		.loc 1 1427 25
 2569 015c 42F48072 		orr	r2, r2, #256
 2570 0160 9A60     		str	r2, [r3, #8]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 2571              		.loc 1 1430 5
 2572 0162 FB68     		ldr	r3, [r7, #12]
 2573 0164 986B     		ldr	r0, [r3, #56]
 2574              		.loc 1 1430 55
 2575 0166 FB68     		ldr	r3, [r7, #12]
 2576 0168 1B68     		ldr	r3, [r3]
 2577              		.loc 1 1430 50
 2578 016a 4C33     		adds	r3, r3, #76
 2579              		.loc 1 1430 5
 2580 016c 1946     		mov	r1, r3
 2581 016e BA68     		ldr	r2, [r7, #8]
 2582 0170 7B68     		ldr	r3, [r7, #4]
 2583 0172 FFF7FEFF 		bl	HAL_DMA_Start_IT
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 2584              		.loc 1 1433 8
 2585 0176 7B69     		ldr	r3, [r7, #20]
 2586 0178 5B68     		ldr	r3, [r3, #4]
 2587 017a 03F01F03 		and	r3, r3, #31
 2588              		.loc 1 1433 7
 2589 017e 002B     		cmp	r3, #0
 2590 0180 2AD1     		bne	.L129
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 2591              		.loc 1 1436 15
 2592 0182 FB68     		ldr	r3, [r7, #12]
 2593 0184 1B68     		ldr	r3, [r3]
 2594              		.loc 1 1436 9
 2595 0186 284A     		ldr	r2, .L132+28
 2596 0188 9342     		cmp	r3, r2
 2597 018a 15D0     		beq	.L130
 2598              		.loc 1 1436 44 discriminator 1
 2599 018c FB68     		ldr	r3, [r7, #12]
 2600 018e 1B68     		ldr	r3, [r3]
 2601              		.loc 1 1436 35 discriminator 1
 2602 0190 264A     		ldr	r2, .L132+32
 2603 0192 9342     		cmp	r3, r2
 2604 0194 05D1     		bne	.L131
 2605              		.loc 1 1436 72 discriminator 2
 2606 0196 204B     		ldr	r3, .L132+12
 2607 0198 5B68     		ldr	r3, [r3, #4]
 2608              		.loc 1 1436 78 discriminator 2
ARM GAS  /tmp/ccRfYZzc.s 			page 72


 2609 019a 03F01F03 		and	r3, r3, #31
 2610              		.loc 1 1436 64 discriminator 2
 2611 019e 002B     		cmp	r3, #0
 2612 01a0 0AD0     		beq	.L130
 2613              	.L131:
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 2614              		.loc 1 1437 44
 2615 01a2 FB68     		ldr	r3, [r7, #12]
 2616 01a4 1B68     		ldr	r3, [r3]
 2617              		.loc 1 1437 35
 2618 01a6 224A     		ldr	r2, .L132+36
 2619 01a8 9342     		cmp	r3, r2
 2620 01aa 29D1     		bne	.L125
 2621              		.loc 1 1437 72 discriminator 1
 2622 01ac 1A4B     		ldr	r3, .L132+12
 2623 01ae 5B68     		ldr	r3, [r3, #4]
 2624              		.loc 1 1437 99 discriminator 1
 2625 01b0 03F01003 		and	r3, r3, #16
 2626              		.loc 1 1437 64 discriminator 1
 2627 01b4 002B     		cmp	r3, #0
 2628 01b6 23D1     		bne	.L125
 2629              	.L130:
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 2630              		.loc 1 1441 17
 2631 01b8 FB68     		ldr	r3, [r7, #12]
 2632 01ba 1B68     		ldr	r3, [r3]
 2633              		.loc 1 1441 27
 2634 01bc 9B68     		ldr	r3, [r3, #8]
 2635              		.loc 1 1441 33
 2636 01be 03F04053 		and	r3, r3, #805306368
 2637              		.loc 1 1441 11
 2638 01c2 002B     		cmp	r3, #0
 2639 01c4 1CD1     		bne	.L125
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 2640              		.loc 1 1444 15
 2641 01c6 FB68     		ldr	r3, [r7, #12]
 2642 01c8 1B68     		ldr	r3, [r3]
 2643              		.loc 1 1444 31
 2644 01ca 9A68     		ldr	r2, [r3, #8]
 2645              		.loc 1 1444 15
 2646 01cc FB68     		ldr	r3, [r7, #12]
 2647 01ce 1B68     		ldr	r3, [r3]
 2648              		.loc 1 1444 31
 2649 01d0 42F08042 		orr	r2, r2, #1073741824
 2650 01d4 9A60     		str	r2, [r3, #8]
 2651 01d6 13E0     		b	.L125
 2652              	.L129:
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccRfYZzc.s 			page 73


1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 2653              		.loc 1 1453 15
 2654 01d8 FB68     		ldr	r3, [r7, #12]
 2655 01da 1B68     		ldr	r3, [r3]
 2656              		.loc 1 1453 9
 2657 01dc 124A     		ldr	r2, .L132+28
 2658 01de 9342     		cmp	r3, r2
 2659 01e0 0ED1     		bne	.L125
 2660              		.loc 1 1453 44 discriminator 1
 2661 01e2 FB68     		ldr	r3, [r7, #12]
 2662 01e4 1B68     		ldr	r3, [r3]
 2663              		.loc 1 1453 54 discriminator 1
 2664 01e6 9B68     		ldr	r3, [r3, #8]
 2665              		.loc 1 1453 60 discriminator 1
 2666 01e8 03F04053 		and	r3, r3, #805306368
 2667              		.loc 1 1453 35 discriminator 1
 2668 01ec 002B     		cmp	r3, #0
 2669 01ee 07D1     		bne	.L125
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 2670              		.loc 1 1456 15
 2671 01f0 FB68     		ldr	r3, [r7, #12]
 2672 01f2 1B68     		ldr	r3, [r3]
 2673              		.loc 1 1456 31
 2674 01f4 9A68     		ldr	r2, [r3, #8]
 2675              		.loc 1 1456 15
 2676 01f6 FB68     		ldr	r3, [r7, #12]
 2677 01f8 1B68     		ldr	r3, [r3]
 2678              		.loc 1 1456 31
 2679 01fa 42F08042 		orr	r2, r2, #1073741824
 2680 01fe 9A60     		str	r2, [r3, #8]
 2681              	.L125:
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2682              		.loc 1 1462 10
 2683 0200 0023     		movs	r3, #0
 2684              	.L121:
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2685              		.loc 1 1463 1
 2686 0202 1846     		mov	r0, r3
 2687 0204 1837     		adds	r7, r7, #24
 2688              	.LCFI60:
 2689              		.cfi_def_cfa_offset 8
 2690 0206 BD46     		mov	sp, r7
 2691              	.LCFI61:
 2692              		.cfi_def_cfa_register 13
 2693              		@ sp needed
 2694 0208 80BD     		pop	{r7, pc}
 2695              	.L133:
ARM GAS  /tmp/ccRfYZzc.s 			page 74


 2696 020a 00BF     		.align	2
 2697              	.L132:
 2698 020c 00000000 		.word	.LC0
 2699 0210 00000000 		.word	SystemCoreClock
 2700 0214 83DE1B43 		.word	1125899907
 2701 0218 00230140 		.word	1073816320
 2702 021c 00000000 		.word	ADC_DMAConvCplt
 2703 0220 00000000 		.word	ADC_DMAHalfConvCplt
 2704 0224 00000000 		.word	ADC_DMAError
 2705 0228 00200140 		.word	1073815552
 2706 022c 00210140 		.word	1073815808
 2707 0230 00220140 		.word	1073816064
 2708              		.cfi_endproc
 2709              	.LFE141:
 2711              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2712              		.align	1
 2713              		.global	HAL_ADC_Stop_DMA
 2714              		.syntax unified
 2715              		.thumb
 2716              		.thumb_func
 2717              		.fpu fpv4-sp-d16
 2719              	HAL_ADC_Stop_DMA:
 2720              	.LFB142:
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2721              		.loc 1 1472 1
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 16
 2724              		@ frame_needed = 1, uses_anonymous_args = 0
 2725 0000 80B5     		push	{r7, lr}
 2726              	.LCFI62:
 2727              		.cfi_def_cfa_offset 8
 2728              		.cfi_offset 7, -8
 2729              		.cfi_offset 14, -4
 2730 0002 84B0     		sub	sp, sp, #16
 2731              	.LCFI63:
 2732              		.cfi_def_cfa_offset 24
 2733 0004 00AF     		add	r7, sp, #0
 2734              	.LCFI64:
 2735              		.cfi_def_cfa_register 7
 2736 0006 7860     		str	r0, [r7, #4]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2737              		.loc 1 1473 21
 2738 0008 0023     		movs	r3, #0
 2739 000a FB73     		strb	r3, [r7, #15]
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2740              		.loc 1 1476 3
 2741 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 75


 2742 000e 1B68     		ldr	r3, [r3]
 2743 0010 2A4A     		ldr	r2, .L139
 2744 0012 9342     		cmp	r3, r2
 2745 0014 0ED0     		beq	.L135
 2746              		.loc 1 1476 3 is_stmt 0 discriminator 1
 2747 0016 7B68     		ldr	r3, [r7, #4]
 2748 0018 1B68     		ldr	r3, [r3]
 2749 001a 294A     		ldr	r2, .L139+4
 2750 001c 9342     		cmp	r3, r2
 2751 001e 09D0     		beq	.L135
 2752              		.loc 1 1476 3 discriminator 2
 2753 0020 7B68     		ldr	r3, [r7, #4]
 2754 0022 1B68     		ldr	r3, [r3]
 2755 0024 274A     		ldr	r2, .L139+8
 2756 0026 9342     		cmp	r3, r2
 2757 0028 04D0     		beq	.L135
 2758              		.loc 1 1476 3 discriminator 3
 2759 002a 40F2C451 		movw	r1, #1476
 2760 002e 2648     		ldr	r0, .L139+12
 2761 0030 FFF7FEFF 		bl	assert_failed
 2762              	.L135:
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2763              		.loc 1 1479 3 is_stmt 1
 2764 0034 7B68     		ldr	r3, [r7, #4]
 2765 0036 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2766 003a 012B     		cmp	r3, #1
 2767 003c 01D1     		bne	.L136
 2768              		.loc 1 1479 3 is_stmt 0 discriminator 1
 2769 003e 0223     		movs	r3, #2
 2770 0040 38E0     		b	.L137
 2771              	.L136:
 2772              		.loc 1 1479 3 discriminator 2
 2773 0042 7B68     		ldr	r3, [r7, #4]
 2774 0044 0122     		movs	r2, #1
 2775 0046 83F83C20 		strb	r2, [r3, #60]
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 2776              		.loc 1 1483 3 is_stmt 1 discriminator 2
 2777 004a 7B68     		ldr	r3, [r7, #4]
 2778 004c 1B68     		ldr	r3, [r3]
 2779 004e 9A68     		ldr	r2, [r3, #8]
 2780 0050 7B68     		ldr	r3, [r7, #4]
 2781 0052 1B68     		ldr	r3, [r3]
 2782 0054 22F00102 		bic	r2, r2, #1
 2783 0058 9A60     		str	r2, [r3, #8]
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 2784              		.loc 1 1486 6 discriminator 2
 2785 005a 7B68     		ldr	r3, [r7, #4]
 2786 005c 1B68     		ldr	r3, [r3]
 2787 005e 9B68     		ldr	r3, [r3, #8]
 2788 0060 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccRfYZzc.s 			page 76


 2789              		.loc 1 1486 5 discriminator 2
 2790 0064 002B     		cmp	r3, #0
 2791 0066 20D1     		bne	.L138
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 2792              		.loc 1 1489 9
 2793 0068 7B68     		ldr	r3, [r7, #4]
 2794 006a 1B68     		ldr	r3, [r3]
 2795              		.loc 1 1489 25
 2796 006c 9A68     		ldr	r2, [r3, #8]
 2797              		.loc 1 1489 9
 2798 006e 7B68     		ldr	r3, [r7, #4]
 2799 0070 1B68     		ldr	r3, [r3]
 2800              		.loc 1 1489 25
 2801 0072 22F48072 		bic	r2, r2, #256
 2802 0076 9A60     		str	r2, [r3, #8]
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2803              		.loc 1 1493 22
 2804 0078 7B68     		ldr	r3, [r7, #4]
 2805 007a 9B6B     		ldr	r3, [r3, #56]
 2806 007c 1846     		mov	r0, r3
 2807 007e FFF7FEFF 		bl	HAL_DMA_Abort
 2808 0082 0346     		mov	r3, r0
 2809 0084 FB73     		strb	r3, [r7, #15]
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2810              		.loc 1 1496 5
 2811 0086 7B68     		ldr	r3, [r7, #4]
 2812 0088 1B68     		ldr	r3, [r3]
 2813 008a 5A68     		ldr	r2, [r3, #4]
 2814 008c 7B68     		ldr	r3, [r7, #4]
 2815 008e 1B68     		ldr	r3, [r3]
 2816 0090 22F08062 		bic	r2, r2, #67108864
 2817 0094 5A60     		str	r2, [r3, #4]
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 2818              		.loc 1 1499 5
 2819 0096 7B68     		ldr	r3, [r7, #4]
 2820 0098 1B6C     		ldr	r3, [r3, #64]
 2821 009a 23F48853 		bic	r3, r3, #4352
 2822 009e 23F00103 		bic	r3, r3, #1
 2823 00a2 43F00102 		orr	r2, r3, #1
 2824 00a6 7B68     		ldr	r3, [r7, #4]
 2825 00a8 1A64     		str	r2, [r3, #64]
 2826              	.L138:
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
ARM GAS  /tmp/ccRfYZzc.s 			page 77


 2827              		.loc 1 1505 3
 2828 00aa 7B68     		ldr	r3, [r7, #4]
 2829 00ac 0022     		movs	r2, #0
 2830 00ae 83F83C20 		strb	r2, [r3, #60]
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 2831              		.loc 1 1508 10
 2832 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2833              	.L137:
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2834              		.loc 1 1509 1
 2835 00b4 1846     		mov	r0, r3
 2836 00b6 1037     		adds	r7, r7, #16
 2837              	.LCFI65:
 2838              		.cfi_def_cfa_offset 8
 2839 00b8 BD46     		mov	sp, r7
 2840              	.LCFI66:
 2841              		.cfi_def_cfa_register 13
 2842              		@ sp needed
 2843 00ba 80BD     		pop	{r7, pc}
 2844              	.L140:
 2845              		.align	2
 2846              	.L139:
 2847 00bc 00200140 		.word	1073815552
 2848 00c0 00210140 		.word	1073815808
 2849 00c4 00220140 		.word	1073816064
 2850 00c8 00000000 		.word	.LC0
 2851              		.cfi_endproc
 2852              	.LFE142:
 2854              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2855              		.align	1
 2856              		.global	HAL_ADC_GetValue
 2857              		.syntax unified
 2858              		.thumb
 2859              		.thumb_func
 2860              		.fpu fpv4-sp-d16
 2862              	HAL_ADC_GetValue:
 2863              	.LFB143:
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 2864              		.loc 1 1518 1
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 8
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868              		@ link register save eliminated.
 2869 0000 80B4     		push	{r7}
 2870              	.LCFI67:
 2871              		.cfi_def_cfa_offset 4
 2872              		.cfi_offset 7, -4
ARM GAS  /tmp/ccRfYZzc.s 			page 78


 2873 0002 83B0     		sub	sp, sp, #12
 2874              	.LCFI68:
 2875              		.cfi_def_cfa_offset 16
 2876 0004 00AF     		add	r7, sp, #0
 2877              	.LCFI69:
 2878              		.cfi_def_cfa_register 7
 2879 0006 7860     		str	r0, [r7, #4]
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 2880              		.loc 1 1520 14
 2881 0008 7B68     		ldr	r3, [r7, #4]
 2882 000a 1B68     		ldr	r3, [r3]
 2883              		.loc 1 1520 24
 2884 000c DB6C     		ldr	r3, [r3, #76]
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2885              		.loc 1 1521 1
 2886 000e 1846     		mov	r0, r3
 2887 0010 0C37     		adds	r7, r7, #12
 2888              	.LCFI70:
 2889              		.cfi_def_cfa_offset 4
 2890 0012 BD46     		mov	sp, r7
 2891              	.LCFI71:
 2892              		.cfi_def_cfa_register 13
 2893              		@ sp needed
 2894 0014 5DF8047B 		ldr	r7, [sp], #4
 2895              	.LCFI72:
 2896              		.cfi_restore 7
 2897              		.cfi_def_cfa_offset 0
 2898 0018 7047     		bx	lr
 2899              		.cfi_endproc
 2900              	.LFE143:
 2902              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2903              		.align	1
 2904              		.weak	HAL_ADC_ConvCpltCallback
 2905              		.syntax unified
 2906              		.thumb
 2907              		.thumb_func
 2908              		.fpu fpv4-sp-d16
 2910              	HAL_ADC_ConvCpltCallback:
 2911              	.LFB144:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2912              		.loc 1 1530 1
 2913              		.cfi_startproc
 2914              		@ args = 0, pretend = 0, frame = 8
 2915              		@ frame_needed = 1, uses_anonymous_args = 0
 2916              		@ link register save eliminated.
 2917 0000 80B4     		push	{r7}
 2918              	.LCFI73:
 2919              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccRfYZzc.s 			page 79


 2920              		.cfi_offset 7, -4
 2921 0002 83B0     		sub	sp, sp, #12
 2922              	.LCFI74:
 2923              		.cfi_def_cfa_offset 16
 2924 0004 00AF     		add	r7, sp, #0
 2925              	.LCFI75:
 2926              		.cfi_def_cfa_register 7
 2927 0006 7860     		str	r0, [r7, #4]
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2928              		.loc 1 1536 1
 2929 0008 00BF     		nop
 2930 000a 0C37     		adds	r7, r7, #12
 2931              	.LCFI76:
 2932              		.cfi_def_cfa_offset 4
 2933 000c BD46     		mov	sp, r7
 2934              	.LCFI77:
 2935              		.cfi_def_cfa_register 13
 2936              		@ sp needed
 2937 000e 5DF8047B 		ldr	r7, [sp], #4
 2938              	.LCFI78:
 2939              		.cfi_restore 7
 2940              		.cfi_def_cfa_offset 0
 2941 0012 7047     		bx	lr
 2942              		.cfi_endproc
 2943              	.LFE144:
 2945              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2946              		.align	1
 2947              		.weak	HAL_ADC_ConvHalfCpltCallback
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2951              		.fpu fpv4-sp-d16
 2953              	HAL_ADC_ConvHalfCpltCallback:
 2954              	.LFB145:
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2955              		.loc 1 1545 1
 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 8
 2958              		@ frame_needed = 1, uses_anonymous_args = 0
 2959              		@ link register save eliminated.
 2960 0000 80B4     		push	{r7}
 2961              	.LCFI79:
 2962              		.cfi_def_cfa_offset 4
 2963              		.cfi_offset 7, -4
ARM GAS  /tmp/ccRfYZzc.s 			page 80


 2964 0002 83B0     		sub	sp, sp, #12
 2965              	.LCFI80:
 2966              		.cfi_def_cfa_offset 16
 2967 0004 00AF     		add	r7, sp, #0
 2968              	.LCFI81:
 2969              		.cfi_def_cfa_register 7
 2970 0006 7860     		str	r0, [r7, #4]
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2971              		.loc 1 1551 1
 2972 0008 00BF     		nop
 2973 000a 0C37     		adds	r7, r7, #12
 2974              	.LCFI82:
 2975              		.cfi_def_cfa_offset 4
 2976 000c BD46     		mov	sp, r7
 2977              	.LCFI83:
 2978              		.cfi_def_cfa_register 13
 2979              		@ sp needed
 2980 000e 5DF8047B 		ldr	r7, [sp], #4
 2981              	.LCFI84:
 2982              		.cfi_restore 7
 2983              		.cfi_def_cfa_offset 0
 2984 0012 7047     		bx	lr
 2985              		.cfi_endproc
 2986              	.LFE145:
 2988              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2989              		.align	1
 2990              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2991              		.syntax unified
 2992              		.thumb
 2993              		.thumb_func
 2994              		.fpu fpv4-sp-d16
 2996              	HAL_ADC_LevelOutOfWindowCallback:
 2997              	.LFB146:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2998              		.loc 1 1560 1
 2999              		.cfi_startproc
 3000              		@ args = 0, pretend = 0, frame = 8
 3001              		@ frame_needed = 1, uses_anonymous_args = 0
 3002              		@ link register save eliminated.
 3003 0000 80B4     		push	{r7}
 3004              	.LCFI85:
 3005              		.cfi_def_cfa_offset 4
 3006              		.cfi_offset 7, -4
 3007 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccRfYZzc.s 			page 81


 3008              	.LCFI86:
 3009              		.cfi_def_cfa_offset 16
 3010 0004 00AF     		add	r7, sp, #0
 3011              	.LCFI87:
 3012              		.cfi_def_cfa_register 7
 3013 0006 7860     		str	r0, [r7, #4]
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3014              		.loc 1 1566 1
 3015 0008 00BF     		nop
 3016 000a 0C37     		adds	r7, r7, #12
 3017              	.LCFI88:
 3018              		.cfi_def_cfa_offset 4
 3019 000c BD46     		mov	sp, r7
 3020              	.LCFI89:
 3021              		.cfi_def_cfa_register 13
 3022              		@ sp needed
 3023 000e 5DF8047B 		ldr	r7, [sp], #4
 3024              	.LCFI90:
 3025              		.cfi_restore 7
 3026              		.cfi_def_cfa_offset 0
 3027 0012 7047     		bx	lr
 3028              		.cfi_endproc
 3029              	.LFE146:
 3031              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 3032              		.align	1
 3033              		.weak	HAL_ADC_ErrorCallback
 3034              		.syntax unified
 3035              		.thumb
 3036              		.thumb_func
 3037              		.fpu fpv4-sp-d16
 3039              	HAL_ADC_ErrorCallback:
 3040              	.LFB147:
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3041              		.loc 1 1581 1
 3042              		.cfi_startproc
 3043              		@ args = 0, pretend = 0, frame = 8
 3044              		@ frame_needed = 1, uses_anonymous_args = 0
 3045              		@ link register save eliminated.
ARM GAS  /tmp/ccRfYZzc.s 			page 82


 3046 0000 80B4     		push	{r7}
 3047              	.LCFI91:
 3048              		.cfi_def_cfa_offset 4
 3049              		.cfi_offset 7, -4
 3050 0002 83B0     		sub	sp, sp, #12
 3051              	.LCFI92:
 3052              		.cfi_def_cfa_offset 16
 3053 0004 00AF     		add	r7, sp, #0
 3054              	.LCFI93:
 3055              		.cfi_def_cfa_register 7
 3056 0006 7860     		str	r0, [r7, #4]
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3057              		.loc 1 1587 1
 3058 0008 00BF     		nop
 3059 000a 0C37     		adds	r7, r7, #12
 3060              	.LCFI94:
 3061              		.cfi_def_cfa_offset 4
 3062 000c BD46     		mov	sp, r7
 3063              	.LCFI95:
 3064              		.cfi_def_cfa_register 13
 3065              		@ sp needed
 3066 000e 5DF8047B 		ldr	r7, [sp], #4
 3067              	.LCFI96:
 3068              		.cfi_restore 7
 3069              		.cfi_def_cfa_offset 0
 3070 0012 7047     		bx	lr
 3071              		.cfi_endproc
 3072              	.LFE147:
 3074              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 3075              		.align	1
 3076              		.global	HAL_ADC_ConfigChannel
 3077              		.syntax unified
 3078              		.thumb
 3079              		.thumb_func
 3080              		.fpu fpv4-sp-d16
 3082              	HAL_ADC_ConfigChannel:
 3083              	.LFB148:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
ARM GAS  /tmp/ccRfYZzc.s 			page 83


1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3084              		.loc 1 1619 1
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 16
 3087              		@ frame_needed = 1, uses_anonymous_args = 0
 3088 0000 80B5     		push	{r7, lr}
 3089              	.LCFI97:
 3090              		.cfi_def_cfa_offset 8
 3091              		.cfi_offset 7, -8
 3092              		.cfi_offset 14, -4
 3093 0002 84B0     		sub	sp, sp, #16
 3094              	.LCFI98:
 3095              		.cfi_def_cfa_offset 24
 3096 0004 00AF     		add	r7, sp, #0
 3097              	.LCFI99:
 3098              		.cfi_def_cfa_register 7
 3099 0006 7860     		str	r0, [r7, #4]
 3100 0008 3960     		str	r1, [r7]
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 3101              		.loc 1 1620 17
 3102 000a 0023     		movs	r3, #0
 3103 000c BB60     		str	r3, [r7, #8]
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
 3104              		.loc 1 1624 3
 3105 000e 3B68     		ldr	r3, [r7]
 3106 0010 1B68     		ldr	r3, [r3]
 3107 0012 122B     		cmp	r3, #18
 3108 0014 04D9     		bls	.L148
 3109              		.loc 1 1624 3 is_stmt 0 discriminator 1
 3110 0016 4FF4CB61 		mov	r1, #1624
 3111 001a 9B48     		ldr	r0, .L164
 3112 001c FFF7FEFF 		bl	assert_failed
 3113              	.L148:
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 3114              		.loc 1 1625 3 is_stmt 1
 3115 0020 3B68     		ldr	r3, [r7]
 3116 0022 5B68     		ldr	r3, [r3, #4]
 3117 0024 002B     		cmp	r3, #0
ARM GAS  /tmp/ccRfYZzc.s 			page 84


 3118 0026 03D0     		beq	.L149
 3119              		.loc 1 1625 3 is_stmt 0 discriminator 2
 3120 0028 3B68     		ldr	r3, [r7]
 3121 002a 5B68     		ldr	r3, [r3, #4]
 3122 002c 102B     		cmp	r3, #16
 3123 002e 04D9     		bls	.L150
 3124              	.L149:
 3125              		.loc 1 1625 3 discriminator 3
 3126 0030 40F25961 		movw	r1, #1625
 3127 0034 9448     		ldr	r0, .L164
 3128 0036 FFF7FEFF 		bl	assert_failed
 3129              	.L150:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 3130              		.loc 1 1626 3 is_stmt 1
 3131 003a 3B68     		ldr	r3, [r7]
 3132 003c 9B68     		ldr	r3, [r3, #8]
 3133 003e 002B     		cmp	r3, #0
 3134 0040 20D0     		beq	.L151
 3135              		.loc 1 1626 3 is_stmt 0 discriminator 1
 3136 0042 3B68     		ldr	r3, [r7]
 3137 0044 9B68     		ldr	r3, [r3, #8]
 3138 0046 012B     		cmp	r3, #1
 3139 0048 1CD0     		beq	.L151
 3140              		.loc 1 1626 3 discriminator 2
 3141 004a 3B68     		ldr	r3, [r7]
 3142 004c 9B68     		ldr	r3, [r3, #8]
 3143 004e 022B     		cmp	r3, #2
 3144 0050 18D0     		beq	.L151
 3145              		.loc 1 1626 3 discriminator 3
 3146 0052 3B68     		ldr	r3, [r7]
 3147 0054 9B68     		ldr	r3, [r3, #8]
 3148 0056 032B     		cmp	r3, #3
 3149 0058 14D0     		beq	.L151
 3150              		.loc 1 1626 3 discriminator 4
 3151 005a 3B68     		ldr	r3, [r7]
 3152 005c 9B68     		ldr	r3, [r3, #8]
 3153 005e 042B     		cmp	r3, #4
 3154 0060 10D0     		beq	.L151
 3155              		.loc 1 1626 3 discriminator 5
 3156 0062 3B68     		ldr	r3, [r7]
 3157 0064 9B68     		ldr	r3, [r3, #8]
 3158 0066 052B     		cmp	r3, #5
 3159 0068 0CD0     		beq	.L151
 3160              		.loc 1 1626 3 discriminator 6
 3161 006a 3B68     		ldr	r3, [r7]
 3162 006c 9B68     		ldr	r3, [r3, #8]
 3163 006e 062B     		cmp	r3, #6
 3164 0070 08D0     		beq	.L151
 3165              		.loc 1 1626 3 discriminator 7
 3166 0072 3B68     		ldr	r3, [r7]
 3167 0074 9B68     		ldr	r3, [r3, #8]
 3168 0076 072B     		cmp	r3, #7
 3169 0078 04D0     		beq	.L151
 3170              		.loc 1 1626 3 discriminator 8
 3171 007a 40F25A61 		movw	r1, #1626
 3172 007e 8248     		ldr	r0, .L164
 3173 0080 FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/ccRfYZzc.s 			page 85


 3174              	.L151:
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 3175              		.loc 1 1629 3 is_stmt 1
 3176 0084 7B68     		ldr	r3, [r7, #4]
 3177 0086 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3178 008a 012B     		cmp	r3, #1
 3179 008c 01D1     		bne	.L152
 3180              		.loc 1 1629 3 is_stmt 0 discriminator 1
 3181 008e 0223     		movs	r3, #2
 3182 0090 0FE1     		b	.L153
 3183              	.L152:
 3184              		.loc 1 1629 3 discriminator 2
 3185 0092 7B68     		ldr	r3, [r7, #4]
 3186 0094 0122     		movs	r2, #1
 3187 0096 83F83C20 		strb	r2, [r3, #60]
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 3188              		.loc 1 1632 14 is_stmt 1 discriminator 2
 3189 009a 3B68     		ldr	r3, [r7]
 3190 009c 1B68     		ldr	r3, [r3]
 3191              		.loc 1 1632 6 discriminator 2
 3192 009e 092B     		cmp	r3, #9
 3193 00a0 25D9     		bls	.L154
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 3194              		.loc 1 1635 9
 3195 00a2 7B68     		ldr	r3, [r7, #4]
 3196 00a4 1B68     		ldr	r3, [r3]
 3197              		.loc 1 1635 27
 3198 00a6 D968     		ldr	r1, [r3, #12]
 3199              		.loc 1 1635 31
 3200 00a8 3B68     		ldr	r3, [r7]
 3201 00aa 1B68     		ldr	r3, [r3]
 3202 00ac 9BB2     		uxth	r3, r3
 3203 00ae 1A46     		mov	r2, r3
 3204 00b0 1346     		mov	r3, r2
 3205 00b2 5B00     		lsls	r3, r3, #1
 3206 00b4 1344     		add	r3, r3, r2
 3207 00b6 1E3B     		subs	r3, r3, #30
 3208 00b8 0722     		movs	r2, #7
 3209 00ba 02FA03F3 		lsl	r3, r2, r3
 3210              		.loc 1 1635 30
 3211 00be DA43     		mvns	r2, r3
 3212              		.loc 1 1635 9
 3213 00c0 7B68     		ldr	r3, [r7, #4]
 3214 00c2 1B68     		ldr	r3, [r3]
 3215              		.loc 1 1635 27
 3216 00c4 0A40     		ands	r2, r2, r1
 3217 00c6 DA60     		str	r2, [r3, #12]
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 3218              		.loc 1 1638 9
ARM GAS  /tmp/ccRfYZzc.s 			page 86


 3219 00c8 7B68     		ldr	r3, [r7, #4]
 3220 00ca 1B68     		ldr	r3, [r3]
 3221              		.loc 1 1638 27
 3222 00cc D968     		ldr	r1, [r3, #12]
 3223              		.loc 1 1638 30
 3224 00ce 3B68     		ldr	r3, [r7]
 3225 00d0 9A68     		ldr	r2, [r3, #8]
 3226 00d2 3B68     		ldr	r3, [r7]
 3227 00d4 1B68     		ldr	r3, [r3]
 3228 00d6 9BB2     		uxth	r3, r3
 3229 00d8 1846     		mov	r0, r3
 3230 00da 0346     		mov	r3, r0
 3231 00dc 5B00     		lsls	r3, r3, #1
 3232 00de 0344     		add	r3, r3, r0
 3233 00e0 1E3B     		subs	r3, r3, #30
 3234 00e2 9A40     		lsls	r2, r2, r3
 3235              		.loc 1 1638 9
 3236 00e4 7B68     		ldr	r3, [r7, #4]
 3237 00e6 1B68     		ldr	r3, [r3]
 3238              		.loc 1 1638 27
 3239 00e8 0A43     		orrs	r2, r2, r1
 3240 00ea DA60     		str	r2, [r3, #12]
 3241 00ec 22E0     		b	.L155
 3242              	.L154:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 3243              		.loc 1 1643 9
 3244 00ee 7B68     		ldr	r3, [r7, #4]
 3245 00f0 1B68     		ldr	r3, [r3]
 3246              		.loc 1 1643 27
 3247 00f2 1969     		ldr	r1, [r3, #16]
 3248              		.loc 1 1643 31
 3249 00f4 3B68     		ldr	r3, [r7]
 3250 00f6 1B68     		ldr	r3, [r3]
 3251 00f8 9BB2     		uxth	r3, r3
 3252 00fa 1A46     		mov	r2, r3
 3253 00fc 1346     		mov	r3, r2
 3254 00fe 5B00     		lsls	r3, r3, #1
 3255 0100 1344     		add	r3, r3, r2
 3256 0102 0722     		movs	r2, #7
 3257 0104 02FA03F3 		lsl	r3, r2, r3
 3258              		.loc 1 1643 30
 3259 0108 DA43     		mvns	r2, r3
 3260              		.loc 1 1643 9
 3261 010a 7B68     		ldr	r3, [r7, #4]
 3262 010c 1B68     		ldr	r3, [r3]
 3263              		.loc 1 1643 27
 3264 010e 0A40     		ands	r2, r2, r1
 3265 0110 1A61     		str	r2, [r3, #16]
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 3266              		.loc 1 1646 9
 3267 0112 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 87


 3268 0114 1B68     		ldr	r3, [r3]
 3269              		.loc 1 1646 27
 3270 0116 1969     		ldr	r1, [r3, #16]
 3271              		.loc 1 1646 30
 3272 0118 3B68     		ldr	r3, [r7]
 3273 011a 9A68     		ldr	r2, [r3, #8]
 3274 011c 3B68     		ldr	r3, [r7]
 3275 011e 1B68     		ldr	r3, [r3]
 3276 0120 9BB2     		uxth	r3, r3
 3277 0122 1846     		mov	r0, r3
 3278 0124 0346     		mov	r3, r0
 3279 0126 5B00     		lsls	r3, r3, #1
 3280 0128 0344     		add	r3, r3, r0
 3281 012a 9A40     		lsls	r2, r2, r3
 3282              		.loc 1 1646 9
 3283 012c 7B68     		ldr	r3, [r7, #4]
 3284 012e 1B68     		ldr	r3, [r3]
 3285              		.loc 1 1646 27
 3286 0130 0A43     		orrs	r2, r2, r1
 3287 0132 1A61     		str	r2, [r3, #16]
 3288              	.L155:
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 3289              		.loc 1 1650 14
 3290 0134 3B68     		ldr	r3, [r7]
 3291 0136 5B68     		ldr	r3, [r3, #4]
 3292              		.loc 1 1650 6
 3293 0138 062B     		cmp	r3, #6
 3294 013a 24D8     		bhi	.L156
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 3295              		.loc 1 1653 9
 3296 013c 7B68     		ldr	r3, [r7, #4]
 3297 013e 1B68     		ldr	r3, [r3]
 3298              		.loc 1 1653 26
 3299 0140 596B     		ldr	r1, [r3, #52]
 3300              		.loc 1 1653 30
 3301 0142 3B68     		ldr	r3, [r7]
 3302 0144 5A68     		ldr	r2, [r3, #4]
 3303 0146 1346     		mov	r3, r2
 3304 0148 9B00     		lsls	r3, r3, #2
 3305 014a 1344     		add	r3, r3, r2
 3306 014c 053B     		subs	r3, r3, #5
 3307 014e 1F22     		movs	r2, #31
 3308 0150 02FA03F3 		lsl	r3, r2, r3
 3309              		.loc 1 1653 29
 3310 0154 DA43     		mvns	r2, r3
 3311              		.loc 1 1653 9
 3312 0156 7B68     		ldr	r3, [r7, #4]
 3313 0158 1B68     		ldr	r3, [r3]
 3314              		.loc 1 1653 26
 3315 015a 0A40     		ands	r2, r2, r1
 3316 015c 5A63     		str	r2, [r3, #52]
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccRfYZzc.s 			page 88


1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 3317              		.loc 1 1656 9
 3318 015e 7B68     		ldr	r3, [r7, #4]
 3319 0160 1B68     		ldr	r3, [r3]
 3320              		.loc 1 1656 26
 3321 0162 596B     		ldr	r1, [r3, #52]
 3322              		.loc 1 1656 29
 3323 0164 3B68     		ldr	r3, [r7]
 3324 0166 1B68     		ldr	r3, [r3]
 3325 0168 9BB2     		uxth	r3, r3
 3326 016a 1846     		mov	r0, r3
 3327 016c 3B68     		ldr	r3, [r7]
 3328 016e 5A68     		ldr	r2, [r3, #4]
 3329 0170 1346     		mov	r3, r2
 3330 0172 9B00     		lsls	r3, r3, #2
 3331 0174 1344     		add	r3, r3, r2
 3332 0176 053B     		subs	r3, r3, #5
 3333 0178 00FA03F2 		lsl	r2, r0, r3
 3334              		.loc 1 1656 9
 3335 017c 7B68     		ldr	r3, [r7, #4]
 3336 017e 1B68     		ldr	r3, [r3]
 3337              		.loc 1 1656 26
 3338 0180 0A43     		orrs	r2, r2, r1
 3339 0182 5A63     		str	r2, [r3, #52]
 3340 0184 4CE0     		b	.L157
 3341              	.L156:
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
 3342              		.loc 1 1659 19
 3343 0186 3B68     		ldr	r3, [r7]
 3344 0188 5B68     		ldr	r3, [r3, #4]
 3345              		.loc 1 1659 11
 3346 018a 0C2B     		cmp	r3, #12
 3347 018c 24D8     		bhi	.L158
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 3348              		.loc 1 1662 9
 3349 018e 7B68     		ldr	r3, [r7, #4]
 3350 0190 1B68     		ldr	r3, [r3]
 3351              		.loc 1 1662 26
 3352 0192 196B     		ldr	r1, [r3, #48]
 3353              		.loc 1 1662 30
 3354 0194 3B68     		ldr	r3, [r7]
 3355 0196 5A68     		ldr	r2, [r3, #4]
 3356 0198 1346     		mov	r3, r2
 3357 019a 9B00     		lsls	r3, r3, #2
 3358 019c 1344     		add	r3, r3, r2
 3359 019e 233B     		subs	r3, r3, #35
 3360 01a0 1F22     		movs	r2, #31
 3361 01a2 02FA03F3 		lsl	r3, r2, r3
 3362              		.loc 1 1662 29
 3363 01a6 DA43     		mvns	r2, r3
 3364              		.loc 1 1662 9
 3365 01a8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 89


 3366 01aa 1B68     		ldr	r3, [r3]
 3367              		.loc 1 1662 26
 3368 01ac 0A40     		ands	r2, r2, r1
 3369 01ae 1A63     		str	r2, [r3, #48]
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 3370              		.loc 1 1665 9
 3371 01b0 7B68     		ldr	r3, [r7, #4]
 3372 01b2 1B68     		ldr	r3, [r3]
 3373              		.loc 1 1665 26
 3374 01b4 196B     		ldr	r1, [r3, #48]
 3375              		.loc 1 1665 29
 3376 01b6 3B68     		ldr	r3, [r7]
 3377 01b8 1B68     		ldr	r3, [r3]
 3378 01ba 9BB2     		uxth	r3, r3
 3379 01bc 1846     		mov	r0, r3
 3380 01be 3B68     		ldr	r3, [r7]
 3381 01c0 5A68     		ldr	r2, [r3, #4]
 3382 01c2 1346     		mov	r3, r2
 3383 01c4 9B00     		lsls	r3, r3, #2
 3384 01c6 1344     		add	r3, r3, r2
 3385 01c8 233B     		subs	r3, r3, #35
 3386 01ca 00FA03F2 		lsl	r2, r0, r3
 3387              		.loc 1 1665 9
 3388 01ce 7B68     		ldr	r3, [r7, #4]
 3389 01d0 1B68     		ldr	r3, [r3]
 3390              		.loc 1 1665 26
 3391 01d2 0A43     		orrs	r2, r2, r1
 3392 01d4 1A63     		str	r2, [r3, #48]
 3393 01d6 23E0     		b	.L157
 3394              	.L158:
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 3395              		.loc 1 1671 9
 3396 01d8 7B68     		ldr	r3, [r7, #4]
 3397 01da 1B68     		ldr	r3, [r3]
 3398              		.loc 1 1671 26
 3399 01dc D96A     		ldr	r1, [r3, #44]
 3400              		.loc 1 1671 30
 3401 01de 3B68     		ldr	r3, [r7]
 3402 01e0 5A68     		ldr	r2, [r3, #4]
 3403 01e2 1346     		mov	r3, r2
 3404 01e4 9B00     		lsls	r3, r3, #2
 3405 01e6 1344     		add	r3, r3, r2
 3406 01e8 413B     		subs	r3, r3, #65
 3407 01ea 1F22     		movs	r2, #31
 3408 01ec 02FA03F3 		lsl	r3, r2, r3
 3409              		.loc 1 1671 29
 3410 01f0 DA43     		mvns	r2, r3
 3411              		.loc 1 1671 9
 3412 01f2 7B68     		ldr	r3, [r7, #4]
 3413 01f4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 90


 3414              		.loc 1 1671 26
 3415 01f6 0A40     		ands	r2, r2, r1
 3416 01f8 DA62     		str	r2, [r3, #44]
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 3417              		.loc 1 1674 9
 3418 01fa 7B68     		ldr	r3, [r7, #4]
 3419 01fc 1B68     		ldr	r3, [r3]
 3420              		.loc 1 1674 26
 3421 01fe D96A     		ldr	r1, [r3, #44]
 3422              		.loc 1 1674 29
 3423 0200 3B68     		ldr	r3, [r7]
 3424 0202 1B68     		ldr	r3, [r3]
 3425 0204 9BB2     		uxth	r3, r3
 3426 0206 1846     		mov	r0, r3
 3427 0208 3B68     		ldr	r3, [r7]
 3428 020a 5A68     		ldr	r2, [r3, #4]
 3429 020c 1346     		mov	r3, r2
 3430 020e 9B00     		lsls	r3, r3, #2
 3431 0210 1344     		add	r3, r3, r2
 3432 0212 413B     		subs	r3, r3, #65
 3433 0214 00FA03F2 		lsl	r2, r0, r3
 3434              		.loc 1 1674 9
 3435 0218 7B68     		ldr	r3, [r7, #4]
 3436 021a 1B68     		ldr	r3, [r3]
 3437              		.loc 1 1674 26
 3438 021c 0A43     		orrs	r2, r2, r1
 3439 021e DA62     		str	r2, [r3, #44]
 3440              	.L157:
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 3441              		.loc 1 1680 19
 3442 0220 1A4B     		ldr	r3, .L164+4
 3443 0222 FB60     		str	r3, [r7, #12]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 3444              		.loc 1 1683 12
 3445 0224 7B68     		ldr	r3, [r7, #4]
 3446 0226 1B68     		ldr	r3, [r3]
 3447              		.loc 1 1683 6
 3448 0228 194A     		ldr	r2, .L164+8
 3449 022a 9342     		cmp	r3, r2
 3450 022c 09D1     		bne	.L159
 3451              		.loc 1 1683 43 discriminator 1
 3452 022e 3B68     		ldr	r3, [r7]
 3453 0230 1B68     		ldr	r3, [r3]
 3454              		.loc 1 1683 32 discriminator 1
 3455 0232 122B     		cmp	r3, #18
 3456 0234 05D1     		bne	.L159
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & AD
ARM GAS  /tmp/ccRfYZzc.s 			page 91


1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
 3457              		.loc 1 1691 24
 3458 0236 FB68     		ldr	r3, [r7, #12]
 3459 0238 5B68     		ldr	r3, [r3, #4]
 3460 023a 43F48002 		orr	r2, r3, #4194304
 3461 023e FB68     		ldr	r3, [r7, #12]
 3462 0240 5A60     		str	r2, [r3, #4]
 3463              	.L159:
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Channel_17 is selected for VREFINT enable TSVREFE */
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 3464              		.loc 1 1696 12
 3465 0242 7B68     		ldr	r3, [r7, #4]
 3466 0244 1B68     		ldr	r3, [r3]
 3467              		.loc 1 1696 6
 3468 0246 124A     		ldr	r2, .L164+8
 3469 0248 9342     		cmp	r3, r2
 3470 024a 2DD1     		bne	.L160
 3471              		.loc 1 1696 44 discriminator 1
 3472 024c 3B68     		ldr	r3, [r7]
 3473 024e 1B68     		ldr	r3, [r3]
 3474              		.loc 1 1696 32 discriminator 1
 3475 0250 102B     		cmp	r3, #16
 3476 0252 03D0     		beq	.L161
 3477              		.loc 1 1696 92 discriminator 2
 3478 0254 3B68     		ldr	r3, [r7]
 3479 0256 1B68     		ldr	r3, [r3]
 3480              		.loc 1 1696 81 discriminator 2
 3481 0258 112B     		cmp	r3, #17
 3482 025a 25D1     		bne	.L160
 3483              	.L161:
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHAN
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Temperature sensor and VREFINT channel*/
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 3484              		.loc 1 1704 24
 3485 025c FB68     		ldr	r3, [r7, #12]
 3486 025e 5B68     		ldr	r3, [r3, #4]
 3487 0260 43F40002 		orr	r2, r3, #8388608
 3488 0264 FB68     		ldr	r3, [r7, #12]
 3489 0266 5A60     		str	r2, [r3, #4]
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 3490              		.loc 1 1706 16
 3491 0268 3B68     		ldr	r3, [r7]
 3492 026a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 92


 3493              		.loc 1 1706 7
 3494 026c 102B     		cmp	r3, #16
 3495 026e 1BD1     		bne	.L160
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 3496              		.loc 1 1710 61
 3497 0270 084B     		ldr	r3, .L164+12
 3498 0272 1B68     		ldr	r3, [r3]
 3499 0274 084A     		ldr	r2, .L164+16
 3500 0276 A2FB0323 		umull	r2, r3, r2, r3
 3501 027a 9A0C     		lsrs	r2, r3, #18
 3502              		.loc 1 1710 42
 3503 027c 1346     		mov	r3, r2
 3504 027e 9B00     		lsls	r3, r3, #2
 3505 0280 1344     		add	r3, r3, r2
 3506 0282 5B00     		lsls	r3, r3, #1
 3507              		.loc 1 1710 15
 3508 0284 BB60     		str	r3, [r7, #8]
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 3509              		.loc 1 1711 12
 3510 0286 0CE0     		b	.L162
 3511              	.L165:
 3512              		.align	2
 3513              	.L164:
 3514 0288 00000000 		.word	.LC0
 3515 028c 00230140 		.word	1073816320
 3516 0290 00200140 		.word	1073815552
 3517 0294 00000000 		.word	SystemCoreClock
 3518 0298 83DE1B43 		.word	1125899907
 3519              	.L163:
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 3520              		.loc 1 1713 16
 3521 029c BB68     		ldr	r3, [r7, #8]
 3522 029e 013B     		subs	r3, r3, #1
 3523 02a0 BB60     		str	r3, [r7, #8]
 3524              	.L162:
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 3525              		.loc 1 1711 21
 3526 02a2 BB68     		ldr	r3, [r7, #8]
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 3527              		.loc 1 1711 12
 3528 02a4 002B     		cmp	r3, #0
 3529 02a6 F9D1     		bne	.L163
 3530              	.L160:
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 3531              		.loc 1 1719 3
 3532 02a8 7B68     		ldr	r3, [r7, #4]
 3533 02aa 0022     		movs	r2, #0
 3534 02ac 83F83C20 		strb	r2, [r3, #60]
ARM GAS  /tmp/ccRfYZzc.s 			page 93


1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 3535              		.loc 1 1722 10
 3536 02b0 0023     		movs	r3, #0
 3537              	.L153:
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3538              		.loc 1 1723 1
 3539 02b2 1846     		mov	r0, r3
 3540 02b4 1037     		adds	r7, r7, #16
 3541              	.LCFI100:
 3542              		.cfi_def_cfa_offset 8
 3543 02b6 BD46     		mov	sp, r7
 3544              	.LCFI101:
 3545              		.cfi_def_cfa_register 13
 3546              		@ sp needed
 3547 02b8 80BD     		pop	{r7, pc}
 3548              		.cfi_endproc
 3549              	.LFE148:
 3551 02ba 00BF     		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3552              		.align	1
 3553              		.global	HAL_ADC_AnalogWDGConfig
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu fpv4-sp-d16
 3559              	HAL_ADC_AnalogWDGConfig:
 3560              	.LFB149:
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3561              		.loc 1 1742 1
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 16
 3564              		@ frame_needed = 1, uses_anonymous_args = 0
 3565 0000 80B5     		push	{r7, lr}
 3566              	.LCFI102:
 3567              		.cfi_def_cfa_offset 8
 3568              		.cfi_offset 7, -8
 3569              		.cfi_offset 14, -4
 3570 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccRfYZzc.s 			page 94


 3571              	.LCFI103:
 3572              		.cfi_def_cfa_offset 24
 3573 0004 00AF     		add	r7, sp, #0
 3574              	.LCFI104:
 3575              		.cfi_def_cfa_register 7
 3576 0006 7860     		str	r0, [r7, #4]
 3577 0008 3960     		str	r1, [r7]
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
 3578              		.loc 1 1744 12
 3579 000a 0023     		movs	r3, #0
 3580 000c FB60     		str	r3, [r7, #12]
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
 3581              		.loc 1 1748 3
 3582 000e 3B68     		ldr	r3, [r7]
 3583 0010 1B68     		ldr	r3, [r3]
 3584 0012 734A     		ldr	r2, .L184
 3585 0014 9342     		cmp	r3, r2
 3586 0016 21D0     		beq	.L167
 3587              		.loc 1 1748 3 is_stmt 0 discriminator 1
 3588 0018 3B68     		ldr	r3, [r7]
 3589 001a 1B68     		ldr	r3, [r3]
 3590 001c 714A     		ldr	r2, .L184+4
 3591 001e 9342     		cmp	r3, r2
 3592 0020 1CD0     		beq	.L167
 3593              		.loc 1 1748 3 discriminator 2
 3594 0022 3B68     		ldr	r3, [r7]
 3595 0024 1B68     		ldr	r3, [r3]
 3596 0026 704A     		ldr	r2, .L184+8
 3597 0028 9342     		cmp	r3, r2
 3598 002a 17D0     		beq	.L167
 3599              		.loc 1 1748 3 discriminator 3
 3600 002c 3B68     		ldr	r3, [r7]
 3601 002e 1B68     		ldr	r3, [r3]
 3602 0030 B3F5000F 		cmp	r3, #8388608
 3603 0034 12D0     		beq	.L167
 3604              		.loc 1 1748 3 discriminator 4
 3605 0036 3B68     		ldr	r3, [r7]
 3606 0038 1B68     		ldr	r3, [r3]
 3607 003a B3F5800F 		cmp	r3, #4194304
 3608 003e 0DD0     		beq	.L167
 3609              		.loc 1 1748 3 discriminator 5
 3610 0040 3B68     		ldr	r3, [r7]
 3611 0042 1B68     		ldr	r3, [r3]
 3612 0044 B3F5400F 		cmp	r3, #12582912
 3613 0048 08D0     		beq	.L167
 3614              		.loc 1 1748 3 discriminator 6
 3615 004a 3B68     		ldr	r3, [r7]
 3616 004c 1B68     		ldr	r3, [r3]
 3617 004e 002B     		cmp	r3, #0
 3618 0050 04D0     		beq	.L167
 3619              		.loc 1 1748 3 discriminator 7
 3620 0052 40F2D461 		movw	r1, #1748
 3621 0056 6548     		ldr	r0, .L184+12
ARM GAS  /tmp/ccRfYZzc.s 			page 95


 3622 0058 FFF7FEFF 		bl	assert_failed
 3623              	.L167:
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
 3624              		.loc 1 1749 3 is_stmt 1
 3625 005c 3B68     		ldr	r3, [r7]
 3626 005e DB68     		ldr	r3, [r3, #12]
 3627 0060 122B     		cmp	r3, #18
 3628 0062 04D9     		bls	.L168
 3629              		.loc 1 1749 3 is_stmt 0 discriminator 1
 3630 0064 40F2D561 		movw	r1, #1749
 3631 0068 6048     		ldr	r0, .L184+12
 3632 006a FFF7FEFF 		bl	assert_failed
 3633              	.L168:
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3634              		.loc 1 1750 3 is_stmt 1
 3635 006e 3B68     		ldr	r3, [r7]
 3636 0070 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3637 0072 002B     		cmp	r3, #0
 3638 0074 08D0     		beq	.L169
 3639              		.loc 1 1750 3 is_stmt 0 discriminator 1
 3640 0076 3B68     		ldr	r3, [r7]
 3641 0078 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3642 007a 012B     		cmp	r3, #1
 3643 007c 04D0     		beq	.L169
 3644              		.loc 1 1750 3 discriminator 2
 3645 007e 40F2D661 		movw	r1, #1750
 3646 0082 5A48     		ldr	r0, .L184+12
 3647 0084 FFF7FEFF 		bl	assert_failed
 3648              	.L169:
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
 3649              		.loc 1 1753 9 is_stmt 1
 3650 0088 7B68     		ldr	r3, [r7, #4]
 3651 008a 1B68     		ldr	r3, [r3]
 3652 008c 5B68     		ldr	r3, [r3, #4]
 3653              		.loc 1 1753 7
 3654 008e 03F04073 		and	r3, r3, #50331648
 3655 0092 FB60     		str	r3, [r7, #12]
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
 3656              		.loc 1 1754 3
 3657 0094 FB68     		ldr	r3, [r7, #12]
 3658 0096 002B     		cmp	r3, #0
 3659 0098 04D1     		bne	.L170
 3660              		.loc 1 1754 3 is_stmt 0 discriminator 2
 3661 009a 3B68     		ldr	r3, [r7]
 3662 009c 5B68     		ldr	r3, [r3, #4]
 3663 009e B3F5805F 		cmp	r3, #4096
 3664 00a2 1DD3     		bcc	.L171
 3665              	.L170:
 3666              		.loc 1 1754 3 discriminator 3
 3667 00a4 FB68     		ldr	r3, [r7, #12]
 3668 00a6 B3F1807F 		cmp	r3, #16777216
 3669 00aa 04D1     		bne	.L172
 3670              		.loc 1 1754 3 discriminator 5
 3671 00ac 3B68     		ldr	r3, [r7]
 3672 00ae 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 96


 3673 00b0 B3F5806F 		cmp	r3, #1024
 3674 00b4 14D3     		bcc	.L171
 3675              	.L172:
 3676              		.loc 1 1754 3 discriminator 6
 3677 00b6 FB68     		ldr	r3, [r7, #12]
 3678 00b8 B3F1007F 		cmp	r3, #33554432
 3679 00bc 03D1     		bne	.L173
 3680              		.loc 1 1754 3 discriminator 8
 3681 00be 3B68     		ldr	r3, [r7]
 3682 00c0 5B68     		ldr	r3, [r3, #4]
 3683 00c2 FF2B     		cmp	r3, #255
 3684 00c4 0CD9     		bls	.L171
 3685              	.L173:
 3686              		.loc 1 1754 3 discriminator 9
 3687 00c6 FB68     		ldr	r3, [r7, #12]
 3688 00c8 B3F1407F 		cmp	r3, #50331648
 3689 00cc 03D1     		bne	.L174
 3690              		.loc 1 1754 3 discriminator 11
 3691 00ce 3B68     		ldr	r3, [r7]
 3692 00d0 5B68     		ldr	r3, [r3, #4]
 3693 00d2 3F2B     		cmp	r3, #63
 3694 00d4 04D9     		bls	.L171
 3695              	.L174:
 3696              		.loc 1 1754 3 discriminator 12
 3697 00d6 40F2DA61 		movw	r1, #1754
 3698 00da 4448     		ldr	r0, .L184+12
 3699 00dc FFF7FEFF 		bl	assert_failed
 3700              	.L171:
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
 3701              		.loc 1 1755 3 is_stmt 1
 3702 00e0 FB68     		ldr	r3, [r7, #12]
 3703 00e2 002B     		cmp	r3, #0
 3704 00e4 04D1     		bne	.L175
 3705              		.loc 1 1755 3 is_stmt 0 discriminator 2
 3706 00e6 3B68     		ldr	r3, [r7]
 3707 00e8 9B68     		ldr	r3, [r3, #8]
 3708 00ea B3F5805F 		cmp	r3, #4096
 3709 00ee 1DD3     		bcc	.L176
 3710              	.L175:
 3711              		.loc 1 1755 3 discriminator 3
 3712 00f0 FB68     		ldr	r3, [r7, #12]
 3713 00f2 B3F1807F 		cmp	r3, #16777216
 3714 00f6 04D1     		bne	.L177
 3715              		.loc 1 1755 3 discriminator 5
 3716 00f8 3B68     		ldr	r3, [r7]
 3717 00fa 9B68     		ldr	r3, [r3, #8]
 3718 00fc B3F5806F 		cmp	r3, #1024
 3719 0100 14D3     		bcc	.L176
 3720              	.L177:
 3721              		.loc 1 1755 3 discriminator 6
 3722 0102 FB68     		ldr	r3, [r7, #12]
 3723 0104 B3F1007F 		cmp	r3, #33554432
 3724 0108 03D1     		bne	.L178
 3725              		.loc 1 1755 3 discriminator 8
 3726 010a 3B68     		ldr	r3, [r7]
 3727 010c 9B68     		ldr	r3, [r3, #8]
 3728 010e FF2B     		cmp	r3, #255
ARM GAS  /tmp/ccRfYZzc.s 			page 97


 3729 0110 0CD9     		bls	.L176
 3730              	.L178:
 3731              		.loc 1 1755 3 discriminator 9
 3732 0112 FB68     		ldr	r3, [r7, #12]
 3733 0114 B3F1407F 		cmp	r3, #50331648
 3734 0118 03D1     		bne	.L179
 3735              		.loc 1 1755 3 discriminator 11
 3736 011a 3B68     		ldr	r3, [r7]
 3737 011c 9B68     		ldr	r3, [r3, #8]
 3738 011e 3F2B     		cmp	r3, #63
 3739 0120 04D9     		bls	.L176
 3740              	.L179:
 3741              		.loc 1 1755 3 discriminator 12
 3742 0122 40F2DB61 		movw	r1, #1755
 3743 0126 3148     		ldr	r0, .L184+12
 3744 0128 FFF7FEFF 		bl	assert_failed
 3745              	.L176:
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 3746              		.loc 1 1759 3 is_stmt 1
 3747 012c 7B68     		ldr	r3, [r7, #4]
 3748 012e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3749 0132 012B     		cmp	r3, #1
 3750 0134 01D1     		bne	.L180
 3751              		.loc 1 1759 3 is_stmt 0 discriminator 1
 3752 0136 0223     		movs	r3, #2
 3753 0138 4DE0     		b	.L181
 3754              	.L180:
 3755              		.loc 1 1759 3 discriminator 2
 3756 013a 7B68     		ldr	r3, [r7, #4]
 3757 013c 0122     		movs	r2, #1
 3758 013e 83F83C20 		strb	r2, [r3, #60]
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 3759              		.loc 1 1761 21 is_stmt 1 discriminator 2
 3760 0142 3B68     		ldr	r3, [r7]
 3761 0144 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3762              		.loc 1 1761 5 discriminator 2
 3763 0146 012B     		cmp	r3, #1
 3764 0148 08D1     		bne	.L182
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 3765              		.loc 1 1764 5
 3766 014a 7B68     		ldr	r3, [r7, #4]
 3767 014c 1B68     		ldr	r3, [r3]
 3768 014e 5A68     		ldr	r2, [r3, #4]
 3769 0150 7B68     		ldr	r3, [r7, #4]
 3770 0152 1B68     		ldr	r3, [r3]
 3771 0154 42F04002 		orr	r2, r2, #64
 3772 0158 5A60     		str	r2, [r3, #4]
 3773 015a 07E0     		b	.L183
 3774              	.L182:
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
ARM GAS  /tmp/ccRfYZzc.s 			page 98


1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 3775              		.loc 1 1769 5
 3776 015c 7B68     		ldr	r3, [r7, #4]
 3777 015e 1B68     		ldr	r3, [r3]
 3778 0160 5A68     		ldr	r2, [r3, #4]
 3779 0162 7B68     		ldr	r3, [r7, #4]
 3780 0164 1B68     		ldr	r3, [r3]
 3781 0166 22F04002 		bic	r2, r2, #64
 3782 016a 5A60     		str	r2, [r3, #4]
 3783              	.L183:
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 3784              		.loc 1 1773 7
 3785 016c 7B68     		ldr	r3, [r7, #4]
 3786 016e 1B68     		ldr	r3, [r3]
 3787              		.loc 1 1773 23
 3788 0170 5B68     		ldr	r3, [r3, #4]
 3789              		.loc 1 1773 7
 3790 0172 7A68     		ldr	r2, [r7, #4]
 3791 0174 1268     		ldr	r2, [r2]
 3792              		.loc 1 1773 23
 3793 0176 23F44003 		bic	r3, r3, #12582912
 3794 017a 23F40073 		bic	r3, r3, #512
 3795 017e 5360     		str	r3, [r2, #4]
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 3796              		.loc 1 1776 7
 3797 0180 7B68     		ldr	r3, [r7, #4]
 3798 0182 1B68     		ldr	r3, [r3]
 3799              		.loc 1 1776 23
 3800 0184 5968     		ldr	r1, [r3, #4]
 3801              		.loc 1 1776 41
 3802 0186 3B68     		ldr	r3, [r7]
 3803 0188 1A68     		ldr	r2, [r3]
 3804              		.loc 1 1776 7
 3805 018a 7B68     		ldr	r3, [r7, #4]
 3806 018c 1B68     		ldr	r3, [r3]
 3807              		.loc 1 1776 23
 3808 018e 0A43     		orrs	r2, r2, r1
 3809 0190 5A60     		str	r2, [r3, #4]
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 3810              		.loc 1 1779 7
 3811 0192 7B68     		ldr	r3, [r7, #4]
 3812 0194 1B68     		ldr	r3, [r3]
 3813              		.loc 1 1779 40
 3814 0196 3A68     		ldr	r2, [r7]
 3815 0198 5268     		ldr	r2, [r2, #4]
 3816              		.loc 1 1779 23
 3817 019a 5A62     		str	r2, [r3, #36]
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccRfYZzc.s 			page 99


1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 3818              		.loc 1 1782 7
 3819 019c 7B68     		ldr	r3, [r7, #4]
 3820 019e 1B68     		ldr	r3, [r3]
 3821              		.loc 1 1782 40
 3822 01a0 3A68     		ldr	r2, [r7]
 3823 01a2 9268     		ldr	r2, [r2, #8]
 3824              		.loc 1 1782 23
 3825 01a4 9A62     		str	r2, [r3, #40]
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 3826              		.loc 1 1785 7
 3827 01a6 7B68     		ldr	r3, [r7, #4]
 3828 01a8 1B68     		ldr	r3, [r3]
 3829              		.loc 1 1785 23
 3830 01aa 5A68     		ldr	r2, [r3, #4]
 3831              		.loc 1 1785 7
 3832 01ac 7B68     		ldr	r3, [r7, #4]
 3833 01ae 1B68     		ldr	r3, [r3]
 3834              		.loc 1 1785 23
 3835 01b0 22F01F02 		bic	r2, r2, #31
 3836 01b4 5A60     		str	r2, [r3, #4]
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 3837              		.loc 1 1788 7
 3838 01b6 7B68     		ldr	r3, [r7, #4]
 3839 01b8 1B68     		ldr	r3, [r3]
 3840              		.loc 1 1788 23
 3841 01ba 5A68     		ldr	r2, [r3, #4]
 3842              		.loc 1 1788 63
 3843 01bc 3B68     		ldr	r3, [r7]
 3844 01be DB68     		ldr	r3, [r3, #12]
 3845              		.loc 1 1788 37
 3846 01c0 9BB2     		uxth	r3, r3
 3847              		.loc 1 1788 26
 3848 01c2 1946     		mov	r1, r3
 3849              		.loc 1 1788 7
 3850 01c4 7B68     		ldr	r3, [r7, #4]
 3851 01c6 1B68     		ldr	r3, [r3]
 3852              		.loc 1 1788 23
 3853 01c8 0A43     		orrs	r2, r2, r1
 3854 01ca 5A60     		str	r2, [r3, #4]
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 3855              		.loc 1 1791 3
 3856 01cc 7B68     		ldr	r3, [r7, #4]
 3857 01ce 0022     		movs	r2, #0
 3858 01d0 83F83C20 		strb	r2, [r3, #60]
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 3859              		.loc 1 1794 10
 3860 01d4 0023     		movs	r3, #0
ARM GAS  /tmp/ccRfYZzc.s 			page 100


 3861              	.L181:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3862              		.loc 1 1795 1
 3863 01d6 1846     		mov	r0, r3
 3864 01d8 1037     		adds	r7, r7, #16
 3865              	.LCFI105:
 3866              		.cfi_def_cfa_offset 8
 3867 01da BD46     		mov	sp, r7
 3868              	.LCFI106:
 3869              		.cfi_def_cfa_register 13
 3870              		@ sp needed
 3871 01dc 80BD     		pop	{r7, pc}
 3872              	.L185:
 3873 01de 00BF     		.align	2
 3874              	.L184:
 3875 01e0 00028000 		.word	8389120
 3876 01e4 00024000 		.word	4194816
 3877 01e8 0002C000 		.word	12583424
 3878 01ec 00000000 		.word	.LC0
 3879              		.cfi_endproc
 3880              	.LFE149:
 3882              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3883              		.align	1
 3884              		.global	HAL_ADC_GetState
 3885              		.syntax unified
 3886              		.thumb
 3887              		.thumb_func
 3888              		.fpu fpv4-sp-d16
 3890              	HAL_ADC_GetState:
 3891              	.LFB150:
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccRfYZzc.s 			page 101


1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3892              		.loc 1 1824 1
 3893              		.cfi_startproc
 3894              		@ args = 0, pretend = 0, frame = 8
 3895              		@ frame_needed = 1, uses_anonymous_args = 0
 3896              		@ link register save eliminated.
 3897 0000 80B4     		push	{r7}
 3898              	.LCFI107:
 3899              		.cfi_def_cfa_offset 4
 3900              		.cfi_offset 7, -4
 3901 0002 83B0     		sub	sp, sp, #12
 3902              	.LCFI108:
 3903              		.cfi_def_cfa_offset 16
 3904 0004 00AF     		add	r7, sp, #0
 3905              	.LCFI109:
 3906              		.cfi_def_cfa_register 7
 3907 0006 7860     		str	r0, [r7, #4]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 3908              		.loc 1 1826 14
 3909 0008 7B68     		ldr	r3, [r7, #4]
 3910 000a 1B6C     		ldr	r3, [r3, #64]
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3911              		.loc 1 1827 1
 3912 000c 1846     		mov	r0, r3
 3913 000e 0C37     		adds	r7, r7, #12
 3914              	.LCFI110:
 3915              		.cfi_def_cfa_offset 4
 3916 0010 BD46     		mov	sp, r7
 3917              	.LCFI111:
 3918              		.cfi_def_cfa_register 13
 3919              		@ sp needed
 3920 0012 5DF8047B 		ldr	r7, [sp], #4
 3921              	.LCFI112:
 3922              		.cfi_restore 7
 3923              		.cfi_def_cfa_offset 0
 3924 0016 7047     		bx	lr
 3925              		.cfi_endproc
 3926              	.LFE150:
 3928              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3929              		.align	1
 3930              		.global	HAL_ADC_GetError
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	HAL_ADC_GetError:
 3937              	.LFB151:
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/ccRfYZzc.s 			page 102


1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3938              		.loc 1 1836 1
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 8
 3941              		@ frame_needed = 1, uses_anonymous_args = 0
 3942              		@ link register save eliminated.
 3943 0000 80B4     		push	{r7}
 3944              	.LCFI113:
 3945              		.cfi_def_cfa_offset 4
 3946              		.cfi_offset 7, -4
 3947 0002 83B0     		sub	sp, sp, #12
 3948              	.LCFI114:
 3949              		.cfi_def_cfa_offset 16
 3950 0004 00AF     		add	r7, sp, #0
 3951              	.LCFI115:
 3952              		.cfi_def_cfa_register 7
 3953 0006 7860     		str	r0, [r7, #4]
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 3954              		.loc 1 1837 14
 3955 0008 7B68     		ldr	r3, [r7, #4]
 3956 000a 5B6C     		ldr	r3, [r3, #68]
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3957              		.loc 1 1838 1
 3958 000c 1846     		mov	r0, r3
 3959 000e 0C37     		adds	r7, r7, #12
 3960              	.LCFI116:
 3961              		.cfi_def_cfa_offset 4
 3962 0010 BD46     		mov	sp, r7
 3963              	.LCFI117:
 3964              		.cfi_def_cfa_register 13
 3965              		@ sp needed
 3966 0012 5DF8047B 		ldr	r7, [sp], #4
 3967              	.LCFI118:
 3968              		.cfi_restore 7
 3969              		.cfi_def_cfa_offset 0
 3970 0016 7047     		bx	lr
 3971              		.cfi_endproc
 3972              	.LFE151:
 3974              		.section	.text.ADC_Init,"ax",%progbits
 3975              		.align	1
 3976              		.syntax unified
 3977              		.thumb
 3978              		.thumb_func
 3979              		.fpu fpv4-sp-d16
 3981              	ADC_Init:
 3982              	.LFB152:
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
ARM GAS  /tmp/ccRfYZzc.s 			page 103


1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3983              		.loc 1 1856 1
 3984              		.cfi_startproc
 3985              		@ args = 0, pretend = 0, frame = 16
 3986              		@ frame_needed = 1, uses_anonymous_args = 0
 3987 0000 80B5     		push	{r7, lr}
 3988              	.LCFI119:
 3989              		.cfi_def_cfa_offset 8
 3990              		.cfi_offset 7, -8
 3991              		.cfi_offset 14, -4
 3992 0002 84B0     		sub	sp, sp, #16
 3993              	.LCFI120:
 3994              		.cfi_def_cfa_offset 24
 3995 0004 00AF     		add	r7, sp, #0
 3996              	.LCFI121:
 3997              		.cfi_def_cfa_register 7
 3998 0006 7860     		str	r0, [r7, #4]
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 3999              		.loc 1 1863 17
 4000 0008 7F4B     		ldr	r3, .L197
 4001 000a FB60     		str	r3, [r7, #12]
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 4002              		.loc 1 1866 22
 4003 000c FB68     		ldr	r3, [r7, #12]
 4004 000e 5B68     		ldr	r3, [r3, #4]
 4005 0010 23F44032 		bic	r2, r3, #196608
 4006 0014 FB68     		ldr	r3, [r7, #12]
 4007 0016 5A60     		str	r2, [r3, #4]
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 4008              		.loc 1 1867 22
 4009 0018 FB68     		ldr	r3, [r7, #12]
 4010 001a 5A68     		ldr	r2, [r3, #4]
 4011              		.loc 1 1867 36
 4012 001c 7B68     		ldr	r3, [r7, #4]
 4013 001e 5B68     		ldr	r3, [r3, #4]
 4014              		.loc 1 1867 22
 4015 0020 1A43     		orrs	r2, r2, r3
 4016 0022 FB68     		ldr	r3, [r7, #12]
 4017 0024 5A60     		str	r2, [r3, #4]
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 4018              		.loc 1 1870 7
ARM GAS  /tmp/ccRfYZzc.s 			page 104


 4019 0026 7B68     		ldr	r3, [r7, #4]
 4020 0028 1B68     		ldr	r3, [r3]
 4021              		.loc 1 1870 23
 4022 002a 5A68     		ldr	r2, [r3, #4]
 4023              		.loc 1 1870 7
 4024 002c 7B68     		ldr	r3, [r7, #4]
 4025 002e 1B68     		ldr	r3, [r3]
 4026              		.loc 1 1870 23
 4027 0030 22F48072 		bic	r2, r2, #256
 4028 0034 5A60     		str	r2, [r3, #4]
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 4029              		.loc 1 1871 7
 4030 0036 7B68     		ldr	r3, [r7, #4]
 4031 0038 1B68     		ldr	r3, [r3]
 4032              		.loc 1 1871 23
 4033 003a 5968     		ldr	r1, [r3, #4]
 4034              		.loc 1 1871 27
 4035 003c 7B68     		ldr	r3, [r7, #4]
 4036 003e 1B69     		ldr	r3, [r3, #16]
 4037 0040 1A02     		lsls	r2, r3, #8
 4038              		.loc 1 1871 7
 4039 0042 7B68     		ldr	r3, [r7, #4]
 4040 0044 1B68     		ldr	r3, [r3]
 4041              		.loc 1 1871 23
 4042 0046 0A43     		orrs	r2, r2, r1
 4043 0048 5A60     		str	r2, [r3, #4]
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 4044              		.loc 1 1874 7
 4045 004a 7B68     		ldr	r3, [r7, #4]
 4046 004c 1B68     		ldr	r3, [r3]
 4047              		.loc 1 1874 23
 4048 004e 5A68     		ldr	r2, [r3, #4]
 4049              		.loc 1 1874 7
 4050 0050 7B68     		ldr	r3, [r7, #4]
 4051 0052 1B68     		ldr	r3, [r3]
 4052              		.loc 1 1874 23
 4053 0054 22F04072 		bic	r2, r2, #50331648
 4054 0058 5A60     		str	r2, [r3, #4]
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 4055              		.loc 1 1875 7
 4056 005a 7B68     		ldr	r3, [r7, #4]
 4057 005c 1B68     		ldr	r3, [r3]
 4058              		.loc 1 1875 23
 4059 005e 5968     		ldr	r1, [r3, #4]
 4060              		.loc 1 1875 37
 4061 0060 7B68     		ldr	r3, [r7, #4]
 4062 0062 9A68     		ldr	r2, [r3, #8]
 4063              		.loc 1 1875 7
 4064 0064 7B68     		ldr	r3, [r7, #4]
 4065 0066 1B68     		ldr	r3, [r3]
 4066              		.loc 1 1875 23
 4067 0068 0A43     		orrs	r2, r2, r1
 4068 006a 5A60     		str	r2, [r3, #4]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
ARM GAS  /tmp/ccRfYZzc.s 			page 105


1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 4069              		.loc 1 1878 7
 4070 006c 7B68     		ldr	r3, [r7, #4]
 4071 006e 1B68     		ldr	r3, [r3]
 4072              		.loc 1 1878 23
 4073 0070 9A68     		ldr	r2, [r3, #8]
 4074              		.loc 1 1878 7
 4075 0072 7B68     		ldr	r3, [r7, #4]
 4076 0074 1B68     		ldr	r3, [r3]
 4077              		.loc 1 1878 23
 4078 0076 22F40062 		bic	r2, r2, #2048
 4079 007a 9A60     		str	r2, [r3, #8]
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 4080              		.loc 1 1879 7
 4081 007c 7B68     		ldr	r3, [r7, #4]
 4082 007e 1B68     		ldr	r3, [r3]
 4083              		.loc 1 1879 23
 4084 0080 9968     		ldr	r1, [r3, #8]
 4085              		.loc 1 1879 36
 4086 0082 7B68     		ldr	r3, [r7, #4]
 4087 0084 DA68     		ldr	r2, [r3, #12]
 4088              		.loc 1 1879 7
 4089 0086 7B68     		ldr	r3, [r7, #4]
 4090 0088 1B68     		ldr	r3, [r3]
 4091              		.loc 1 1879 23
 4092 008a 0A43     		orrs	r2, r2, r1
 4093 008c 9A60     		str	r2, [r3, #8]
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 4094              		.loc 1 1886 16
 4095 008e 7B68     		ldr	r3, [r7, #4]
 4096 0090 9B6A     		ldr	r3, [r3, #40]
 4097              		.loc 1 1886 5
 4098 0092 5E4A     		ldr	r2, .L197+4
 4099 0094 9342     		cmp	r3, r2
 4100 0096 22D0     		beq	.L191
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 4101              		.loc 1 1889 9
 4102 0098 7B68     		ldr	r3, [r7, #4]
 4103 009a 1B68     		ldr	r3, [r3]
 4104              		.loc 1 1889 25
 4105 009c 9A68     		ldr	r2, [r3, #8]
 4106              		.loc 1 1889 9
 4107 009e 7B68     		ldr	r3, [r7, #4]
 4108 00a0 1B68     		ldr	r3, [r3]
 4109              		.loc 1 1889 25
 4110 00a2 22F07062 		bic	r2, r2, #251658240
 4111 00a6 9A60     		str	r2, [r3, #8]
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 4112              		.loc 1 1890 9
ARM GAS  /tmp/ccRfYZzc.s 			page 106


 4113 00a8 7B68     		ldr	r3, [r7, #4]
 4114 00aa 1B68     		ldr	r3, [r3]
 4115              		.loc 1 1890 25
 4116 00ac 9968     		ldr	r1, [r3, #8]
 4117              		.loc 1 1890 38
 4118 00ae 7B68     		ldr	r3, [r7, #4]
 4119 00b0 9A6A     		ldr	r2, [r3, #40]
 4120              		.loc 1 1890 9
 4121 00b2 7B68     		ldr	r3, [r7, #4]
 4122 00b4 1B68     		ldr	r3, [r3]
 4123              		.loc 1 1890 25
 4124 00b6 0A43     		orrs	r2, r2, r1
 4125 00b8 9A60     		str	r2, [r3, #8]
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 4126              		.loc 1 1893 9
 4127 00ba 7B68     		ldr	r3, [r7, #4]
 4128 00bc 1B68     		ldr	r3, [r3]
 4129              		.loc 1 1893 25
 4130 00be 9A68     		ldr	r2, [r3, #8]
 4131              		.loc 1 1893 9
 4132 00c0 7B68     		ldr	r3, [r7, #4]
 4133 00c2 1B68     		ldr	r3, [r3]
 4134              		.loc 1 1893 25
 4135 00c4 22F04052 		bic	r2, r2, #805306368
 4136 00c8 9A60     		str	r2, [r3, #8]
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 4137              		.loc 1 1894 9
 4138 00ca 7B68     		ldr	r3, [r7, #4]
 4139 00cc 1B68     		ldr	r3, [r3]
 4140              		.loc 1 1894 25
 4141 00ce 9968     		ldr	r1, [r3, #8]
 4142              		.loc 1 1894 38
 4143 00d0 7B68     		ldr	r3, [r7, #4]
 4144 00d2 DA6A     		ldr	r2, [r3, #44]
 4145              		.loc 1 1894 9
 4146 00d4 7B68     		ldr	r3, [r7, #4]
 4147 00d6 1B68     		ldr	r3, [r3]
 4148              		.loc 1 1894 25
 4149 00d8 0A43     		orrs	r2, r2, r1
 4150 00da 9A60     		str	r2, [r3, #8]
 4151 00dc 0FE0     		b	.L192
 4152              	.L191:
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 4153              		.loc 1 1899 9
 4154 00de 7B68     		ldr	r3, [r7, #4]
 4155 00e0 1B68     		ldr	r3, [r3]
 4156              		.loc 1 1899 25
 4157 00e2 9A68     		ldr	r2, [r3, #8]
 4158              		.loc 1 1899 9
 4159 00e4 7B68     		ldr	r3, [r7, #4]
 4160 00e6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRfYZzc.s 			page 107


 4161              		.loc 1 1899 25
 4162 00e8 22F07062 		bic	r2, r2, #251658240
 4163 00ec 9A60     		str	r2, [r3, #8]
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 4164              		.loc 1 1900 9
 4165 00ee 7B68     		ldr	r3, [r7, #4]
 4166 00f0 1B68     		ldr	r3, [r3]
 4167              		.loc 1 1900 25
 4168 00f2 9A68     		ldr	r2, [r3, #8]
 4169              		.loc 1 1900 9
 4170 00f4 7B68     		ldr	r3, [r7, #4]
 4171 00f6 1B68     		ldr	r3, [r3]
 4172              		.loc 1 1900 25
 4173 00f8 22F04052 		bic	r2, r2, #805306368
 4174 00fc 9A60     		str	r2, [r3, #8]
 4175              	.L192:
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 4176              		.loc 1 1904 7
 4177 00fe 7B68     		ldr	r3, [r7, #4]
 4178 0100 1B68     		ldr	r3, [r3]
 4179              		.loc 1 1904 23
 4180 0102 9A68     		ldr	r2, [r3, #8]
 4181              		.loc 1 1904 7
 4182 0104 7B68     		ldr	r3, [r7, #4]
 4183 0106 1B68     		ldr	r3, [r3]
 4184              		.loc 1 1904 23
 4185 0108 22F00202 		bic	r2, r2, #2
 4186 010c 9A60     		str	r2, [r3, #8]
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 4187              		.loc 1 1905 7
 4188 010e 7B68     		ldr	r3, [r7, #4]
 4189 0110 1B68     		ldr	r3, [r3]
 4190              		.loc 1 1905 23
 4191 0112 9968     		ldr	r1, [r3, #8]
 4192              		.loc 1 1905 26
 4193 0114 7B68     		ldr	r3, [r7, #4]
 4194 0116 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 4195 0118 5A00     		lsls	r2, r3, #1
 4196              		.loc 1 1905 7
 4197 011a 7B68     		ldr	r3, [r7, #4]
 4198 011c 1B68     		ldr	r3, [r3]
 4199              		.loc 1 1905 23
 4200 011e 0A43     		orrs	r2, r2, r1
 4201 0120 9A60     		str	r2, [r3, #8]
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 4202              		.loc 1 1907 16
 4203 0122 7B68     		ldr	r3, [r7, #4]
 4204 0124 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4205              		.loc 1 1907 5
 4206 0128 002B     		cmp	r3, #0
 4207 012a 28D0     		beq	.L193
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
ARM GAS  /tmp/ccRfYZzc.s 			page 108


 4208              		.loc 1 1909 5
 4209 012c 7B68     		ldr	r3, [r7, #4]
 4210 012e 5B6A     		ldr	r3, [r3, #36]
 4211 0130 002B     		cmp	r3, #0
 4212 0132 03D0     		beq	.L194
 4213              		.loc 1 1909 5 is_stmt 0 discriminator 2
 4214 0134 7B68     		ldr	r3, [r7, #4]
 4215 0136 5B6A     		ldr	r3, [r3, #36]
 4216 0138 082B     		cmp	r3, #8
 4217 013a 04D9     		bls	.L195
 4218              	.L194:
 4219              		.loc 1 1909 5 discriminator 3
 4220 013c 40F27571 		movw	r1, #1909
 4221 0140 3348     		ldr	r0, .L197+8
 4222 0142 FFF7FEFF 		bl	assert_failed
 4223              	.L195:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 4224              		.loc 1 1912 9 is_stmt 1
 4225 0146 7B68     		ldr	r3, [r7, #4]
 4226 0148 1B68     		ldr	r3, [r3]
 4227              		.loc 1 1912 25
 4228 014a 5A68     		ldr	r2, [r3, #4]
 4229              		.loc 1 1912 9
 4230 014c 7B68     		ldr	r3, [r7, #4]
 4231 014e 1B68     		ldr	r3, [r3]
 4232              		.loc 1 1912 25
 4233 0150 42F40062 		orr	r2, r2, #2048
 4234 0154 5A60     		str	r2, [r3, #4]
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 4235              		.loc 1 1915 9
 4236 0156 7B68     		ldr	r3, [r7, #4]
 4237 0158 1B68     		ldr	r3, [r3]
 4238              		.loc 1 1915 25
 4239 015a 5A68     		ldr	r2, [r3, #4]
 4240              		.loc 1 1915 9
 4241 015c 7B68     		ldr	r3, [r7, #4]
 4242 015e 1B68     		ldr	r3, [r3]
 4243              		.loc 1 1915 25
 4244 0160 22F46042 		bic	r2, r2, #57344
 4245 0164 5A60     		str	r2, [r3, #4]
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 4246              		.loc 1 1916 9
 4247 0166 7B68     		ldr	r3, [r7, #4]
 4248 0168 1B68     		ldr	r3, [r3]
 4249              		.loc 1 1916 25
 4250 016a 5968     		ldr	r1, [r3, #4]
 4251              		.loc 1 1916 29
 4252 016c 7B68     		ldr	r3, [r7, #4]
 4253 016e 5B6A     		ldr	r3, [r3, #36]
 4254 0170 013B     		subs	r3, r3, #1
 4255 0172 5A03     		lsls	r2, r3, #13
 4256              		.loc 1 1916 9
 4257 0174 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 109


 4258 0176 1B68     		ldr	r3, [r3]
 4259              		.loc 1 1916 25
 4260 0178 0A43     		orrs	r2, r2, r1
 4261 017a 5A60     		str	r2, [r3, #4]
 4262 017c 07E0     		b	.L196
 4263              	.L193:
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 4264              		.loc 1 1921 9
 4265 017e 7B68     		ldr	r3, [r7, #4]
 4266 0180 1B68     		ldr	r3, [r3]
 4267              		.loc 1 1921 25
 4268 0182 5A68     		ldr	r2, [r3, #4]
 4269              		.loc 1 1921 9
 4270 0184 7B68     		ldr	r3, [r7, #4]
 4271 0186 1B68     		ldr	r3, [r3]
 4272              		.loc 1 1921 25
 4273 0188 22F40062 		bic	r2, r2, #2048
 4274 018c 5A60     		str	r2, [r3, #4]
 4275              	.L196:
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 4276              		.loc 1 1925 7
 4277 018e 7B68     		ldr	r3, [r7, #4]
 4278 0190 1B68     		ldr	r3, [r3]
 4279              		.loc 1 1925 24
 4280 0192 DA6A     		ldr	r2, [r3, #44]
 4281              		.loc 1 1925 7
 4282 0194 7B68     		ldr	r3, [r7, #4]
 4283 0196 1B68     		ldr	r3, [r3]
 4284              		.loc 1 1925 24
 4285 0198 22F47002 		bic	r2, r2, #15728640
 4286 019c DA62     		str	r2, [r3, #44]
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 4287              		.loc 1 1926 7
 4288 019e 7B68     		ldr	r3, [r7, #4]
 4289 01a0 1B68     		ldr	r3, [r3]
 4290              		.loc 1 1926 24
 4291 01a2 D96A     		ldr	r1, [r3, #44]
 4292              		.loc 1 1926 28
 4293 01a4 7B68     		ldr	r3, [r7, #4]
 4294 01a6 DB69     		ldr	r3, [r3, #28]
 4295 01a8 013B     		subs	r3, r3, #1
 4296 01aa 1A05     		lsls	r2, r3, #20
 4297              		.loc 1 1926 7
 4298 01ac 7B68     		ldr	r3, [r7, #4]
 4299 01ae 1B68     		ldr	r3, [r3]
 4300              		.loc 1 1926 24
 4301 01b0 0A43     		orrs	r2, r2, r1
 4302 01b2 DA62     		str	r2, [r3, #44]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
ARM GAS  /tmp/ccRfYZzc.s 			page 110


1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 4303              		.loc 1 1929 7
 4304 01b4 7B68     		ldr	r3, [r7, #4]
 4305 01b6 1B68     		ldr	r3, [r3]
 4306              		.loc 1 1929 23
 4307 01b8 9A68     		ldr	r2, [r3, #8]
 4308              		.loc 1 1929 7
 4309 01ba 7B68     		ldr	r3, [r7, #4]
 4310 01bc 1B68     		ldr	r3, [r3]
 4311              		.loc 1 1929 23
 4312 01be 22F40072 		bic	r2, r2, #512
 4313 01c2 9A60     		str	r2, [r3, #8]
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 4314              		.loc 1 1930 7
 4315 01c4 7B68     		ldr	r3, [r7, #4]
 4316 01c6 1B68     		ldr	r3, [r3]
 4317              		.loc 1 1930 23
 4318 01c8 9968     		ldr	r1, [r3, #8]
 4319              		.loc 1 1930 26
 4320 01ca 7B68     		ldr	r3, [r7, #4]
 4321 01cc 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 4322 01d0 5A02     		lsls	r2, r3, #9
 4323              		.loc 1 1930 7
 4324 01d2 7B68     		ldr	r3, [r7, #4]
 4325 01d4 1B68     		ldr	r3, [r3]
 4326              		.loc 1 1930 23
 4327 01d6 0A43     		orrs	r2, r2, r1
 4328 01d8 9A60     		str	r2, [r3, #8]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 4329              		.loc 1 1933 7
 4330 01da 7B68     		ldr	r3, [r7, #4]
 4331 01dc 1B68     		ldr	r3, [r3]
 4332              		.loc 1 1933 23
 4333 01de 9A68     		ldr	r2, [r3, #8]
 4334              		.loc 1 1933 7
 4335 01e0 7B68     		ldr	r3, [r7, #4]
 4336 01e2 1B68     		ldr	r3, [r3]
 4337              		.loc 1 1933 23
 4338 01e4 22F48062 		bic	r2, r2, #1024
 4339 01e8 9A60     		str	r2, [r3, #8]
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 4340              		.loc 1 1934 7
 4341 01ea 7B68     		ldr	r3, [r7, #4]
 4342 01ec 1B68     		ldr	r3, [r3]
 4343              		.loc 1 1934 23
 4344 01ee 9968     		ldr	r1, [r3, #8]
 4345              		.loc 1 1934 26
 4346 01f0 7B68     		ldr	r3, [r7, #4]
 4347 01f2 5B69     		ldr	r3, [r3, #20]
 4348 01f4 9A02     		lsls	r2, r3, #10
 4349              		.loc 1 1934 7
 4350 01f6 7B68     		ldr	r3, [r7, #4]
 4351 01f8 1B68     		ldr	r3, [r3]
 4352              		.loc 1 1934 23
 4353 01fa 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccRfYZzc.s 			page 111


 4354 01fc 9A60     		str	r2, [r3, #8]
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 4355              		.loc 1 1935 1
 4356 01fe 00BF     		nop
 4357 0200 1037     		adds	r7, r7, #16
 4358              	.LCFI122:
 4359              		.cfi_def_cfa_offset 8
 4360 0202 BD46     		mov	sp, r7
 4361              	.LCFI123:
 4362              		.cfi_def_cfa_register 13
 4363              		@ sp needed
 4364 0204 80BD     		pop	{r7, pc}
 4365              	.L198:
 4366 0206 00BF     		.align	2
 4367              	.L197:
 4368 0208 00230140 		.word	1073816320
 4369 020c 0100000F 		.word	251658241
 4370 0210 00000000 		.word	.LC0
 4371              		.cfi_endproc
 4372              	.LFE152:
 4374              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 4375              		.align	1
 4376              		.syntax unified
 4377              		.thumb
 4378              		.thumb_func
 4379              		.fpu fpv4-sp-d16
 4381              	ADC_DMAConvCplt:
 4382              	.LFB153:
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 4383              		.loc 1 1944 1
 4384              		.cfi_startproc
 4385              		@ args = 0, pretend = 0, frame = 16
 4386              		@ frame_needed = 1, uses_anonymous_args = 0
 4387 0000 80B5     		push	{r7, lr}
 4388              	.LCFI124:
 4389              		.cfi_def_cfa_offset 8
 4390              		.cfi_offset 7, -8
 4391              		.cfi_offset 14, -4
 4392 0002 84B0     		sub	sp, sp, #16
 4393              	.LCFI125:
 4394              		.cfi_def_cfa_offset 24
 4395 0004 00AF     		add	r7, sp, #0
 4396              	.LCFI126:
 4397              		.cfi_def_cfa_register 7
 4398 0006 7860     		str	r0, [r7, #4]
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4399              		.loc 1 1946 22
 4400 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRfYZzc.s 			page 112


 4401 000a 9B6B     		ldr	r3, [r3, #56]
 4402 000c FB60     		str	r3, [r7, #12]
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 4403              		.loc 1 1949 7
 4404 000e FB68     		ldr	r3, [r7, #12]
 4405 0010 1B6C     		ldr	r3, [r3, #64]
 4406 0012 03F05003 		and	r3, r3, #80
 4407              		.loc 1 1949 6
 4408 0016 002B     		cmp	r3, #0
 4409 0018 3CD1     		bne	.L200
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 4410              		.loc 1 1952 5
 4411 001a FB68     		ldr	r3, [r7, #12]
 4412 001c 1B6C     		ldr	r3, [r3, #64]
 4413 001e 43F40072 		orr	r2, r3, #512
 4414 0022 FB68     		ldr	r3, [r7, #12]
 4415 0024 1A64     		str	r2, [r3, #64]
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 4416              		.loc 1 1960 8
 4417 0026 FB68     		ldr	r3, [r7, #12]
 4418 0028 1B68     		ldr	r3, [r3]
 4419 002a 9B68     		ldr	r3, [r3, #8]
 4420 002c 03F04053 		and	r3, r3, #805306368
 4421              		.loc 1 1960 7
 4422 0030 002B     		cmp	r3, #0
 4423 0032 2BD1     		bne	.L201
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 4424              		.loc 1 1961 19 discriminator 1
 4425 0034 FB68     		ldr	r3, [r7, #12]
 4426 0036 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 4427              		.loc 1 1960 62 discriminator 1
 4428 0038 002B     		cmp	r3, #0
 4429 003a 27D1     		bne	.L201
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 4430              		.loc 1 1962 9
 4431 003c FB68     		ldr	r3, [r7, #12]
 4432 003e 1B68     		ldr	r3, [r3]
 4433 0040 DB6A     		ldr	r3, [r3, #44]
 4434 0042 03F47003 		and	r3, r3, #15728640
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 4435              		.loc 1 1961 62
 4436 0046 002B     		cmp	r3, #0
 4437 0048 06D0     		beq	.L202
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 4438              		.loc 1 1963 9
ARM GAS  /tmp/ccRfYZzc.s 			page 113


 4439 004a FB68     		ldr	r3, [r7, #12]
 4440 004c 1B68     		ldr	r3, [r3]
 4441 004e 9B68     		ldr	r3, [r3, #8]
 4442 0050 03F48063 		and	r3, r3, #1024
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 4443              		.loc 1 1962 58
 4444 0054 002B     		cmp	r3, #0
 4445 0056 19D1     		bne	.L201
 4446              	.L202:
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 4447              		.loc 1 1969 7
 4448 0058 FB68     		ldr	r3, [r7, #12]
 4449 005a 1B68     		ldr	r3, [r3]
 4450 005c 5A68     		ldr	r2, [r3, #4]
 4451 005e FB68     		ldr	r3, [r7, #12]
 4452 0060 1B68     		ldr	r3, [r3]
 4453 0062 22F02002 		bic	r2, r2, #32
 4454 0066 5A60     		str	r2, [r3, #4]
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 4455              		.loc 1 1972 7
 4456 0068 FB68     		ldr	r3, [r7, #12]
 4457 006a 1B6C     		ldr	r3, [r3, #64]
 4458 006c 23F48072 		bic	r2, r3, #256
 4459 0070 FB68     		ldr	r3, [r7, #12]
 4460 0072 1A64     		str	r2, [r3, #64]
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 4461              		.loc 1 1974 11
 4462 0074 FB68     		ldr	r3, [r7, #12]
 4463 0076 1B6C     		ldr	r3, [r3, #64]
 4464 0078 03F48053 		and	r3, r3, #4096
 4465              		.loc 1 1974 10
 4466 007c 002B     		cmp	r3, #0
 4467 007e 05D1     		bne	.L201
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 4468              		.loc 1 1976 9
 4469 0080 FB68     		ldr	r3, [r7, #12]
 4470 0082 1B6C     		ldr	r3, [r3, #64]
 4471 0084 43F00102 		orr	r2, r3, #1
 4472 0088 FB68     		ldr	r3, [r7, #12]
 4473 008a 1A64     		str	r2, [r3, #64]
 4474              	.L201:
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
ARM GAS  /tmp/ccRfYZzc.s 			page 114


1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 4475              		.loc 1 1984 5
 4476 008c F868     		ldr	r0, [r7, #12]
 4477 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	else
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	{
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call DMA error callback */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 4478              		.loc 1 2004 1
 4479 0092 0EE0     		b	.L205
 4480              	.L200:
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 4481              		.loc 1 1989 14
 4482 0094 FB68     		ldr	r3, [r7, #12]
 4483 0096 1B6C     		ldr	r3, [r3, #64]
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 4484              		.loc 1 1989 22
 4485 0098 03F01003 		and	r3, r3, #16
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 4486              		.loc 1 1989 8
 4487 009c 002B     		cmp	r3, #0
 4488 009e 03D0     		beq	.L204
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 4489              		.loc 1 1995 7
 4490 00a0 F868     		ldr	r0, [r7, #12]
 4491 00a2 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 4492              		.loc 1 2004 1
 4493 00a6 04E0     		b	.L205
 4494              	.L204:
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 4495              		.loc 1 2001 11
 4496 00a8 FB68     		ldr	r3, [r7, #12]
 4497 00aa 9B6B     		ldr	r3, [r3, #56]
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 4498              		.loc 1 2001 23
 4499 00ac DB6C     		ldr	r3, [r3, #76]
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 4500              		.loc 1 2001 7
 4501 00ae 7868     		ldr	r0, [r7, #4]
 4502 00b0 9847     		blx	r3
 4503              	.LVL0:
ARM GAS  /tmp/ccRfYZzc.s 			page 115


 4504              	.L205:
 4505              		.loc 1 2004 1
 4506 00b2 00BF     		nop
 4507 00b4 1037     		adds	r7, r7, #16
 4508              	.LCFI127:
 4509              		.cfi_def_cfa_offset 8
 4510 00b6 BD46     		mov	sp, r7
 4511              	.LCFI128:
 4512              		.cfi_def_cfa_register 13
 4513              		@ sp needed
 4514 00b8 80BD     		pop	{r7, pc}
 4515              		.cfi_endproc
 4516              	.LFE153:
 4518              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 4519              		.align	1
 4520              		.syntax unified
 4521              		.thumb
 4522              		.thumb_func
 4523              		.fpu fpv4-sp-d16
 4525              	ADC_DMAHalfConvCplt:
 4526              	.LFB154:
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 4527              		.loc 1 2013 1
 4528              		.cfi_startproc
 4529              		@ args = 0, pretend = 0, frame = 16
 4530              		@ frame_needed = 1, uses_anonymous_args = 0
 4531 0000 80B5     		push	{r7, lr}
 4532              	.LCFI129:
 4533              		.cfi_def_cfa_offset 8
 4534              		.cfi_offset 7, -8
 4535              		.cfi_offset 14, -4
 4536 0002 84B0     		sub	sp, sp, #16
 4537              	.LCFI130:
 4538              		.cfi_def_cfa_offset 24
 4539 0004 00AF     		add	r7, sp, #0
 4540              	.LCFI131:
 4541              		.cfi_def_cfa_register 7
 4542 0006 7860     		str	r0, [r7, #4]
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4543              		.loc 1 2014 22
 4544 0008 7B68     		ldr	r3, [r7, #4]
 4545 000a 9B6B     		ldr	r3, [r3, #56]
 4546 000c FB60     		str	r3, [r7, #12]
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Half conversion callback */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 4547              		.loc 1 2019 3
ARM GAS  /tmp/ccRfYZzc.s 			page 116


 4548 000e F868     		ldr	r0, [r7, #12]
 4549 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 4550              		.loc 1 2021 1
 4551 0014 00BF     		nop
 4552 0016 1037     		adds	r7, r7, #16
 4553              	.LCFI132:
 4554              		.cfi_def_cfa_offset 8
 4555 0018 BD46     		mov	sp, r7
 4556              	.LCFI133:
 4557              		.cfi_def_cfa_register 13
 4558              		@ sp needed
 4559 001a 80BD     		pop	{r7, pc}
 4560              		.cfi_endproc
 4561              	.LFE154:
 4563              		.section	.text.ADC_DMAError,"ax",%progbits
 4564              		.align	1
 4565              		.syntax unified
 4566              		.thumb
 4567              		.thumb_func
 4568              		.fpu fpv4-sp-d16
 4570              	ADC_DMAError:
 4571              	.LFB155:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 4572              		.loc 1 2030 1
 4573              		.cfi_startproc
 4574              		@ args = 0, pretend = 0, frame = 16
 4575              		@ frame_needed = 1, uses_anonymous_args = 0
 4576 0000 80B5     		push	{r7, lr}
 4577              	.LCFI134:
 4578              		.cfi_def_cfa_offset 8
 4579              		.cfi_offset 7, -8
 4580              		.cfi_offset 14, -4
 4581 0002 84B0     		sub	sp, sp, #16
 4582              	.LCFI135:
 4583              		.cfi_def_cfa_offset 24
 4584 0004 00AF     		add	r7, sp, #0
 4585              	.LCFI136:
 4586              		.cfi_def_cfa_register 7
 4587 0006 7860     		str	r0, [r7, #4]
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4588              		.loc 1 2031 22
 4589 0008 7B68     		ldr	r3, [r7, #4]
 4590 000a 9B6B     		ldr	r3, [r3, #56]
 4591 000c FB60     		str	r3, [r7, #12]
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 4592              		.loc 1 2032 14
 4593 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRfYZzc.s 			page 117


 4594 0010 4022     		movs	r2, #64
 4595 0012 1A64     		str	r2, [r3, #64]
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 4596              		.loc 1 2034 19
 4597 0014 FB68     		ldr	r3, [r7, #12]
 4598 0016 5B6C     		ldr	r3, [r3, #68]
 4599 0018 43F00402 		orr	r2, r3, #4
 4600 001c FB68     		ldr	r3, [r7, #12]
 4601 001e 5A64     		str	r2, [r3, #68]
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Error callback */
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 4602              		.loc 1 2039 3
 4603 0020 F868     		ldr	r0, [r7, #12]
 4604 0022 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 4605              		.loc 1 2041 1
 4606 0026 00BF     		nop
 4607 0028 1037     		adds	r7, r7, #16
 4608              	.LCFI137:
 4609              		.cfi_def_cfa_offset 8
 4610 002a BD46     		mov	sp, r7
 4611              	.LCFI138:
 4612              		.cfi_def_cfa_register 13
 4613              		@ sp needed
 4614 002c 80BD     		pop	{r7, pc}
 4615              		.cfi_endproc
 4616              	.LFE155:
 4618              		.text
 4619              	.Letext0:
 4620              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4621              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4622              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4623              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4624              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 4625              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4626              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4627              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4628              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 4629              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccRfYZzc.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_adc.c
     /tmp/ccRfYZzc.s:18     .rodata:0000000000000000 $d
     /tmp/ccRfYZzc.s:23     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccRfYZzc.s:31     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccRfYZzc.s:578    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccRfYZzc.s:3981   .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccRfYZzc.s:419    .text.HAL_ADC_Init:00000000000002ac $d
     /tmp/ccRfYZzc.s:426    .text.HAL_ADC_Init:00000000000002c0 $t
     /tmp/ccRfYZzc.s:450    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccRfYZzc.s:457    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccRfYZzc.s:621    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccRfYZzc.s:563    .text.HAL_ADC_DeInit:000000000000008c $d
     /tmp/ccRfYZzc.s:571    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccRfYZzc.s:614    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccRfYZzc.s:657    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccRfYZzc.s:664    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccRfYZzc.s:960    .text.HAL_ADC_Start:00000000000001b8 $d
     /tmp/ccRfYZzc.s:971    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccRfYZzc.s:978    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccRfYZzc.s:1077   .text.HAL_ADC_Stop:000000000000008c $d
     /tmp/ccRfYZzc.s:1085   .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccRfYZzc.s:1092   .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccRfYZzc.s:1270   .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccRfYZzc.s:1277   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccRfYZzc.s:1436   .text.HAL_ADC_PollForEvent:00000000000000e8 $d
     /tmp/ccRfYZzc.s:1444   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccRfYZzc.s:1451   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccRfYZzc.s:1756   .text.HAL_ADC_Start_IT:00000000000001d0 $d
     /tmp/ccRfYZzc.s:1767   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccRfYZzc.s:1774   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccRfYZzc.s:1882   .text.HAL_ADC_Stop_IT:00000000000000a0 $d
     /tmp/ccRfYZzc.s:1890   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccRfYZzc.s:1897   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccRfYZzc.s:2910   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccRfYZzc.s:2160   .text.HAL_ADC_IRQHandler:00000000000001a8 $d
     /tmp/ccRfYZzc.s:2164   .text.HAL_ADC_IRQHandler:00000000000001ac $t
     /tmp/ccRfYZzc.s:2996   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccRfYZzc.s:3039   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccRfYZzc.s:2343   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccRfYZzc.s:2350   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccRfYZzc.s:2698   .text.HAL_ADC_Start_DMA:000000000000020c $d
     /tmp/ccRfYZzc.s:4381   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccRfYZzc.s:4525   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccRfYZzc.s:4570   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccRfYZzc.s:2712   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccRfYZzc.s:2719   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccRfYZzc.s:2847   .text.HAL_ADC_Stop_DMA:00000000000000bc $d
     /tmp/ccRfYZzc.s:2855   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccRfYZzc.s:2862   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccRfYZzc.s:2903   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccRfYZzc.s:2946   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccRfYZzc.s:2953   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccRfYZzc.s:2989   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccRfYZzc.s:3032   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccRfYZzc.s:3075   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccRfYZzc.s:3082   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
ARM GAS  /tmp/ccRfYZzc.s 			page 119


     /tmp/ccRfYZzc.s:3514   .text.HAL_ADC_ConfigChannel:0000000000000288 $d
     /tmp/ccRfYZzc.s:3521   .text.HAL_ADC_ConfigChannel:000000000000029c $t
     /tmp/ccRfYZzc.s:3552   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccRfYZzc.s:3559   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccRfYZzc.s:3875   .text.HAL_ADC_AnalogWDGConfig:00000000000001e0 $d
     /tmp/ccRfYZzc.s:3883   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccRfYZzc.s:3890   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccRfYZzc.s:3929   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccRfYZzc.s:3936   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccRfYZzc.s:3975   .text.ADC_Init:0000000000000000 $t
     /tmp/ccRfYZzc.s:4368   .text.ADC_Init:0000000000000208 $d
     /tmp/ccRfYZzc.s:4375   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccRfYZzc.s:4519   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccRfYZzc.s:4564   .text.ADC_DMAError:0000000000000000 $t

UNDEFINED SYMBOLS
assert_failed
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
