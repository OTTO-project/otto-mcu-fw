ARM GAS  /tmp/cc05abvm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWR_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_PWR_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * All rights reserved.</center></h2>
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * the "License"; You may not use this file except in compliance with the
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * License. You may obtain a copy of the License at:
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
ARM GAS  /tmp/cc05abvm.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  /tmp/cc05abvm.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  29              		.loc 1 93 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  41              		.loc 1 94 3
  42 0004 084B     		ldr	r3, .L2
  43 0006 1B6A     		ldr	r3, [r3, #32]
  44 0008 074A     		ldr	r2, .L2
  45 000a 43F08053 		orr	r3, r3, #268435456
  46 000e 1362     		str	r3, [r2, #32]
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  47              		.loc 1 95 3
  48 0010 054B     		ldr	r3, .L2
  49 0012 1B6A     		ldr	r3, [r3, #32]
  50 0014 044A     		ldr	r2, .L2
  51 0016 23F08053 		bic	r3, r3, #268435456
  52 001a 1362     		str	r3, [r2, #32]
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  53              		.loc 1 96 1
  54 001c 00BF     		nop
  55 001e BD46     		mov	sp, r7
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 0020 5DF8047B 		ldr	r7, [sp], #4
  60              	.LCFI3:
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 0024 7047     		bx	lr
  64              	.L3:
  65 0026 00BF     		.align	2
  66              	.L2:
  67 0028 00380240 		.word	1073887232
  68              		.cfi_endproc
  69              	.LFE130:
  71              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  72              		.align	1
  73              		.global	HAL_PWR_EnableBkUpAccess
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc05abvm.s 			page 4


  79              	HAL_PWR_EnableBkUpAccess:
  80              	.LFB131:
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  81              		.loc 1 106 1
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0000 80B4     		push	{r7}
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 7, -4
  90 0002 00AF     		add	r7, sp, #0
  91              	.LCFI5:
  92              		.cfi_def_cfa_register 7
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  93              		.loc 1 107 3
  94 0004 034B     		ldr	r3, .L5
  95              		.loc 1 107 32
  96 0006 0122     		movs	r2, #1
  97 0008 1A60     		str	r2, [r3]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  98              		.loc 1 108 1
  99 000a 00BF     		nop
 100 000c BD46     		mov	sp, r7
 101              	.LCFI6:
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 000e 5DF8047B 		ldr	r7, [sp], #4
 105              	.LCFI7:
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 0012 7047     		bx	lr
 109              	.L6:
 110              		.align	2
 111              	.L5:
 112 0014 20000E42 		.word	1108213792
 113              		.cfi_endproc
 114              	.LFE131:
 116              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
 117              		.align	1
 118              		.global	HAL_PWR_DisableBkUpAccess
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	HAL_PWR_DisableBkUpAccess:
 125              	.LFB132:
ARM GAS  /tmp/cc05abvm.s 			page 5


 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 126              		.loc 1 118 1
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131 0000 80B4     		push	{r7}
 132              	.LCFI8:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 7, -4
 135 0002 00AF     		add	r7, sp, #0
 136              	.LCFI9:
 137              		.cfi_def_cfa_register 7
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
 138              		.loc 1 119 3
 139 0004 034B     		ldr	r3, .L8
 140              		.loc 1 119 32
 141 0006 0022     		movs	r2, #0
 142 0008 1A60     		str	r2, [r3]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 143              		.loc 1 120 1
 144 000a 00BF     		nop
 145 000c BD46     		mov	sp, r7
 146              	.LCFI10:
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 000e 5DF8047B 		ldr	r7, [sp], #4
 150              	.LCFI11:
 151              		.cfi_restore 7
 152              		.cfi_def_cfa_offset 0
 153 0012 7047     		bx	lr
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 0014 20000E42 		.word	1108213792
 158              		.cfi_endproc
 159              	.LFE132:
 161              		.section	.rodata
 162              		.align	2
 163              	.LC0:
 164 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr."
 164      6572732F 
 164      53544D33 
 164      32463478 
 164      785F4841 
 165 0033 6300     		.ascii	"c\000"
 166              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 167              		.align	1
ARM GAS  /tmp/cc05abvm.s 			page 6


 168              		.global	HAL_PWR_ConfigPVD
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	HAL_PWR_ConfigPVD:
 175              	.LFB133:
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLE
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
ARM GAS  /tmp/cc05abvm.s 			page 7


 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON) 
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Main regulator ON.
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Low Power regulator ON.
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
ARM GAS  /tmp/cc05abvm.s 			page 8


 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 176              		.loc 1 253 1
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 8
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              	.LCFI12:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              	.LCFI13:
 187              		.cfi_def_cfa_offset 16
 188 0004 00AF     		add	r7, sp, #0
 189              	.LCFI14:
 190              		.cfi_def_cfa_register 7
 191 0006 7860     		str	r0, [r7, #4]
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 192              		.loc 1 255 3
 193 0008 7B68     		ldr	r3, [r7, #4]
 194 000a 1B68     		ldr	r3, [r3]
 195 000c 002B     		cmp	r3, #0
 196 000e 1FD0     		beq	.L11
 197              		.loc 1 255 3 is_stmt 0 discriminator 1
 198 0010 7B68     		ldr	r3, [r7, #4]
 199 0012 1B68     		ldr	r3, [r3]
 200 0014 202B     		cmp	r3, #32
 201 0016 1BD0     		beq	.L11
 202              		.loc 1 255 3 discriminator 2
 203 0018 7B68     		ldr	r3, [r7, #4]
 204 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc05abvm.s 			page 9


 205 001c 402B     		cmp	r3, #64
 206 001e 17D0     		beq	.L11
 207              		.loc 1 255 3 discriminator 3
 208 0020 7B68     		ldr	r3, [r7, #4]
 209 0022 1B68     		ldr	r3, [r3]
 210 0024 602B     		cmp	r3, #96
 211 0026 13D0     		beq	.L11
 212              		.loc 1 255 3 discriminator 4
 213 0028 7B68     		ldr	r3, [r7, #4]
 214 002a 1B68     		ldr	r3, [r3]
 215 002c 802B     		cmp	r3, #128
 216 002e 0FD0     		beq	.L11
 217              		.loc 1 255 3 discriminator 5
 218 0030 7B68     		ldr	r3, [r7, #4]
 219 0032 1B68     		ldr	r3, [r3]
 220 0034 A02B     		cmp	r3, #160
 221 0036 0BD0     		beq	.L11
 222              		.loc 1 255 3 discriminator 6
 223 0038 7B68     		ldr	r3, [r7, #4]
 224 003a 1B68     		ldr	r3, [r3]
 225 003c C02B     		cmp	r3, #192
 226 003e 07D0     		beq	.L11
 227              		.loc 1 255 3 discriminator 7
 228 0040 7B68     		ldr	r3, [r7, #4]
 229 0042 1B68     		ldr	r3, [r3]
 230 0044 E02B     		cmp	r3, #224
 231 0046 03D0     		beq	.L11
 232              		.loc 1 255 3 discriminator 8
 233 0048 FF21     		movs	r1, #255
 234 004a 3F48     		ldr	r0, .L18
 235 004c FFF7FEFF 		bl	assert_failed
 236              	.L11:
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 237              		.loc 1 256 3 is_stmt 1
 238 0050 7B68     		ldr	r3, [r7, #4]
 239 0052 5B68     		ldr	r3, [r3, #4]
 240 0054 B3F1011F 		cmp	r3, #65537
 241 0058 21D0     		beq	.L12
 242              		.loc 1 256 3 is_stmt 0 discriminator 1
 243 005a 7B68     		ldr	r3, [r7, #4]
 244 005c 5B68     		ldr	r3, [r3, #4]
 245 005e 3B4A     		ldr	r2, .L18+4
 246 0060 9342     		cmp	r3, r2
 247 0062 1CD0     		beq	.L12
 248              		.loc 1 256 3 discriminator 2
 249 0064 7B68     		ldr	r3, [r7, #4]
 250 0066 5B68     		ldr	r3, [r3, #4]
 251 0068 394A     		ldr	r2, .L18+8
 252 006a 9342     		cmp	r3, r2
 253 006c 17D0     		beq	.L12
 254              		.loc 1 256 3 discriminator 3
 255 006e 7B68     		ldr	r3, [r7, #4]
 256 0070 5B68     		ldr	r3, [r3, #4]
 257 0072 384A     		ldr	r2, .L18+12
 258 0074 9342     		cmp	r3, r2
 259 0076 12D0     		beq	.L12
 260              		.loc 1 256 3 discriminator 4
ARM GAS  /tmp/cc05abvm.s 			page 10


 261 0078 7B68     		ldr	r3, [r7, #4]
 262 007a 5B68     		ldr	r3, [r3, #4]
 263 007c B3F1021F 		cmp	r3, #131074
 264 0080 0DD0     		beq	.L12
 265              		.loc 1 256 3 discriminator 5
 266 0082 7B68     		ldr	r3, [r7, #4]
 267 0084 5B68     		ldr	r3, [r3, #4]
 268 0086 344A     		ldr	r2, .L18+16
 269 0088 9342     		cmp	r3, r2
 270 008a 08D0     		beq	.L12
 271              		.loc 1 256 3 discriminator 6
 272 008c 7B68     		ldr	r3, [r7, #4]
 273 008e 5B68     		ldr	r3, [r3, #4]
 274 0090 002B     		cmp	r3, #0
 275 0092 04D0     		beq	.L12
 276              		.loc 1 256 3 discriminator 7
 277 0094 4FF48071 		mov	r1, #256
 278 0098 2B48     		ldr	r0, .L18
 279 009a FFF7FEFF 		bl	assert_failed
 280              	.L12:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 281              		.loc 1 259 3 is_stmt 1
 282 009e 2F4B     		ldr	r3, .L18+20
 283 00a0 1B68     		ldr	r3, [r3]
 284 00a2 23F0E002 		bic	r2, r3, #224
 285 00a6 7B68     		ldr	r3, [r7, #4]
 286 00a8 1B68     		ldr	r3, [r3]
 287 00aa 2C49     		ldr	r1, .L18+20
 288 00ac 1343     		orrs	r3, r3, r2
 289 00ae 0B60     		str	r3, [r1]
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 290              		.loc 1 262 3
 291 00b0 2B4B     		ldr	r3, .L18+24
 292 00b2 5B68     		ldr	r3, [r3, #4]
 293 00b4 2A4A     		ldr	r2, .L18+24
 294 00b6 23F48033 		bic	r3, r3, #65536
 295 00ba 5360     		str	r3, [r2, #4]
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 296              		.loc 1 263 3
 297 00bc 284B     		ldr	r3, .L18+24
 298 00be 1B68     		ldr	r3, [r3]
 299 00c0 274A     		ldr	r2, .L18+24
 300 00c2 23F48033 		bic	r3, r3, #65536
 301 00c6 1360     		str	r3, [r2]
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 302              		.loc 1 264 3
 303 00c8 254B     		ldr	r3, .L18+24
 304 00ca 9B68     		ldr	r3, [r3, #8]
 305 00cc 244A     		ldr	r2, .L18+24
 306 00ce 23F48033 		bic	r3, r3, #65536
 307 00d2 9360     		str	r3, [r2, #8]
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 308              		.loc 1 265 3
ARM GAS  /tmp/cc05abvm.s 			page 11


 309 00d4 224B     		ldr	r3, .L18+24
 310 00d6 DB68     		ldr	r3, [r3, #12]
 311 00d8 214A     		ldr	r2, .L18+24
 312 00da 23F48033 		bic	r3, r3, #65536
 313 00de D360     		str	r3, [r2, #12]
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 314              		.loc 1 268 17
 315 00e0 7B68     		ldr	r3, [r7, #4]
 316 00e2 5B68     		ldr	r3, [r3, #4]
 317              		.loc 1 268 24
 318 00e4 03F48033 		and	r3, r3, #65536
 319              		.loc 1 268 5
 320 00e8 002B     		cmp	r3, #0
 321 00ea 05D0     		beq	.L13
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 322              		.loc 1 270 5
 323 00ec 1C4B     		ldr	r3, .L18+24
 324 00ee 1B68     		ldr	r3, [r3]
 325 00f0 1B4A     		ldr	r2, .L18+24
 326 00f2 43F48033 		orr	r3, r3, #65536
 327 00f6 1360     		str	r3, [r2]
 328              	.L13:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 329              		.loc 1 274 17
 330 00f8 7B68     		ldr	r3, [r7, #4]
 331 00fa 5B68     		ldr	r3, [r3, #4]
 332              		.loc 1 274 24
 333 00fc 03F40033 		and	r3, r3, #131072
 334              		.loc 1 274 5
 335 0100 002B     		cmp	r3, #0
 336 0102 05D0     		beq	.L14
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 337              		.loc 1 276 5
 338 0104 164B     		ldr	r3, .L18+24
 339 0106 5B68     		ldr	r3, [r3, #4]
 340 0108 154A     		ldr	r2, .L18+24
 341 010a 43F48033 		orr	r3, r3, #65536
 342 010e 5360     		str	r3, [r2, #4]
 343              	.L14:
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 344              		.loc 1 280 17
 345 0110 7B68     		ldr	r3, [r7, #4]
 346 0112 5B68     		ldr	r3, [r3, #4]
 347              		.loc 1 280 24
 348 0114 03F00103 		and	r3, r3, #1
 349              		.loc 1 280 5
 350 0118 002B     		cmp	r3, #0
ARM GAS  /tmp/cc05abvm.s 			page 12


 351 011a 05D0     		beq	.L15
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 352              		.loc 1 282 5
 353 011c 104B     		ldr	r3, .L18+24
 354 011e 9B68     		ldr	r3, [r3, #8]
 355 0120 0F4A     		ldr	r2, .L18+24
 356 0122 43F48033 		orr	r3, r3, #65536
 357 0126 9360     		str	r3, [r2, #8]
 358              	.L15:
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 359              		.loc 1 285 17
 360 0128 7B68     		ldr	r3, [r7, #4]
 361 012a 5B68     		ldr	r3, [r3, #4]
 362              		.loc 1 285 24
 363 012c 03F00203 		and	r3, r3, #2
 364              		.loc 1 285 5
 365 0130 002B     		cmp	r3, #0
 366 0132 05D0     		beq	.L17
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 367              		.loc 1 287 5
 368 0134 0A4B     		ldr	r3, .L18+24
 369 0136 DB68     		ldr	r3, [r3, #12]
 370 0138 094A     		ldr	r2, .L18+24
 371 013a 43F48033 		orr	r3, r3, #65536
 372 013e D360     		str	r3, [r2, #12]
 373              	.L17:
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 374              		.loc 1 289 1
 375 0140 00BF     		nop
 376 0142 0837     		adds	r7, r7, #8
 377              	.LCFI15:
 378              		.cfi_def_cfa_offset 8
 379 0144 BD46     		mov	sp, r7
 380              	.LCFI16:
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 0146 80BD     		pop	{r7, pc}
 384              	.L19:
 385              		.align	2
 386              	.L18:
 387 0148 00000000 		.word	.LC0
 388 014c 02000100 		.word	65538
 389 0150 03000100 		.word	65539
 390 0154 01000200 		.word	131073
 391 0158 03000200 		.word	131075
 392 015c 00700040 		.word	1073770496
 393 0160 003C0140 		.word	1073822720
 394              		.cfi_endproc
 395              	.LFE133:
 397              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_PWR_EnablePVD
ARM GAS  /tmp/cc05abvm.s 			page 13


 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	HAL_PWR_EnablePVD:
 406              	.LFB134:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 407              		.loc 1 296 1
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              	.LCFI17:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              	.LCFI18:
 418              		.cfi_def_cfa_register 7
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 419              		.loc 1 297 3
 420 0004 034B     		ldr	r3, .L21
 421              		.loc 1 297 33
 422 0006 0122     		movs	r2, #1
 423 0008 1A60     		str	r2, [r3]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 424              		.loc 1 298 1
 425 000a 00BF     		nop
 426 000c BD46     		mov	sp, r7
 427              	.LCFI19:
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 000e 5DF8047B 		ldr	r7, [sp], #4
 431              	.LCFI20:
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 0012 7047     		bx	lr
 435              	.L22:
 436              		.align	2
 437              	.L21:
 438 0014 10000E42 		.word	1108213776
 439              		.cfi_endproc
 440              	.LFE134:
 442              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 443              		.align	1
 444              		.global	HAL_PWR_DisablePVD
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	HAL_PWR_DisablePVD:
ARM GAS  /tmp/cc05abvm.s 			page 14


 451              	.LFB135:
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 452              		.loc 1 305 1
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 80B4     		push	{r7}
 458              	.LCFI21:
 459              		.cfi_def_cfa_offset 4
 460              		.cfi_offset 7, -4
 461 0002 00AF     		add	r7, sp, #0
 462              	.LCFI22:
 463              		.cfi_def_cfa_register 7
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 464              		.loc 1 306 3
 465 0004 034B     		ldr	r3, .L24
 466              		.loc 1 306 33
 467 0006 0022     		movs	r2, #0
 468 0008 1A60     		str	r2, [r3]
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 469              		.loc 1 307 1
 470 000a 00BF     		nop
 471 000c BD46     		mov	sp, r7
 472              	.LCFI23:
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 000e 5DF8047B 		ldr	r7, [sp], #4
 476              	.LCFI24:
 477              		.cfi_restore 7
 478              		.cfi_def_cfa_offset 0
 479 0012 7047     		bx	lr
 480              	.L25:
 481              		.align	2
 482              	.L24:
 483 0014 10000E42 		.word	1108213776
 484              		.cfi_endproc
 485              	.LFE135:
 487              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 488              		.align	1
 489              		.global	HAL_PWR_EnableWakeUpPin
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	HAL_PWR_EnableWakeUpPin:
 496              	.LFB136:
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
ARM GAS  /tmp/cc05abvm.s 			page 15


 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 497              		.loc 1 319 1
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 8
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501 0000 80B5     		push	{r7, lr}
 502              	.LCFI25:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 82B0     		sub	sp, sp, #8
 507              	.LCFI26:
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI27:
 511              		.cfi_def_cfa_register 7
 512 0006 7860     		str	r0, [r7, #4]
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 513              		.loc 1 321 3
 514 0008 7B68     		ldr	r3, [r7, #4]
 515 000a B3F5807F 		cmp	r3, #256
 516 000e 04D0     		beq	.L27
 517              		.loc 1 321 3 is_stmt 0 discriminator 1
 518 0010 40F24111 		movw	r1, #321
 519 0014 0648     		ldr	r0, .L28
 520 0016 FFF7FEFF 		bl	assert_failed
 521              	.L27:
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 522              		.loc 1 324 3 is_stmt 1
 523 001a 064B     		ldr	r3, .L28+4
 524 001c 5A68     		ldr	r2, [r3, #4]
 525 001e 0549     		ldr	r1, .L28+4
 526 0020 7B68     		ldr	r3, [r7, #4]
 527 0022 1343     		orrs	r3, r3, r2
 528 0024 4B60     		str	r3, [r1, #4]
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 529              		.loc 1 325 1
 530 0026 00BF     		nop
 531 0028 0837     		adds	r7, r7, #8
 532              	.LCFI28:
 533              		.cfi_def_cfa_offset 8
 534 002a BD46     		mov	sp, r7
 535              	.LCFI29:
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 002c 80BD     		pop	{r7, pc}
 539              	.L29:
ARM GAS  /tmp/cc05abvm.s 			page 16


 540 002e 00BF     		.align	2
 541              	.L28:
 542 0030 00000000 		.word	.LC0
 543 0034 00700040 		.word	1073770496
 544              		.cfi_endproc
 545              	.LFE136:
 547              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 548              		.align	1
 549              		.global	HAL_PWR_DisableWakeUpPin
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	HAL_PWR_DisableWakeUpPin:
 556              	.LFB137:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 557              		.loc 1 337 1
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              	.LCFI30:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 82B0     		sub	sp, sp, #8
 567              	.LCFI31:
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              	.LCFI32:
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 573              		.loc 1 339 3
 574 0008 7B68     		ldr	r3, [r7, #4]
 575 000a B3F5807F 		cmp	r3, #256
 576 000e 04D0     		beq	.L31
 577              		.loc 1 339 3 is_stmt 0 discriminator 1
 578 0010 40F25311 		movw	r1, #339
 579 0014 0648     		ldr	r0, .L32
 580 0016 FFF7FEFF 		bl	assert_failed
 581              	.L31:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
ARM GAS  /tmp/cc05abvm.s 			page 17


 582              		.loc 1 342 3 is_stmt 1
 583 001a 064B     		ldr	r3, .L32+4
 584 001c 5A68     		ldr	r2, [r3, #4]
 585 001e 7B68     		ldr	r3, [r7, #4]
 586 0020 DB43     		mvns	r3, r3
 587 0022 0449     		ldr	r1, .L32+4
 588 0024 1340     		ands	r3, r3, r2
 589 0026 4B60     		str	r3, [r1, #4]
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 590              		.loc 1 343 1
 591 0028 00BF     		nop
 592 002a 0837     		adds	r7, r7, #8
 593              	.LCFI33:
 594              		.cfi_def_cfa_offset 8
 595 002c BD46     		mov	sp, r7
 596              	.LCFI34:
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 002e 80BD     		pop	{r7, pc}
 600              	.L33:
 601              		.align	2
 602              	.L32:
 603 0030 00000000 		.word	.LC0
 604 0034 00700040 		.word	1073770496
 605              		.cfi_endproc
 606              	.LFE137:
 608              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 609              		.align	1
 610              		.global	HAL_PWR_EnterSLEEPMode
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	HAL_PWR_EnterSLEEPMode:
 617              	.LFB138:
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
ARM GAS  /tmp/cc05abvm.s 			page 18


 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 618              		.loc 1 366 1
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              	.LCFI35:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 82B0     		sub	sp, sp, #8
 628              	.LCFI36:
 629              		.cfi_def_cfa_offset 16
 630 0004 00AF     		add	r7, sp, #0
 631              	.LCFI37:
 632              		.cfi_def_cfa_register 7
 633 0006 7860     		str	r0, [r7, #4]
 634 0008 0B46     		mov	r3, r1
 635 000a FB70     		strb	r3, [r7, #3]
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 636              		.loc 1 368 3
 637 000c 7B68     		ldr	r3, [r7, #4]
 638 000e 002B     		cmp	r3, #0
 639 0010 07D0     		beq	.L35
 640              		.loc 1 368 3 is_stmt 0 discriminator 1
 641 0012 7B68     		ldr	r3, [r7, #4]
 642 0014 012B     		cmp	r3, #1
 643 0016 04D0     		beq	.L35
 644              		.loc 1 368 3 discriminator 2
 645 0018 4FF4B871 		mov	r1, #368
 646 001c 0F48     		ldr	r0, .L40
 647 001e FFF7FEFF 		bl	assert_failed
 648              	.L35:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 649              		.loc 1 369 3 is_stmt 1
 650 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 651 0024 012B     		cmp	r3, #1
 652 0026 07D0     		beq	.L36
 653              		.loc 1 369 3 is_stmt 0 discriminator 1
 654 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 655 002a 022B     		cmp	r3, #2
 656 002c 04D0     		beq	.L36
 657              		.loc 1 369 3 discriminator 2
 658 002e 40F27111 		movw	r1, #369
 659 0032 0A48     		ldr	r0, .L40
 660 0034 FFF7FEFF 		bl	assert_failed
 661              	.L36:
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 662              		.loc 1 372 3 is_stmt 1
 663 0038 094B     		ldr	r3, .L40+4
 664 003a 1B69     		ldr	r3, [r3, #16]
 665 003c 084A     		ldr	r2, .L40+4
 666 003e 23F00403 		bic	r3, r3, #4
 667 0042 1361     		str	r3, [r2, #16]
ARM GAS  /tmp/cc05abvm.s 			page 19


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 668              		.loc 1 375 5
 669 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 670 0046 012B     		cmp	r3, #1
 671 0048 01D1     		bne	.L37
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 672              		.loc 1 378 5
 673              		.syntax unified
 674              	@ 378 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 675 004a 30BF     		wfi
 676              	@ 0 "" 2
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 677              		.loc 1 387 1
 678              		.thumb
 679              		.syntax unified
 680 004c 02E0     		b	.L39
 681              	.L37:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 682              		.loc 1 383 5
 683              		.syntax unified
 684              	@ 383 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 685 004e 40BF     		sev
 686              	@ 0 "" 2
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 687              		.loc 1 384 5
 688              	@ 384 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 689 0050 20BF     		wfe
 690              	@ 0 "" 2
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 691              		.loc 1 385 5
 692              	@ 385 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 693 0052 20BF     		wfe
 694              	@ 0 "" 2
 695              		.thumb
 696              		.syntax unified
 697              	.L39:
 698              		.loc 1 387 1
 699 0054 00BF     		nop
 700 0056 0837     		adds	r7, r7, #8
 701              	.LCFI38:
 702              		.cfi_def_cfa_offset 8
 703 0058 BD46     		mov	sp, r7
 704              	.LCFI39:
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
ARM GAS  /tmp/cc05abvm.s 			page 20


 707 005a 80BD     		pop	{r7, pc}
 708              	.L41:
 709              		.align	2
 710              	.L40:
 711 005c 00000000 		.word	.LC0
 712 0060 00ED00E0 		.word	-536810240
 713              		.cfi_endproc
 714              	.LFE138:
 716              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_PWR_EnterSTOPMode
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu fpv4-sp-d16
 724              	HAL_PWR_EnterSTOPMode:
 725              	.LFB139:
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 726              		.loc 1 409 1
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              	.LCFI40:
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 7, -8
 734              		.cfi_offset 14, -4
 735 0002 82B0     		sub	sp, sp, #8
 736              	.LCFI41:
 737              		.cfi_def_cfa_offset 16
 738 0004 00AF     		add	r7, sp, #0
 739              	.LCFI42:
 740              		.cfi_def_cfa_register 7
 741 0006 7860     		str	r0, [r7, #4]
 742 0008 0B46     		mov	r3, r1
 743 000a FB70     		strb	r3, [r7, #3]
ARM GAS  /tmp/cc05abvm.s 			page 21


 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 744              		.loc 1 411 3
 745 000c 7B68     		ldr	r3, [r7, #4]
 746 000e 002B     		cmp	r3, #0
 747 0010 07D0     		beq	.L43
 748              		.loc 1 411 3 is_stmt 0 discriminator 1
 749 0012 7B68     		ldr	r3, [r7, #4]
 750 0014 012B     		cmp	r3, #1
 751 0016 04D0     		beq	.L43
 752              		.loc 1 411 3 discriminator 2
 753 0018 40F29B11 		movw	r1, #411
 754 001c 1648     		ldr	r0, .L47
 755 001e FFF7FEFF 		bl	assert_failed
 756              	.L43:
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 757              		.loc 1 412 3 is_stmt 1
 758 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 759 0024 012B     		cmp	r3, #1
 760 0026 07D0     		beq	.L44
 761              		.loc 1 412 3 is_stmt 0 discriminator 1
 762 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 763 002a 022B     		cmp	r3, #2
 764 002c 04D0     		beq	.L44
 765              		.loc 1 412 3 discriminator 2
 766 002e 4FF4CE71 		mov	r1, #412
 767 0032 1148     		ldr	r0, .L47
 768 0034 FFF7FEFF 		bl	assert_failed
 769              	.L44:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 770              		.loc 1 415 3 is_stmt 1
 771 0038 104B     		ldr	r3, .L47+4
 772 003a 1B68     		ldr	r3, [r3]
 773 003c 23F00302 		bic	r2, r3, #3
 774 0040 0E49     		ldr	r1, .L47+4
 775 0042 7B68     		ldr	r3, [r7, #4]
 776 0044 1343     		orrs	r3, r3, r2
 777 0046 0B60     		str	r3, [r1]
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 778              		.loc 1 418 3
 779 0048 0D4B     		ldr	r3, .L47+8
 780 004a 1B69     		ldr	r3, [r3, #16]
 781 004c 0C4A     		ldr	r2, .L47+8
 782 004e 43F00403 		orr	r3, r3, #4
 783 0052 1361     		str	r3, [r2, #16]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 784              		.loc 1 421 5
 785 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 786 0056 012B     		cmp	r3, #1
 787 0058 01D1     		bne	.L45
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
ARM GAS  /tmp/cc05abvm.s 			page 22


 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 788              		.loc 1 424 5
 789              		.syntax unified
 790              	@ 424 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 791 005a 30BF     		wfi
 792              	@ 0 "" 2
 793              		.thumb
 794              		.syntax unified
 795 005c 02E0     		b	.L46
 796              	.L45:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 797              		.loc 1 429 5
 798              		.syntax unified
 799              	@ 429 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 800 005e 40BF     		sev
 801              	@ 0 "" 2
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 802              		.loc 1 430 5
 803              	@ 430 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 804 0060 20BF     		wfe
 805              	@ 0 "" 2
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 806              		.loc 1 431 5
 807              	@ 431 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 808 0062 20BF     		wfe
 809              	@ 0 "" 2
 810              		.thumb
 811              		.syntax unified
 812              	.L46:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 813              		.loc 1 434 3
 814 0064 064B     		ldr	r3, .L47+8
 815 0066 1B69     		ldr	r3, [r3, #16]
 816 0068 054A     		ldr	r2, .L47+8
 817 006a 23F00403 		bic	r3, r3, #4
 818 006e 1361     		str	r3, [r2, #16]
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 819              		.loc 1 435 1
 820 0070 00BF     		nop
 821 0072 0837     		adds	r7, r7, #8
 822              	.LCFI43:
 823              		.cfi_def_cfa_offset 8
 824 0074 BD46     		mov	sp, r7
 825              	.LCFI44:
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 0076 80BD     		pop	{r7, pc}
 829              	.L48:
 830              		.align	2
 831              	.L47:
ARM GAS  /tmp/cc05abvm.s 			page 23


 832 0078 00000000 		.word	.LC0
 833 007c 00700040 		.word	1073770496
 834 0080 00ED00E0 		.word	-536810240
 835              		.cfi_endproc
 836              	.LFE139:
 838              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_PWR_EnterSTANDBYMode
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv4-sp-d16
 846              	HAL_PWR_EnterSTANDBYMode:
 847              	.LFB140:
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 848              		.loc 1 448 1
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 853 0000 80B4     		push	{r7}
 854              	.LCFI45:
 855              		.cfi_def_cfa_offset 4
 856              		.cfi_offset 7, -4
 857 0002 00AF     		add	r7, sp, #0
 858              	.LCFI46:
 859              		.cfi_def_cfa_register 7
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 860              		.loc 1 450 3
 861 0004 084B     		ldr	r3, .L50
 862 0006 1B68     		ldr	r3, [r3]
 863 0008 074A     		ldr	r2, .L50
 864 000a 43F00203 		orr	r3, r3, #2
 865 000e 1360     		str	r3, [r2]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 866              		.loc 1 453 3
 867 0010 064B     		ldr	r3, .L50+4
 868 0012 1B69     		ldr	r3, [r3, #16]
 869 0014 054A     		ldr	r2, .L50+4
 870 0016 43F00403 		orr	r3, r3, #4
 871 001a 1361     		str	r3, [r2, #16]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
ARM GAS  /tmp/cc05abvm.s 			page 24


 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 872              		.loc 1 460 3
 873              		.syntax unified
 874              	@ 460 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 875 001c 30BF     		wfi
 876              	@ 0 "" 2
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 877              		.loc 1 461 1
 878              		.thumb
 879              		.syntax unified
 880 001e 00BF     		nop
 881 0020 BD46     		mov	sp, r7
 882              	.LCFI47:
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 0022 5DF8047B 		ldr	r7, [sp], #4
 886              	.LCFI48:
 887              		.cfi_restore 7
 888              		.cfi_def_cfa_offset 0
 889 0026 7047     		bx	lr
 890              	.L51:
 891              		.align	2
 892              	.L50:
 893 0028 00700040 		.word	1073770496
 894 002c 00ED00E0 		.word	-536810240
 895              		.cfi_endproc
 896              	.LFE140:
 898              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 899              		.align	1
 900              		.global	HAL_PWR_PVD_IRQHandler
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv4-sp-d16
 906              	HAL_PWR_PVD_IRQHandler:
 907              	.LFB141:
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 908              		.loc 1 469 1
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912 0000 80B5     		push	{r7, lr}
 913              	.LCFI49:
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
ARM GAS  /tmp/cc05abvm.s 			page 25


 916              		.cfi_offset 14, -4
 917 0002 00AF     		add	r7, sp, #0
 918              	.LCFI50:
 919              		.cfi_def_cfa_register 7
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 920              		.loc 1 471 6
 921 0004 064B     		ldr	r3, .L55
 922 0006 5B69     		ldr	r3, [r3, #20]
 923 0008 03F48033 		and	r3, r3, #65536
 924              		.loc 1 471 5
 925 000c 002B     		cmp	r3, #0
 926 000e 05D0     		beq	.L54
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 927              		.loc 1 474 5
 928 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 929              		.loc 1 477 5
 930 0014 024B     		ldr	r3, .L55
 931 0016 4FF48032 		mov	r2, #65536
 932 001a 5A61     		str	r2, [r3, #20]
 933              	.L54:
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 934              		.loc 1 479 1
 935 001c 00BF     		nop
 936 001e 80BD     		pop	{r7, pc}
 937              	.L56:
 938              		.align	2
 939              	.L55:
 940 0020 003C0140 		.word	1073822720
 941              		.cfi_endproc
 942              	.LFE141:
 944              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 945              		.align	1
 946              		.weak	HAL_PWR_PVDCallback
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 950              		.fpu fpv4-sp-d16
 952              	HAL_PWR_PVDCallback:
 953              	.LFB142:
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 954              		.loc 1 486 1
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc05abvm.s 			page 26


 958              		@ link register save eliminated.
 959 0000 80B4     		push	{r7}
 960              	.LCFI51:
 961              		.cfi_def_cfa_offset 4
 962              		.cfi_offset 7, -4
 963 0002 00AF     		add	r7, sp, #0
 964              	.LCFI52:
 965              		.cfi_def_cfa_register 7
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 966              		.loc 1 490 1
 967 0004 00BF     		nop
 968 0006 BD46     		mov	sp, r7
 969              	.LCFI53:
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 0008 5DF8047B 		ldr	r7, [sp], #4
 973              	.LCFI54:
 974              		.cfi_restore 7
 975              		.cfi_def_cfa_offset 0
 976 000c 7047     		bx	lr
 977              		.cfi_endproc
 978              	.LFE142:
 980              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 981              		.align	1
 982              		.global	HAL_PWR_EnableSleepOnExit
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv4-sp-d16
 988              	HAL_PWR_EnableSleepOnExit:
 989              	.LFB143:
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 990              		.loc 1 501 1
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994              		@ link register save eliminated.
 995 0000 80B4     		push	{r7}
 996              	.LCFI55:
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 7, -4
 999 0002 00AF     		add	r7, sp, #0
 1000              	.LCFI56:
 1001              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc05abvm.s 			page 27


 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 1002              		.loc 1 503 3
 1003 0004 054B     		ldr	r3, .L59
 1004 0006 1B69     		ldr	r3, [r3, #16]
 1005 0008 044A     		ldr	r2, .L59
 1006 000a 43F00203 		orr	r3, r3, #2
 1007 000e 1361     		str	r3, [r2, #16]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 1008              		.loc 1 504 1
 1009 0010 00BF     		nop
 1010 0012 BD46     		mov	sp, r7
 1011              	.LCFI57:
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 0014 5DF8047B 		ldr	r7, [sp], #4
 1015              	.LCFI58:
 1016              		.cfi_restore 7
 1017              		.cfi_def_cfa_offset 0
 1018 0018 7047     		bx	lr
 1019              	.L60:
 1020 001a 00BF     		.align	2
 1021              	.L59:
 1022 001c 00ED00E0 		.word	-536810240
 1023              		.cfi_endproc
 1024              	.LFE143:
 1026              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 1027              		.align	1
 1028              		.global	HAL_PWR_DisableSleepOnExit
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	HAL_PWR_DisableSleepOnExit:
 1035              	.LFB144:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 1036              		.loc 1 513 1
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041 0000 80B4     		push	{r7}
 1042              	.LCFI59:
 1043              		.cfi_def_cfa_offset 4
 1044              		.cfi_offset 7, -4
 1045 0002 00AF     		add	r7, sp, #0
 1046              	.LCFI60:
 1047              		.cfi_def_cfa_register 7
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
ARM GAS  /tmp/cc05abvm.s 			page 28


 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 1048              		.loc 1 515 3
 1049 0004 054B     		ldr	r3, .L62
 1050 0006 1B69     		ldr	r3, [r3, #16]
 1051 0008 044A     		ldr	r2, .L62
 1052 000a 23F00203 		bic	r3, r3, #2
 1053 000e 1361     		str	r3, [r2, #16]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 1054              		.loc 1 516 1
 1055 0010 00BF     		nop
 1056 0012 BD46     		mov	sp, r7
 1057              	.LCFI61:
 1058              		.cfi_def_cfa_register 13
 1059              		@ sp needed
 1060 0014 5DF8047B 		ldr	r7, [sp], #4
 1061              	.LCFI62:
 1062              		.cfi_restore 7
 1063              		.cfi_def_cfa_offset 0
 1064 0018 7047     		bx	lr
 1065              	.L63:
 1066 001a 00BF     		.align	2
 1067              	.L62:
 1068 001c 00ED00E0 		.word	-536810240
 1069              		.cfi_endproc
 1070              	.LFE144:
 1072              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 1073              		.align	1
 1074              		.global	HAL_PWR_EnableSEVOnPend
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv4-sp-d16
 1080              	HAL_PWR_EnableSEVOnPend:
 1081              	.LFB145:
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 1082              		.loc 1 525 1
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086              		@ link register save eliminated.
 1087 0000 80B4     		push	{r7}
 1088              	.LCFI63:
 1089              		.cfi_def_cfa_offset 4
 1090              		.cfi_offset 7, -4
 1091 0002 00AF     		add	r7, sp, #0
 1092              	.LCFI64:
 1093              		.cfi_def_cfa_register 7
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
ARM GAS  /tmp/cc05abvm.s 			page 29


 1094              		.loc 1 527 3
 1095 0004 054B     		ldr	r3, .L65
 1096 0006 1B69     		ldr	r3, [r3, #16]
 1097 0008 044A     		ldr	r2, .L65
 1098 000a 43F01003 		orr	r3, r3, #16
 1099 000e 1361     		str	r3, [r2, #16]
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 1100              		.loc 1 528 1
 1101 0010 00BF     		nop
 1102 0012 BD46     		mov	sp, r7
 1103              	.LCFI65:
 1104              		.cfi_def_cfa_register 13
 1105              		@ sp needed
 1106 0014 5DF8047B 		ldr	r7, [sp], #4
 1107              	.LCFI66:
 1108              		.cfi_restore 7
 1109              		.cfi_def_cfa_offset 0
 1110 0018 7047     		bx	lr
 1111              	.L66:
 1112 001a 00BF     		.align	2
 1113              	.L65:
 1114 001c 00ED00E0 		.word	-536810240
 1115              		.cfi_endproc
 1116              	.LFE145:
 1118              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 1119              		.align	1
 1120              		.global	HAL_PWR_DisableSEVOnPend
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv4-sp-d16
 1126              	HAL_PWR_DisableSEVOnPend:
 1127              	.LFB146:
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 1128              		.loc 1 537 1
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0000 80B4     		push	{r7}
 1134              	.LCFI67:
 1135              		.cfi_def_cfa_offset 4
 1136              		.cfi_offset 7, -4
 1137 0002 00AF     		add	r7, sp, #0
 1138              	.LCFI68:
 1139              		.cfi_def_cfa_register 7
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 1140              		.loc 1 539 3
ARM GAS  /tmp/cc05abvm.s 			page 30


 1141 0004 054B     		ldr	r3, .L68
 1142 0006 1B69     		ldr	r3, [r3, #16]
 1143 0008 044A     		ldr	r2, .L68
 1144 000a 23F01003 		bic	r3, r3, #16
 1145 000e 1361     		str	r3, [r2, #16]
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 1146              		.loc 1 540 1
 1147 0010 00BF     		nop
 1148 0012 BD46     		mov	sp, r7
 1149              	.LCFI69:
 1150              		.cfi_def_cfa_register 13
 1151              		@ sp needed
 1152 0014 5DF8047B 		ldr	r7, [sp], #4
 1153              	.LCFI70:
 1154              		.cfi_restore 7
 1155              		.cfi_def_cfa_offset 0
 1156 0018 7047     		bx	lr
 1157              	.L69:
 1158 001a 00BF     		.align	2
 1159              	.L68:
 1160 001c 00ED00E0 		.word	-536810240
 1161              		.cfi_endproc
 1162              	.LFE146:
 1164              		.text
 1165              	.Letext0:
 1166              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1167              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1168              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1169              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1170              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1171              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1172              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
 1173              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc05abvm.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_pwr.c
     /tmp/cc05abvm.s:18     .text.HAL_PWR_DeInit:0000000000000000 $t
     /tmp/cc05abvm.s:26     .text.HAL_PWR_DeInit:0000000000000000 HAL_PWR_DeInit
     /tmp/cc05abvm.s:67     .text.HAL_PWR_DeInit:0000000000000028 $d
     /tmp/cc05abvm.s:72     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 $t
     /tmp/cc05abvm.s:79     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 HAL_PWR_EnableBkUpAccess
     /tmp/cc05abvm.s:112    .text.HAL_PWR_EnableBkUpAccess:0000000000000014 $d
     /tmp/cc05abvm.s:117    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 $t
     /tmp/cc05abvm.s:124    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 HAL_PWR_DisableBkUpAccess
     /tmp/cc05abvm.s:157    .text.HAL_PWR_DisableBkUpAccess:0000000000000014 $d
     /tmp/cc05abvm.s:162    .rodata:0000000000000000 $d
     /tmp/cc05abvm.s:167    .text.HAL_PWR_ConfigPVD:0000000000000000 $t
     /tmp/cc05abvm.s:174    .text.HAL_PWR_ConfigPVD:0000000000000000 HAL_PWR_ConfigPVD
     /tmp/cc05abvm.s:387    .text.HAL_PWR_ConfigPVD:0000000000000148 $d
     /tmp/cc05abvm.s:398    .text.HAL_PWR_EnablePVD:0000000000000000 $t
     /tmp/cc05abvm.s:405    .text.HAL_PWR_EnablePVD:0000000000000000 HAL_PWR_EnablePVD
     /tmp/cc05abvm.s:438    .text.HAL_PWR_EnablePVD:0000000000000014 $d
     /tmp/cc05abvm.s:443    .text.HAL_PWR_DisablePVD:0000000000000000 $t
     /tmp/cc05abvm.s:450    .text.HAL_PWR_DisablePVD:0000000000000000 HAL_PWR_DisablePVD
     /tmp/cc05abvm.s:483    .text.HAL_PWR_DisablePVD:0000000000000014 $d
     /tmp/cc05abvm.s:488    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 $t
     /tmp/cc05abvm.s:495    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 HAL_PWR_EnableWakeUpPin
     /tmp/cc05abvm.s:542    .text.HAL_PWR_EnableWakeUpPin:0000000000000030 $d
     /tmp/cc05abvm.s:548    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 $t
     /tmp/cc05abvm.s:555    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 HAL_PWR_DisableWakeUpPin
     /tmp/cc05abvm.s:603    .text.HAL_PWR_DisableWakeUpPin:0000000000000030 $d
     /tmp/cc05abvm.s:609    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 $t
     /tmp/cc05abvm.s:616    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 HAL_PWR_EnterSLEEPMode
     /tmp/cc05abvm.s:711    .text.HAL_PWR_EnterSLEEPMode:000000000000005c $d
     /tmp/cc05abvm.s:717    .text.HAL_PWR_EnterSTOPMode:0000000000000000 $t
     /tmp/cc05abvm.s:724    .text.HAL_PWR_EnterSTOPMode:0000000000000000 HAL_PWR_EnterSTOPMode
     /tmp/cc05abvm.s:832    .text.HAL_PWR_EnterSTOPMode:0000000000000078 $d
     /tmp/cc05abvm.s:839    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 $t
     /tmp/cc05abvm.s:846    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 HAL_PWR_EnterSTANDBYMode
     /tmp/cc05abvm.s:893    .text.HAL_PWR_EnterSTANDBYMode:0000000000000028 $d
     /tmp/cc05abvm.s:899    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 $t
     /tmp/cc05abvm.s:906    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 HAL_PWR_PVD_IRQHandler
     /tmp/cc05abvm.s:952    .text.HAL_PWR_PVDCallback:0000000000000000 HAL_PWR_PVDCallback
     /tmp/cc05abvm.s:940    .text.HAL_PWR_PVD_IRQHandler:0000000000000020 $d
     /tmp/cc05abvm.s:945    .text.HAL_PWR_PVDCallback:0000000000000000 $t
     /tmp/cc05abvm.s:981    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 $t
     /tmp/cc05abvm.s:988    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 HAL_PWR_EnableSleepOnExit
     /tmp/cc05abvm.s:1022   .text.HAL_PWR_EnableSleepOnExit:000000000000001c $d
     /tmp/cc05abvm.s:1027   .text.HAL_PWR_DisableSleepOnExit:0000000000000000 $t
     /tmp/cc05abvm.s:1034   .text.HAL_PWR_DisableSleepOnExit:0000000000000000 HAL_PWR_DisableSleepOnExit
     /tmp/cc05abvm.s:1068   .text.HAL_PWR_DisableSleepOnExit:000000000000001c $d
     /tmp/cc05abvm.s:1073   .text.HAL_PWR_EnableSEVOnPend:0000000000000000 $t
     /tmp/cc05abvm.s:1080   .text.HAL_PWR_EnableSEVOnPend:0000000000000000 HAL_PWR_EnableSEVOnPend
     /tmp/cc05abvm.s:1114   .text.HAL_PWR_EnableSEVOnPend:000000000000001c $d
     /tmp/cc05abvm.s:1119   .text.HAL_PWR_DisableSEVOnPend:0000000000000000 $t
     /tmp/cc05abvm.s:1126   .text.HAL_PWR_DisableSEVOnPend:0000000000000000 HAL_PWR_DisableSEVOnPend
     /tmp/cc05abvm.s:1160   .text.HAL_PWR_DisableSEVOnPend:000000000000001c $d

UNDEFINED SYMBOLS
assert_failed
