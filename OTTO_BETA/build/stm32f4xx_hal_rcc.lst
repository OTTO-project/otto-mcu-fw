ARM GAS  /tmp/ccbSHBdX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  /tmp/ccbSHBdX.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccbSHBdX.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
ARM GAS  /tmp/ccbSHBdX.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccbSHBdX.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  29              		.loc 1 203 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  41              		.loc 1 204 10
  42 0004 0023     		movs	r3, #0
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  43              		.loc 1 205 1
  44 0006 1846     		mov	r0, r3
  45 0008 BD46     		mov	sp, r7
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 13
  48              		@ sp needed
  49 000a 5DF8047B 		ldr	r7, [sp], #4
  50              	.LCFI3:
  51              		.cfi_restore 7
  52              		.cfi_def_cfa_offset 0
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE130:
  57              		.section	.rodata
  58              		.align	2
  59              	.LC0:
  60 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc."
  60      6572732F 
  60      53544D33 
  60      32463478 
  60      785F4841 
  61 0033 6300     		.ascii	"c\000"
  62              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  63              		.align	1
  64              		.weak	HAL_RCC_OscConfig
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	HAL_RCC_OscConfig:
  71              	.LFB131:
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
ARM GAS  /tmp/ccbSHBdX.s 			page 6


 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  72              		.loc 1 222 1
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 24
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              	.LCFI4:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 86B0     		sub	sp, sp, #24
  82              	.LCFI5:
  83              		.cfi_def_cfa_offset 32
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI6:
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart, pll_config;
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  88              		.loc 1 226 5
  89 0008 7B68     		ldr	r3, [r7, #4]
  90 000a 002B     		cmp	r3, #0
  91 000c 01D1     		bne	.L4
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  92              		.loc 1 228 12
  93 000e 0123     		movs	r3, #1
  94 0010 0DE3     		b	.L5
  95              	.L4:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  96              		.loc 1 232 3
  97 0012 7B68     		ldr	r3, [r7, #4]
  98 0014 1B68     		ldr	r3, [r3]
  99 0016 0F2B     		cmp	r3, #15
 100 0018 03D9     		bls	.L6
 101              		.loc 1 232 3 is_stmt 0 discriminator 1
 102 001a E821     		movs	r1, #232
 103 001c A348     		ldr	r0, .L73
 104 001e FFF7FEFF 		bl	assert_failed
 105              	.L6:
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 106              		.loc 1 234 25 is_stmt 1
 107 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccbSHBdX.s 			page 7


 108 0024 1B68     		ldr	r3, [r3]
 109              		.loc 1 234 43
 110 0026 03F00103 		and	r3, r3, #1
 111              		.loc 1 234 5
 112 002a 002B     		cmp	r3, #0
 113 002c 00F08880 		beq	.L7
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 114              		.loc 1 237 5
 115 0030 7B68     		ldr	r3, [r7, #4]
 116 0032 5B68     		ldr	r3, [r3, #4]
 117 0034 002B     		cmp	r3, #0
 118 0036 0DD0     		beq	.L8
 119              		.loc 1 237 5 is_stmt 0 discriminator 1
 120 0038 7B68     		ldr	r3, [r7, #4]
 121 003a 5B68     		ldr	r3, [r3, #4]
 122 003c B3F5803F 		cmp	r3, #65536
 123 0040 08D0     		beq	.L8
 124              		.loc 1 237 5 discriminator 2
 125 0042 7B68     		ldr	r3, [r7, #4]
 126 0044 5B68     		ldr	r3, [r3, #4]
 127 0046 B3F5A02F 		cmp	r3, #327680
 128 004a 03D0     		beq	.L8
 129              		.loc 1 237 5 discriminator 3
 130 004c ED21     		movs	r1, #237
 131 004e 9748     		ldr	r0, .L73
 132 0050 FFF7FEFF 		bl	assert_failed
 133              	.L8:
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 134              		.loc 1 239 9 is_stmt 1
 135 0054 964B     		ldr	r3, .L73+4
 136 0056 9B68     		ldr	r3, [r3, #8]
 137 0058 03F00C03 		and	r3, r3, #12
 138              		.loc 1 239 7
 139 005c 042B     		cmp	r3, #4
 140 005e 0CD0     		beq	.L9
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 141              		.loc 1 240 9 discriminator 1
 142 0060 934B     		ldr	r3, .L73+4
 143 0062 9B68     		ldr	r3, [r3, #8]
 144 0064 03F00C03 		and	r3, r3, #12
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 145              		.loc 1 239 60 discriminator 1
 146 0068 082B     		cmp	r3, #8
 147 006a 12D1     		bne	.L10
 148              		.loc 1 240 68
 149 006c 904B     		ldr	r3, .L73+4
 150 006e 5B68     		ldr	r3, [r3, #4]
 151              		.loc 1 240 78
 152 0070 03F48003 		and	r3, r3, #4194304
 153              		.loc 1 240 60
 154 0074 B3F5800F 		cmp	r3, #4194304
 155 0078 0BD1     		bne	.L10
 156              	.L9:
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccbSHBdX.s 			page 8


 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 157              		.loc 1 242 11
 158 007a 8D4B     		ldr	r3, .L73+4
 159 007c 1B68     		ldr	r3, [r3]
 160 007e 03F40033 		and	r3, r3, #131072
 161              		.loc 1 242 9
 162 0082 002B     		cmp	r3, #0
 163 0084 5BD0     		beq	.L72
 164              		.loc 1 242 78 discriminator 1
 165 0086 7B68     		ldr	r3, [r7, #4]
 166 0088 5B68     		ldr	r3, [r3, #4]
 167              		.loc 1 242 57 discriminator 1
 168 008a 002B     		cmp	r3, #0
 169 008c 57D1     		bne	.L72
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 170              		.loc 1 244 16
 171 008e 0123     		movs	r3, #1
 172 0090 CDE2     		b	.L5
 173              	.L10:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 174              		.loc 1 250 7
 175 0092 7B68     		ldr	r3, [r7, #4]
 176 0094 5B68     		ldr	r3, [r3, #4]
 177 0096 B3F5803F 		cmp	r3, #65536
 178 009a 06D1     		bne	.L12
 179              		.loc 1 250 7 is_stmt 0 discriminator 1
 180 009c 844B     		ldr	r3, .L73+4
 181 009e 1B68     		ldr	r3, [r3]
 182 00a0 834A     		ldr	r2, .L73+4
 183 00a2 43F48033 		orr	r3, r3, #65536
 184 00a6 1360     		str	r3, [r2]
 185 00a8 1DE0     		b	.L13
 186              	.L12:
 187              		.loc 1 250 7 discriminator 2
 188 00aa 7B68     		ldr	r3, [r7, #4]
 189 00ac 5B68     		ldr	r3, [r3, #4]
 190 00ae B3F5A02F 		cmp	r3, #327680
 191 00b2 0CD1     		bne	.L14
 192              		.loc 1 250 7 discriminator 3
 193 00b4 7E4B     		ldr	r3, .L73+4
 194 00b6 1B68     		ldr	r3, [r3]
 195 00b8 7D4A     		ldr	r2, .L73+4
 196 00ba 43F48023 		orr	r3, r3, #262144
 197 00be 1360     		str	r3, [r2]
 198 00c0 7B4B     		ldr	r3, .L73+4
 199 00c2 1B68     		ldr	r3, [r3]
 200 00c4 7A4A     		ldr	r2, .L73+4
 201 00c6 43F48033 		orr	r3, r3, #65536
 202 00ca 1360     		str	r3, [r2]
 203 00cc 0BE0     		b	.L13
 204              	.L14:
ARM GAS  /tmp/ccbSHBdX.s 			page 9


 205              		.loc 1 250 7 discriminator 4
 206 00ce 784B     		ldr	r3, .L73+4
 207 00d0 1B68     		ldr	r3, [r3]
 208 00d2 774A     		ldr	r2, .L73+4
 209 00d4 23F48033 		bic	r3, r3, #65536
 210 00d8 1360     		str	r3, [r2]
 211 00da 754B     		ldr	r3, .L73+4
 212 00dc 1B68     		ldr	r3, [r3]
 213 00de 744A     		ldr	r2, .L73+4
 214 00e0 23F48023 		bic	r3, r3, #262144
 215 00e4 1360     		str	r3, [r2]
 216              	.L13:
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 217              		.loc 1 253 28 is_stmt 1
 218 00e6 7B68     		ldr	r3, [r7, #4]
 219 00e8 5B68     		ldr	r3, [r3, #4]
 220              		.loc 1 253 9
 221 00ea 002B     		cmp	r3, #0
 222 00ec 13D0     		beq	.L15
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 223              		.loc 1 256 21
 224 00ee FFF7FEFF 		bl	HAL_GetTick
 225 00f2 3861     		str	r0, [r7, #16]
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 226              		.loc 1 259 14
 227 00f4 08E0     		b	.L16
 228              	.L17:
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 229              		.loc 1 261 15
 230 00f6 FFF7FEFF 		bl	HAL_GetTick
 231 00fa 0246     		mov	r2, r0
 232              		.loc 1 261 29
 233 00fc 3B69     		ldr	r3, [r7, #16]
 234 00fe D31A     		subs	r3, r2, r3
 235              		.loc 1 261 13
 236 0100 642B     		cmp	r3, #100
 237 0102 01D9     		bls	.L16
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 238              		.loc 1 263 20
 239 0104 0323     		movs	r3, #3
 240 0106 92E2     		b	.L5
 241              	.L16:
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 242              		.loc 1 259 15
 243 0108 694B     		ldr	r3, .L73+4
 244 010a 1B68     		ldr	r3, [r3]
 245 010c 03F40033 		and	r3, r3, #131072
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 246              		.loc 1 259 14
ARM GAS  /tmp/ccbSHBdX.s 			page 10


 247 0110 002B     		cmp	r3, #0
 248 0112 F0D0     		beq	.L17
 249 0114 14E0     		b	.L7
 250              	.L15:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 251              		.loc 1 270 21
 252 0116 FFF7FEFF 		bl	HAL_GetTick
 253 011a 3861     		str	r0, [r7, #16]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 254              		.loc 1 273 14
 255 011c 08E0     		b	.L18
 256              	.L19:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 257              		.loc 1 275 15
 258 011e FFF7FEFF 		bl	HAL_GetTick
 259 0122 0246     		mov	r2, r0
 260              		.loc 1 275 29
 261 0124 3B69     		ldr	r3, [r7, #16]
 262 0126 D31A     		subs	r3, r2, r3
 263              		.loc 1 275 13
 264 0128 642B     		cmp	r3, #100
 265 012a 01D9     		bls	.L18
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 266              		.loc 1 277 20
 267 012c 0323     		movs	r3, #3
 268 012e 7EE2     		b	.L5
 269              	.L18:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 270              		.loc 1 273 15
 271 0130 5F4B     		ldr	r3, .L73+4
 272 0132 1B68     		ldr	r3, [r3]
 273 0134 03F40033 		and	r3, r3, #131072
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 274              		.loc 1 273 14
 275 0138 002B     		cmp	r3, #0
 276 013a F0D1     		bne	.L19
 277 013c 00E0     		b	.L7
 278              	.L72:
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 279              		.loc 1 242 9
 280 013e 00BF     		nop
 281              	.L7:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccbSHBdX.s 			page 11


 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 282              		.loc 1 284 25
 283 0140 7B68     		ldr	r3, [r7, #4]
 284 0142 1B68     		ldr	r3, [r3]
 285              		.loc 1 284 43
 286 0144 03F00203 		and	r3, r3, #2
 287              		.loc 1 284 5
 288 0148 002B     		cmp	r3, #0
 289 014a 79D0     		beq	.L20
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 290              		.loc 1 287 5
 291 014c 7B68     		ldr	r3, [r7, #4]
 292 014e DB68     		ldr	r3, [r3, #12]
 293 0150 002B     		cmp	r3, #0
 294 0152 08D0     		beq	.L21
 295              		.loc 1 287 5 is_stmt 0 discriminator 1
 296 0154 7B68     		ldr	r3, [r7, #4]
 297 0156 DB68     		ldr	r3, [r3, #12]
 298 0158 012B     		cmp	r3, #1
 299 015a 04D0     		beq	.L21
 300              		.loc 1 287 5 discriminator 2
 301 015c 40F21F11 		movw	r1, #287
 302 0160 5248     		ldr	r0, .L73
 303 0162 FFF7FEFF 		bl	assert_failed
 304              	.L21:
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 305              		.loc 1 288 5 is_stmt 1
 306 0166 7B68     		ldr	r3, [r7, #4]
 307 0168 1B69     		ldr	r3, [r3, #16]
 308 016a 1F2B     		cmp	r3, #31
 309 016c 04D9     		bls	.L22
 310              		.loc 1 288 5 is_stmt 0 discriminator 1
 311 016e 4FF49071 		mov	r1, #288
 312 0172 4E48     		ldr	r0, .L73
 313 0174 FFF7FEFF 		bl	assert_failed
 314              	.L22:
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 315              		.loc 1 291 9 is_stmt 1
 316 0178 4D4B     		ldr	r3, .L73+4
 317 017a 9B68     		ldr	r3, [r3, #8]
 318 017c 03F00C03 		and	r3, r3, #12
 319              		.loc 1 291 7
 320 0180 002B     		cmp	r3, #0
 321 0182 0BD0     		beq	.L23
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 322              		.loc 1 292 9 discriminator 1
 323 0184 4A4B     		ldr	r3, .L73+4
 324 0186 9B68     		ldr	r3, [r3, #8]
 325 0188 03F00C03 		and	r3, r3, #12
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 326              		.loc 1 291 60 discriminator 1
 327 018c 082B     		cmp	r3, #8
ARM GAS  /tmp/ccbSHBdX.s 			page 12


 328 018e 1CD1     		bne	.L24
 329              		.loc 1 292 68
 330 0190 474B     		ldr	r3, .L73+4
 331 0192 5B68     		ldr	r3, [r3, #4]
 332              		.loc 1 292 78
 333 0194 03F48003 		and	r3, r3, #4194304
 334              		.loc 1 292 60
 335 0198 002B     		cmp	r3, #0
 336 019a 16D1     		bne	.L24
 337              	.L23:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 338              		.loc 1 295 11
 339 019c 444B     		ldr	r3, .L73+4
 340 019e 1B68     		ldr	r3, [r3]
 341 01a0 03F00203 		and	r3, r3, #2
 342              		.loc 1 295 9
 343 01a4 002B     		cmp	r3, #0
 344 01a6 05D0     		beq	.L25
 345              		.loc 1 295 78 discriminator 1
 346 01a8 7B68     		ldr	r3, [r7, #4]
 347 01aa DB68     		ldr	r3, [r3, #12]
 348              		.loc 1 295 57 discriminator 1
 349 01ac 012B     		cmp	r3, #1
 350 01ae 01D0     		beq	.L25
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 351              		.loc 1 297 16
 352 01b0 0123     		movs	r3, #1
 353 01b2 3CE2     		b	.L5
 354              	.L25:
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 355              		.loc 1 303 9
 356 01b4 3E4B     		ldr	r3, .L73+4
 357 01b6 1B68     		ldr	r3, [r3]
 358 01b8 23F0F802 		bic	r2, r3, #248
 359 01bc 7B68     		ldr	r3, [r7, #4]
 360 01be 1B69     		ldr	r3, [r3, #16]
 361 01c0 DB00     		lsls	r3, r3, #3
 362 01c2 3B49     		ldr	r1, .L73+4
 363 01c4 1343     		orrs	r3, r3, r2
 364 01c6 0B60     		str	r3, [r1]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 365              		.loc 1 295 9
 366 01c8 3AE0     		b	.L20
 367              	.L24:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
ARM GAS  /tmp/ccbSHBdX.s 			page 13


 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 368              		.loc 1 309 28
 369 01ca 7B68     		ldr	r3, [r7, #4]
 370 01cc DB68     		ldr	r3, [r3, #12]
 371              		.loc 1 309 9
 372 01ce 002B     		cmp	r3, #0
 373 01d0 20D0     		beq	.L26
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 374              		.loc 1 312 9
 375 01d2 384B     		ldr	r3, .L73+8
 376 01d4 0122     		movs	r2, #1
 377 01d6 1A60     		str	r2, [r3]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 378              		.loc 1 315 21
 379 01d8 FFF7FEFF 		bl	HAL_GetTick
 380 01dc 3861     		str	r0, [r7, #16]
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 381              		.loc 1 318 14
 382 01de 08E0     		b	.L27
 383              	.L28:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 384              		.loc 1 320 15
 385 01e0 FFF7FEFF 		bl	HAL_GetTick
 386 01e4 0246     		mov	r2, r0
 387              		.loc 1 320 29
 388 01e6 3B69     		ldr	r3, [r7, #16]
 389 01e8 D31A     		subs	r3, r2, r3
 390              		.loc 1 320 13
 391 01ea 022B     		cmp	r3, #2
 392 01ec 01D9     		bls	.L27
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 393              		.loc 1 322 20
 394 01ee 0323     		movs	r3, #3
 395 01f0 1DE2     		b	.L5
 396              	.L27:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 397              		.loc 1 318 15
 398 01f2 2F4B     		ldr	r3, .L73+4
 399 01f4 1B68     		ldr	r3, [r3]
 400 01f6 03F00203 		and	r3, r3, #2
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 401              		.loc 1 318 14
 402 01fa 002B     		cmp	r3, #0
 403 01fc F0D0     		beq	.L28
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
ARM GAS  /tmp/ccbSHBdX.s 			page 14


 404              		.loc 1 327 9
 405 01fe 2C4B     		ldr	r3, .L73+4
 406 0200 1B68     		ldr	r3, [r3]
 407 0202 23F0F802 		bic	r2, r3, #248
 408 0206 7B68     		ldr	r3, [r7, #4]
 409 0208 1B69     		ldr	r3, [r3, #16]
 410 020a DB00     		lsls	r3, r3, #3
 411 020c 2849     		ldr	r1, .L73+4
 412 020e 1343     		orrs	r3, r3, r2
 413 0210 0B60     		str	r3, [r1]
 414 0212 15E0     		b	.L20
 415              	.L26:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 416              		.loc 1 332 9
 417 0214 274B     		ldr	r3, .L73+8
 418 0216 0022     		movs	r2, #0
 419 0218 1A60     		str	r2, [r3]
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 420              		.loc 1 335 21
 421 021a FFF7FEFF 		bl	HAL_GetTick
 422 021e 3861     		str	r0, [r7, #16]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 423              		.loc 1 338 14
 424 0220 08E0     		b	.L29
 425              	.L30:
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 426              		.loc 1 340 15
 427 0222 FFF7FEFF 		bl	HAL_GetTick
 428 0226 0246     		mov	r2, r0
 429              		.loc 1 340 29
 430 0228 3B69     		ldr	r3, [r7, #16]
 431 022a D31A     		subs	r3, r2, r3
 432              		.loc 1 340 13
 433 022c 022B     		cmp	r3, #2
 434 022e 01D9     		bls	.L29
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 435              		.loc 1 342 20
 436 0230 0323     		movs	r3, #3
 437 0232 FCE1     		b	.L5
 438              	.L29:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 439              		.loc 1 338 15
 440 0234 1E4B     		ldr	r3, .L73+4
 441 0236 1B68     		ldr	r3, [r3]
 442 0238 03F00203 		and	r3, r3, #2
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 443              		.loc 1 338 14
ARM GAS  /tmp/ccbSHBdX.s 			page 15


 444 023c 002B     		cmp	r3, #0
 445 023e F0D1     		bne	.L30
 446              	.L20:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 447              		.loc 1 349 25
 448 0240 7B68     		ldr	r3, [r7, #4]
 449 0242 1B68     		ldr	r3, [r3]
 450              		.loc 1 349 43
 451 0244 03F00803 		and	r3, r3, #8
 452              		.loc 1 349 5
 453 0248 002B     		cmp	r3, #0
 454 024a 46D0     		beq	.L31
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 455              		.loc 1 352 5
 456 024c 7B68     		ldr	r3, [r7, #4]
 457 024e 5B69     		ldr	r3, [r3, #20]
 458 0250 002B     		cmp	r3, #0
 459 0252 08D0     		beq	.L32
 460              		.loc 1 352 5 is_stmt 0 discriminator 1
 461 0254 7B68     		ldr	r3, [r7, #4]
 462 0256 5B69     		ldr	r3, [r3, #20]
 463 0258 012B     		cmp	r3, #1
 464 025a 04D0     		beq	.L32
 465              		.loc 1 352 5 discriminator 2
 466 025c 4FF4B071 		mov	r1, #352
 467 0260 1248     		ldr	r0, .L73
 468 0262 FFF7FEFF 		bl	assert_failed
 469              	.L32:
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 470              		.loc 1 355 26 is_stmt 1
 471 0266 7B68     		ldr	r3, [r7, #4]
 472 0268 5B69     		ldr	r3, [r3, #20]
 473              		.loc 1 355 7
 474 026a 002B     		cmp	r3, #0
 475 026c 16D0     		beq	.L33
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 476              		.loc 1 358 7
 477 026e 124B     		ldr	r3, .L73+12
 478 0270 0122     		movs	r2, #1
 479 0272 1A60     		str	r2, [r3]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 480              		.loc 1 361 19
 481 0274 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccbSHBdX.s 			page 16


 482 0278 3861     		str	r0, [r7, #16]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 483              		.loc 1 364 12
 484 027a 08E0     		b	.L34
 485              	.L35:
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 486              		.loc 1 366 13
 487 027c FFF7FEFF 		bl	HAL_GetTick
 488 0280 0246     		mov	r2, r0
 489              		.loc 1 366 27
 490 0282 3B69     		ldr	r3, [r7, #16]
 491 0284 D31A     		subs	r3, r2, r3
 492              		.loc 1 366 11
 493 0286 022B     		cmp	r3, #2
 494 0288 01D9     		bls	.L34
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 495              		.loc 1 368 18
 496 028a 0323     		movs	r3, #3
 497 028c CFE1     		b	.L5
 498              	.L34:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 499              		.loc 1 364 13
 500 028e 084B     		ldr	r3, .L73+4
 501 0290 5B6F     		ldr	r3, [r3, #116]
 502 0292 03F00203 		and	r3, r3, #2
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 503              		.loc 1 364 12
 504 0296 002B     		cmp	r3, #0
 505 0298 F0D0     		beq	.L35
 506 029a 1EE0     		b	.L31
 507              	.L33:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 508              		.loc 1 375 7
 509 029c 064B     		ldr	r3, .L73+12
 510 029e 0022     		movs	r2, #0
 511 02a0 1A60     		str	r2, [r3]
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 512              		.loc 1 378 19
 513 02a2 FFF7FEFF 		bl	HAL_GetTick
 514 02a6 3861     		str	r0, [r7, #16]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 515              		.loc 1 381 12
 516 02a8 11E0     		b	.L36
ARM GAS  /tmp/ccbSHBdX.s 			page 17


 517              	.L74:
 518 02aa 00BF     		.align	2
 519              	.L73:
 520 02ac 00000000 		.word	.LC0
 521 02b0 00380240 		.word	1073887232
 522 02b4 00004742 		.word	1111949312
 523 02b8 800E4742 		.word	1111953024
 524              	.L37:
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 525              		.loc 1 383 13
 526 02bc FFF7FEFF 		bl	HAL_GetTick
 527 02c0 0246     		mov	r2, r0
 528              		.loc 1 383 27
 529 02c2 3B69     		ldr	r3, [r7, #16]
 530 02c4 D31A     		subs	r3, r2, r3
 531              		.loc 1 383 11
 532 02c6 022B     		cmp	r3, #2
 533 02c8 01D9     		bls	.L36
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 534              		.loc 1 385 18
 535 02ca 0323     		movs	r3, #3
 536 02cc AFE1     		b	.L5
 537              	.L36:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 538              		.loc 1 381 13
 539 02ce 974B     		ldr	r3, .L75
 540 02d0 5B6F     		ldr	r3, [r3, #116]
 541 02d2 03F00203 		and	r3, r3, #2
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 542              		.loc 1 381 12
 543 02d6 002B     		cmp	r3, #0
 544 02d8 F0D1     		bne	.L37
 545              	.L31:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 546              		.loc 1 391 25
 547 02da 7B68     		ldr	r3, [r7, #4]
 548 02dc 1B68     		ldr	r3, [r3]
 549              		.loc 1 391 43
 550 02de 03F00403 		and	r3, r3, #4
 551              		.loc 1 391 5
 552 02e2 002B     		cmp	r3, #0
 553 02e4 00F0A880 		beq	.L38
 554              	.LBB2:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 555              		.loc 1 393 22
 556 02e8 0023     		movs	r3, #0
 557 02ea FB75     		strb	r3, [r7, #23]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
ARM GAS  /tmp/ccbSHBdX.s 			page 18


 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 558              		.loc 1 396 5
 559 02ec 7B68     		ldr	r3, [r7, #4]
 560 02ee 9B68     		ldr	r3, [r3, #8]
 561 02f0 002B     		cmp	r3, #0
 562 02f2 0CD0     		beq	.L39
 563              		.loc 1 396 5 is_stmt 0 discriminator 1
 564 02f4 7B68     		ldr	r3, [r7, #4]
 565 02f6 9B68     		ldr	r3, [r3, #8]
 566 02f8 012B     		cmp	r3, #1
 567 02fa 08D0     		beq	.L39
 568              		.loc 1 396 5 discriminator 2
 569 02fc 7B68     		ldr	r3, [r7, #4]
 570 02fe 9B68     		ldr	r3, [r3, #8]
 571 0300 052B     		cmp	r3, #5
 572 0302 04D0     		beq	.L39
 573              		.loc 1 396 5 discriminator 3
 574 0304 4FF4C671 		mov	r1, #396
 575 0308 8948     		ldr	r0, .L75+4
 576 030a FFF7FEFF 		bl	assert_failed
 577              	.L39:
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 578              		.loc 1 400 8 is_stmt 1
 579 030e 874B     		ldr	r3, .L75
 580 0310 1B6C     		ldr	r3, [r3, #64]
 581 0312 03F08053 		and	r3, r3, #268435456
 582              		.loc 1 400 7
 583 0316 002B     		cmp	r3, #0
 584 0318 0FD1     		bne	.L40
 585              	.LBB3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 586              		.loc 1 402 7
 587 031a 0023     		movs	r3, #0
 588 031c BB60     		str	r3, [r7, #8]
 589 031e 834B     		ldr	r3, .L75
 590 0320 1B6C     		ldr	r3, [r3, #64]
 591 0322 824A     		ldr	r2, .L75
 592 0324 43F08053 		orr	r3, r3, #268435456
 593 0328 1364     		str	r3, [r2, #64]
 594 032a 804B     		ldr	r3, .L75
 595 032c 1B6C     		ldr	r3, [r3, #64]
 596 032e 03F08053 		and	r3, r3, #268435456
 597 0332 BB60     		str	r3, [r7, #8]
 598 0334 BB68     		ldr	r3, [r7, #8]
 599              	.LBE3:
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 600              		.loc 1 403 21
 601 0336 0123     		movs	r3, #1
 602 0338 FB75     		strb	r3, [r7, #23]
 603              	.L40:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
ARM GAS  /tmp/ccbSHBdX.s 			page 19


 604              		.loc 1 406 8
 605 033a 7E4B     		ldr	r3, .L75+8
 606 033c 1B68     		ldr	r3, [r3]
 607 033e 03F48073 		and	r3, r3, #256
 608              		.loc 1 406 7
 609 0342 002B     		cmp	r3, #0
 610 0344 18D1     		bne	.L41
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 611              		.loc 1 409 7
 612 0346 7B4B     		ldr	r3, .L75+8
 613 0348 1B68     		ldr	r3, [r3]
 614 034a 7A4A     		ldr	r2, .L75+8
 615 034c 43F48073 		orr	r3, r3, #256
 616 0350 1360     		str	r3, [r2]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 617              		.loc 1 412 19
 618 0352 FFF7FEFF 		bl	HAL_GetTick
 619 0356 3861     		str	r0, [r7, #16]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 620              		.loc 1 414 12
 621 0358 08E0     		b	.L42
 622              	.L43:
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 623              		.loc 1 416 13
 624 035a FFF7FEFF 		bl	HAL_GetTick
 625 035e 0246     		mov	r2, r0
 626              		.loc 1 416 27
 627 0360 3B69     		ldr	r3, [r7, #16]
 628 0362 D31A     		subs	r3, r2, r3
 629              		.loc 1 416 11
 630 0364 022B     		cmp	r3, #2
 631 0366 01D9     		bls	.L42
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 632              		.loc 1 418 18
 633 0368 0323     		movs	r3, #3
 634 036a 60E1     		b	.L5
 635              	.L42:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 636              		.loc 1 414 13
 637 036c 714B     		ldr	r3, .L75+8
 638 036e 1B68     		ldr	r3, [r3]
 639 0370 03F48073 		and	r3, r3, #256
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 640              		.loc 1 414 12
 641 0374 002B     		cmp	r3, #0
 642 0376 F0D0     		beq	.L43
 643              	.L41:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccbSHBdX.s 			page 20


 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 644              		.loc 1 424 5
 645 0378 7B68     		ldr	r3, [r7, #4]
 646 037a 9B68     		ldr	r3, [r3, #8]
 647 037c 012B     		cmp	r3, #1
 648 037e 06D1     		bne	.L44
 649              		.loc 1 424 5 is_stmt 0 discriminator 1
 650 0380 6A4B     		ldr	r3, .L75
 651 0382 1B6F     		ldr	r3, [r3, #112]
 652 0384 694A     		ldr	r2, .L75
 653 0386 43F00103 		orr	r3, r3, #1
 654 038a 1367     		str	r3, [r2, #112]
 655 038c 1CE0     		b	.L45
 656              	.L44:
 657              		.loc 1 424 5 discriminator 2
 658 038e 7B68     		ldr	r3, [r7, #4]
 659 0390 9B68     		ldr	r3, [r3, #8]
 660 0392 052B     		cmp	r3, #5
 661 0394 0CD1     		bne	.L46
 662              		.loc 1 424 5 discriminator 3
 663 0396 654B     		ldr	r3, .L75
 664 0398 1B6F     		ldr	r3, [r3, #112]
 665 039a 644A     		ldr	r2, .L75
 666 039c 43F00403 		orr	r3, r3, #4
 667 03a0 1367     		str	r3, [r2, #112]
 668 03a2 624B     		ldr	r3, .L75
 669 03a4 1B6F     		ldr	r3, [r3, #112]
 670 03a6 614A     		ldr	r2, .L75
 671 03a8 43F00103 		orr	r3, r3, #1
 672 03ac 1367     		str	r3, [r2, #112]
 673 03ae 0BE0     		b	.L45
 674              	.L46:
 675              		.loc 1 424 5 discriminator 4
 676 03b0 5E4B     		ldr	r3, .L75
 677 03b2 1B6F     		ldr	r3, [r3, #112]
 678 03b4 5D4A     		ldr	r2, .L75
 679 03b6 23F00103 		bic	r3, r3, #1
 680 03ba 1367     		str	r3, [r2, #112]
 681 03bc 5B4B     		ldr	r3, .L75
 682 03be 1B6F     		ldr	r3, [r3, #112]
 683 03c0 5A4A     		ldr	r2, .L75
 684 03c2 23F00403 		bic	r3, r3, #4
 685 03c6 1367     		str	r3, [r2, #112]
 686              	.L45:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 687              		.loc 1 426 26 is_stmt 1
 688 03c8 7B68     		ldr	r3, [r7, #4]
 689 03ca 9B68     		ldr	r3, [r3, #8]
 690              		.loc 1 426 7
 691 03cc 002B     		cmp	r3, #0
 692 03ce 15D0     		beq	.L47
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
ARM GAS  /tmp/ccbSHBdX.s 			page 21


 693              		.loc 1 429 19
 694 03d0 FFF7FEFF 		bl	HAL_GetTick
 695 03d4 3861     		str	r0, [r7, #16]
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 696              		.loc 1 432 12
 697 03d6 0AE0     		b	.L48
 698              	.L49:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 699              		.loc 1 434 13
 700 03d8 FFF7FEFF 		bl	HAL_GetTick
 701 03dc 0246     		mov	r2, r0
 702              		.loc 1 434 27
 703 03de 3B69     		ldr	r3, [r7, #16]
 704 03e0 D31A     		subs	r3, r2, r3
 705              		.loc 1 434 11
 706 03e2 41F28832 		movw	r2, #5000
 707 03e6 9342     		cmp	r3, r2
 708 03e8 01D9     		bls	.L48
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 709              		.loc 1 436 18
 710 03ea 0323     		movs	r3, #3
 711 03ec 1FE1     		b	.L5
 712              	.L48:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 713              		.loc 1 432 13
 714 03ee 4F4B     		ldr	r3, .L75
 715 03f0 1B6F     		ldr	r3, [r3, #112]
 716 03f2 03F00203 		and	r3, r3, #2
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 717              		.loc 1 432 12
 718 03f6 002B     		cmp	r3, #0
 719 03f8 EED0     		beq	.L49
 720 03fa 14E0     		b	.L50
 721              	.L47:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 722              		.loc 1 443 19
 723 03fc FFF7FEFF 		bl	HAL_GetTick
 724 0400 3861     		str	r0, [r7, #16]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 725              		.loc 1 446 12
 726 0402 0AE0     		b	.L51
 727              	.L52:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 728              		.loc 1 448 13
ARM GAS  /tmp/ccbSHBdX.s 			page 22


 729 0404 FFF7FEFF 		bl	HAL_GetTick
 730 0408 0246     		mov	r2, r0
 731              		.loc 1 448 27
 732 040a 3B69     		ldr	r3, [r7, #16]
 733 040c D31A     		subs	r3, r2, r3
 734              		.loc 1 448 11
 735 040e 41F28832 		movw	r2, #5000
 736 0412 9342     		cmp	r3, r2
 737 0414 01D9     		bls	.L51
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 738              		.loc 1 450 18
 739 0416 0323     		movs	r3, #3
 740 0418 09E1     		b	.L5
 741              	.L51:
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 742              		.loc 1 446 13
 743 041a 444B     		ldr	r3, .L75
 744 041c 1B6F     		ldr	r3, [r3, #112]
 745 041e 03F00203 		and	r3, r3, #2
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 746              		.loc 1 446 12
 747 0422 002B     		cmp	r3, #0
 748 0424 EED1     		bne	.L52
 749              	.L50:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 750              		.loc 1 456 7
 751 0426 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 752 0428 012B     		cmp	r3, #1
 753 042a 05D1     		bne	.L38
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 754              		.loc 1 458 7
 755 042c 3F4B     		ldr	r3, .L75
 756 042e 1B6C     		ldr	r3, [r3, #64]
 757 0430 3E4A     		ldr	r2, .L75
 758 0432 23F08053 		bic	r3, r3, #268435456
 759 0436 1364     		str	r3, [r2, #64]
 760              	.L38:
 761              	.LBE2:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 762              		.loc 1 463 3
 763 0438 7B68     		ldr	r3, [r7, #4]
 764 043a 9B69     		ldr	r3, [r3, #24]
 765 043c 002B     		cmp	r3, #0
 766 043e 0CD0     		beq	.L53
 767              		.loc 1 463 3 is_stmt 0 discriminator 1
 768 0440 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccbSHBdX.s 			page 23


 769 0442 9B69     		ldr	r3, [r3, #24]
 770 0444 012B     		cmp	r3, #1
 771 0446 08D0     		beq	.L53
 772              		.loc 1 463 3 discriminator 2
 773 0448 7B68     		ldr	r3, [r7, #4]
 774 044a 9B69     		ldr	r3, [r3, #24]
 775 044c 022B     		cmp	r3, #2
 776 044e 04D0     		beq	.L53
 777              		.loc 1 463 3 discriminator 3
 778 0450 40F2CF11 		movw	r1, #463
 779 0454 3648     		ldr	r0, .L75+4
 780 0456 FFF7FEFF 		bl	assert_failed
 781              	.L53:
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 782              		.loc 1 464 30 is_stmt 1
 783 045a 7B68     		ldr	r3, [r7, #4]
 784 045c 9B69     		ldr	r3, [r3, #24]
 785              		.loc 1 464 6
 786 045e 002B     		cmp	r3, #0
 787 0460 00F0E480 		beq	.L54
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 788              		.loc 1 467 8
 789 0464 314B     		ldr	r3, .L75
 790 0466 9B68     		ldr	r3, [r3, #8]
 791 0468 03F00C03 		and	r3, r3, #12
 792              		.loc 1 467 7
 793 046c 082B     		cmp	r3, #8
 794 046e 00F0AE80 		beq	.L55
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 795              		.loc 1 469 33
 796 0472 7B68     		ldr	r3, [r7, #4]
 797 0474 9B69     		ldr	r3, [r3, #24]
 798              		.loc 1 469 9
 799 0476 022B     		cmp	r3, #2
 800 0478 40F09280 		bne	.L56
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 801              		.loc 1 472 9
 802 047c 7B68     		ldr	r3, [r7, #4]
 803 047e DB69     		ldr	r3, [r3, #28]
 804 0480 002B     		cmp	r3, #0
 805 0482 09D0     		beq	.L57
 806              		.loc 1 472 9 is_stmt 0 discriminator 1
 807 0484 7B68     		ldr	r3, [r7, #4]
 808 0486 DB69     		ldr	r3, [r3, #28]
 809 0488 B3F5800F 		cmp	r3, #4194304
 810 048c 04D0     		beq	.L57
 811              		.loc 1 472 9 discriminator 2
 812 048e 4FF4EC71 		mov	r1, #472
 813 0492 2748     		ldr	r0, .L75+4
 814 0494 FFF7FEFF 		bl	assert_failed
 815              	.L57:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
ARM GAS  /tmp/ccbSHBdX.s 			page 24


 816              		.loc 1 473 9 is_stmt 1
 817 0498 7B68     		ldr	r3, [r7, #4]
 818 049a 1B6A     		ldr	r3, [r3, #32]
 819 049c 3F2B     		cmp	r3, #63
 820 049e 04D9     		bls	.L58
 821              		.loc 1 473 9 is_stmt 0 discriminator 1
 822 04a0 40F2D911 		movw	r1, #473
 823 04a4 2248     		ldr	r0, .L75+4
 824 04a6 FFF7FEFF 		bl	assert_failed
 825              	.L58:
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 826              		.loc 1 474 9 is_stmt 1
 827 04aa 7B68     		ldr	r3, [r7, #4]
 828 04ac 5B6A     		ldr	r3, [r3, #36]
 829 04ae 312B     		cmp	r3, #49
 830 04b0 04D9     		bls	.L59
 831              		.loc 1 474 9 is_stmt 0 discriminator 2
 832 04b2 7B68     		ldr	r3, [r7, #4]
 833 04b4 5B6A     		ldr	r3, [r3, #36]
 834 04b6 B3F5D87F 		cmp	r3, #432
 835 04ba 04D9     		bls	.L60
 836              	.L59:
 837              		.loc 1 474 9 discriminator 3
 838 04bc 4FF4ED71 		mov	r1, #474
 839 04c0 1B48     		ldr	r0, .L75+4
 840 04c2 FFF7FEFF 		bl	assert_failed
 841              	.L60:
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 842              		.loc 1 475 9 is_stmt 1
 843 04c6 7B68     		ldr	r3, [r7, #4]
 844 04c8 9B6A     		ldr	r3, [r3, #40]
 845 04ca 022B     		cmp	r3, #2
 846 04cc 10D0     		beq	.L61
 847              		.loc 1 475 9 is_stmt 0 discriminator 1
 848 04ce 7B68     		ldr	r3, [r7, #4]
 849 04d0 9B6A     		ldr	r3, [r3, #40]
 850 04d2 042B     		cmp	r3, #4
 851 04d4 0CD0     		beq	.L61
 852              		.loc 1 475 9 discriminator 2
 853 04d6 7B68     		ldr	r3, [r7, #4]
 854 04d8 9B6A     		ldr	r3, [r3, #40]
 855 04da 062B     		cmp	r3, #6
 856 04dc 08D0     		beq	.L61
 857              		.loc 1 475 9 discriminator 3
 858 04de 7B68     		ldr	r3, [r7, #4]
 859 04e0 9B6A     		ldr	r3, [r3, #40]
 860 04e2 082B     		cmp	r3, #8
 861 04e4 04D0     		beq	.L61
 862              		.loc 1 475 9 discriminator 4
 863 04e6 40F2DB11 		movw	r1, #475
 864 04ea 1148     		ldr	r0, .L75+4
 865 04ec FFF7FEFF 		bl	assert_failed
 866              	.L61:
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 867              		.loc 1 476 9 is_stmt 1
 868 04f0 7B68     		ldr	r3, [r7, #4]
 869 04f2 DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/ccbSHBdX.s 			page 25


 870 04f4 012B     		cmp	r3, #1
 871 04f6 03D9     		bls	.L62
 872              		.loc 1 476 9 is_stmt 0 discriminator 2
 873 04f8 7B68     		ldr	r3, [r7, #4]
 874 04fa DB6A     		ldr	r3, [r3, #44]
 875 04fc 0F2B     		cmp	r3, #15
 876 04fe 04D9     		bls	.L63
 877              	.L62:
 878              		.loc 1 476 9 discriminator 3
 879 0500 4FF4EE71 		mov	r1, #476
 880 0504 0A48     		ldr	r0, .L75+4
 881 0506 FFF7FEFF 		bl	assert_failed
 882              	.L63:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 883              		.loc 1 479 9 is_stmt 1
 884 050a 0B4B     		ldr	r3, .L75+12
 885 050c 0022     		movs	r2, #0
 886 050e 1A60     		str	r2, [r3]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 887              		.loc 1 482 21
 888 0510 FFF7FEFF 		bl	HAL_GetTick
 889 0514 3861     		str	r0, [r7, #16]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 890              		.loc 1 485 14
 891 0516 11E0     		b	.L64
 892              	.L65:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 893              		.loc 1 487 15
 894 0518 FFF7FEFF 		bl	HAL_GetTick
 895 051c 0246     		mov	r2, r0
 896              		.loc 1 487 29
 897 051e 3B69     		ldr	r3, [r7, #16]
 898 0520 D31A     		subs	r3, r2, r3
 899              		.loc 1 487 13
 900 0522 022B     		cmp	r3, #2
 901 0524 0AD9     		bls	.L64
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 902              		.loc 1 489 20
 903 0526 0323     		movs	r3, #3
 904 0528 81E0     		b	.L5
 905              	.L76:
 906 052a 00BF     		.align	2
 907              	.L75:
 908 052c 00380240 		.word	1073887232
 909 0530 00000000 		.word	.LC0
 910 0534 00700040 		.word	1073770496
 911 0538 60004742 		.word	1111949408
 912              	.L64:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccbSHBdX.s 			page 26


 913              		.loc 1 485 15
 914 053c 3E4B     		ldr	r3, .L77
 915 053e 1B68     		ldr	r3, [r3]
 916 0540 03F00073 		and	r3, r3, #33554432
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 917              		.loc 1 485 14
 918 0544 002B     		cmp	r3, #0
 919 0546 E7D1     		bne	.L65
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 920              		.loc 1 494 9
 921 0548 7B68     		ldr	r3, [r7, #4]
 922 054a DA69     		ldr	r2, [r3, #28]
 923 054c 7B68     		ldr	r3, [r7, #4]
 924 054e 1B6A     		ldr	r3, [r3, #32]
 925 0550 1A43     		orrs	r2, r2, r3
 926 0552 7B68     		ldr	r3, [r7, #4]
 927 0554 5B6A     		ldr	r3, [r3, #36]
 928 0556 9B01     		lsls	r3, r3, #6
 929 0558 1A43     		orrs	r2, r2, r3
 930 055a 7B68     		ldr	r3, [r7, #4]
 931 055c 9B6A     		ldr	r3, [r3, #40]
 932 055e 5B08     		lsrs	r3, r3, #1
 933 0560 013B     		subs	r3, r3, #1
 934 0562 1B04     		lsls	r3, r3, #16
 935 0564 1A43     		orrs	r2, r2, r3
 936 0566 7B68     		ldr	r3, [r7, #4]
 937 0568 DB6A     		ldr	r3, [r3, #44]
 938 056a 1B06     		lsls	r3, r3, #24
 939 056c 3249     		ldr	r1, .L77
 940 056e 1343     		orrs	r3, r3, r2
 941 0570 4B60     		str	r3, [r1, #4]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 942              		.loc 1 500 9
 943 0572 324B     		ldr	r3, .L77+4
 944 0574 0122     		movs	r2, #1
 945 0576 1A60     		str	r2, [r3]
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 946              		.loc 1 503 21
 947 0578 FFF7FEFF 		bl	HAL_GetTick
 948 057c 3861     		str	r0, [r7, #16]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 949              		.loc 1 506 14
 950 057e 08E0     		b	.L66
 951              	.L67:
ARM GAS  /tmp/ccbSHBdX.s 			page 27


 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 952              		.loc 1 508 15
 953 0580 FFF7FEFF 		bl	HAL_GetTick
 954 0584 0246     		mov	r2, r0
 955              		.loc 1 508 29
 956 0586 3B69     		ldr	r3, [r7, #16]
 957 0588 D31A     		subs	r3, r2, r3
 958              		.loc 1 508 13
 959 058a 022B     		cmp	r3, #2
 960 058c 01D9     		bls	.L66
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 961              		.loc 1 510 20
 962 058e 0323     		movs	r3, #3
 963 0590 4DE0     		b	.L5
 964              	.L66:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 965              		.loc 1 506 15
 966 0592 294B     		ldr	r3, .L77
 967 0594 1B68     		ldr	r3, [r3]
 968 0596 03F00073 		and	r3, r3, #33554432
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 969              		.loc 1 506 14
 970 059a 002B     		cmp	r3, #0
 971 059c F0D0     		beq	.L67
 972 059e 45E0     		b	.L54
 973              	.L56:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 974              		.loc 1 517 9
 975 05a0 264B     		ldr	r3, .L77+4
 976 05a2 0022     		movs	r2, #0
 977 05a4 1A60     		str	r2, [r3]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 978              		.loc 1 520 21
 979 05a6 FFF7FEFF 		bl	HAL_GetTick
 980 05aa 3861     		str	r0, [r7, #16]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 981              		.loc 1 523 14
 982 05ac 08E0     		b	.L68
 983              	.L69:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 984              		.loc 1 525 15
 985 05ae FFF7FEFF 		bl	HAL_GetTick
 986 05b2 0246     		mov	r2, r0
 987              		.loc 1 525 29
ARM GAS  /tmp/ccbSHBdX.s 			page 28


 988 05b4 3B69     		ldr	r3, [r7, #16]
 989 05b6 D31A     		subs	r3, r2, r3
 990              		.loc 1 525 13
 991 05b8 022B     		cmp	r3, #2
 992 05ba 01D9     		bls	.L68
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 993              		.loc 1 527 20
 994 05bc 0323     		movs	r3, #3
 995 05be 36E0     		b	.L5
 996              	.L68:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 997              		.loc 1 523 15
 998 05c0 1D4B     		ldr	r3, .L77
 999 05c2 1B68     		ldr	r3, [r3]
 1000 05c4 03F00073 		and	r3, r3, #33554432
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1001              		.loc 1 523 14
 1002 05c8 002B     		cmp	r3, #0
 1003 05ca F0D1     		bne	.L69
 1004 05cc 2EE0     		b	.L54
 1005              	.L55:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1006              		.loc 1 535 33
 1007 05ce 7B68     		ldr	r3, [r7, #4]
 1008 05d0 9B69     		ldr	r3, [r3, #24]
 1009              		.loc 1 535 9
 1010 05d2 012B     		cmp	r3, #1
 1011 05d4 01D1     		bne	.L70
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1012              		.loc 1 537 16
 1013 05d6 0123     		movs	r3, #1
 1014 05d8 29E0     		b	.L5
 1015              	.L70:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 1016              		.loc 1 542 25
 1017 05da 174B     		ldr	r3, .L77
 1018              		.loc 1 542 20
 1019 05dc 5B68     		ldr	r3, [r3, #4]
 1020 05de FB60     		str	r3, [r7, #12]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1021              		.loc 1 543 13
 1022 05e0 FB68     		ldr	r3, [r7, #12]
 1023 05e2 03F48002 		and	r2, r3, #4194304
 1024              		.loc 1 543 79
ARM GAS  /tmp/ccbSHBdX.s 			page 29


 1025 05e6 7B68     		ldr	r3, [r7, #4]
 1026 05e8 DB69     		ldr	r3, [r3, #28]
 1027              		.loc 1 543 11
 1028 05ea 9A42     		cmp	r2, r3
 1029 05ec 1CD1     		bne	.L71
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1030              		.loc 1 544 13 discriminator 1
 1031 05ee FB68     		ldr	r3, [r7, #12]
 1032 05f0 03F03F02 		and	r2, r3, #63
 1033              		.loc 1 544 77 discriminator 1
 1034 05f4 7B68     		ldr	r3, [r7, #4]
 1035 05f6 1B6A     		ldr	r3, [r3, #32]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1036              		.loc 1 543 91 discriminator 1
 1037 05f8 9A42     		cmp	r2, r3
 1038 05fa 15D1     		bne	.L71
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 1039              		.loc 1 545 13
 1040 05fc FA68     		ldr	r2, [r7, #12]
 1041 05fe 47F6C073 		movw	r3, #32704
 1042 0602 1340     		ands	r3, r3, r2
 1043              		.loc 1 545 77
 1044 0604 7A68     		ldr	r2, [r7, #4]
 1045 0606 526A     		ldr	r2, [r2, #36]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1046              		.loc 1 544 84
 1047 0608 9342     		cmp	r3, r2
 1048 060a 0DD1     		bne	.L71
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1049              		.loc 1 546 13
 1050 060c FB68     		ldr	r3, [r7, #12]
 1051 060e 03F44032 		and	r2, r3, #196608
 1052              		.loc 1 546 77
 1053 0612 7B68     		ldr	r3, [r7, #4]
 1054 0614 9B6A     		ldr	r3, [r3, #40]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 1055              		.loc 1 545 84
 1056 0616 9A42     		cmp	r2, r3
 1057 0618 06D1     		bne	.L71
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1058              		.loc 1 547 13
 1059 061a FB68     		ldr	r3, [r7, #12]
 1060 061c 03F07062 		and	r2, r3, #251658240
 1061              		.loc 1 547 77
 1062 0620 7B68     		ldr	r3, [r7, #4]
 1063 0622 DB6A     		ldr	r3, [r3, #44]
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1064              		.loc 1 546 84
 1065 0624 9A42     		cmp	r2, r3
 1066 0626 01D0     		beq	.L54
 1067              	.L71:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1068              		.loc 1 549 18
 1069 0628 0123     		movs	r3, #1
 1070 062a 00E0     		b	.L5
 1071              	.L54:
ARM GAS  /tmp/ccbSHBdX.s 			page 30


 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1072              		.loc 1 554 10
 1073 062c 0023     		movs	r3, #0
 1074              	.L5:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1075              		.loc 1 555 1
 1076 062e 1846     		mov	r0, r3
 1077 0630 1837     		adds	r7, r7, #24
 1078              	.LCFI7:
 1079              		.cfi_def_cfa_offset 8
 1080 0632 BD46     		mov	sp, r7
 1081              	.LCFI8:
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 0634 80BD     		pop	{r7, pc}
 1085              	.L78:
 1086 0636 00BF     		.align	2
 1087              	.L77:
 1088 0638 00380240 		.word	1073887232
 1089 063c 60004742 		.word	1111949408
 1090              		.cfi_endproc
 1091              	.LFE131:
 1093              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1094              		.align	1
 1095              		.global	HAL_RCC_ClockConfig
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv4-sp-d16
 1101              	HAL_RCC_ClockConfig:
 1102              	.LFB132:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
ARM GAS  /tmp/ccbSHBdX.s 			page 31


 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1103              		.loc 1 583 1
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 16
 1106              		@ frame_needed = 1, uses_anonymous_args = 0
 1107 0000 80B5     		push	{r7, lr}
 1108              	.LCFI9:
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 84B0     		sub	sp, sp, #16
 1113              	.LCFI10:
 1114              		.cfi_def_cfa_offset 24
 1115 0004 00AF     		add	r7, sp, #0
 1116              	.LCFI11:
 1117              		.cfi_def_cfa_register 7
 1118 0006 7860     		str	r0, [r7, #4]
 1119 0008 3960     		str	r1, [r7]
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1120              		.loc 1 587 5
 1121 000a 7B68     		ldr	r3, [r7, #4]
 1122 000c 002B     		cmp	r3, #0
 1123 000e 01D1     		bne	.L80
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 1124              		.loc 1 589 12
 1125 0010 0123     		movs	r3, #1
 1126 0012 74E1     		b	.L81
 1127              	.L80:
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1128              		.loc 1 593 3
 1129 0014 7B68     		ldr	r3, [r7, #4]
 1130 0016 1B68     		ldr	r3, [r3]
 1131 0018 002B     		cmp	r3, #0
 1132 001a 03D0     		beq	.L82
 1133              		.loc 1 593 3 is_stmt 0 discriminator 2
 1134 001c 7B68     		ldr	r3, [r7, #4]
 1135 001e 1B68     		ldr	r3, [r3]
 1136 0020 0F2B     		cmp	r3, #15
 1137 0022 04D9     		bls	.L83
 1138              	.L82:
 1139              		.loc 1 593 3 discriminator 3
 1140 0024 40F25121 		movw	r1, #593
 1141 0028 7B48     		ldr	r0, .L104
 1142 002a FFF7FEFF 		bl	assert_failed
 1143              	.L83:
ARM GAS  /tmp/ccbSHBdX.s 			page 32


 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1144              		.loc 1 594 3 is_stmt 1
 1145 002e 3B68     		ldr	r3, [r7]
 1146 0030 002B     		cmp	r3, #0
 1147 0032 19D0     		beq	.L84
 1148              		.loc 1 594 3 is_stmt 0 discriminator 1
 1149 0034 3B68     		ldr	r3, [r7]
 1150 0036 012B     		cmp	r3, #1
 1151 0038 16D0     		beq	.L84
 1152              		.loc 1 594 3 discriminator 2
 1153 003a 3B68     		ldr	r3, [r7]
 1154 003c 022B     		cmp	r3, #2
 1155 003e 13D0     		beq	.L84
 1156              		.loc 1 594 3 discriminator 3
 1157 0040 3B68     		ldr	r3, [r7]
 1158 0042 032B     		cmp	r3, #3
 1159 0044 10D0     		beq	.L84
 1160              		.loc 1 594 3 discriminator 4
 1161 0046 3B68     		ldr	r3, [r7]
 1162 0048 042B     		cmp	r3, #4
 1163 004a 0DD0     		beq	.L84
 1164              		.loc 1 594 3 discriminator 5
 1165 004c 3B68     		ldr	r3, [r7]
 1166 004e 052B     		cmp	r3, #5
 1167 0050 0AD0     		beq	.L84
 1168              		.loc 1 594 3 discriminator 6
 1169 0052 3B68     		ldr	r3, [r7]
 1170 0054 062B     		cmp	r3, #6
 1171 0056 07D0     		beq	.L84
 1172              		.loc 1 594 3 discriminator 7
 1173 0058 3B68     		ldr	r3, [r7]
 1174 005a 072B     		cmp	r3, #7
 1175 005c 04D0     		beq	.L84
 1176              		.loc 1 594 3 discriminator 8
 1177 005e 40F25221 		movw	r1, #594
 1178 0062 6D48     		ldr	r0, .L104
 1179 0064 FFF7FEFF 		bl	assert_failed
 1180              	.L84:
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1181              		.loc 1 601 17 is_stmt 1
 1182 0068 6C4B     		ldr	r3, .L104+4
 1183 006a 1B68     		ldr	r3, [r3]
 1184 006c 03F00F03 		and	r3, r3, #15
 1185              		.loc 1 601 5
 1186 0070 3A68     		ldr	r2, [r7]
 1187 0072 9A42     		cmp	r2, r3
 1188 0074 0CD9     		bls	.L85
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1189              		.loc 1 604 5
ARM GAS  /tmp/ccbSHBdX.s 			page 33


 1190 0076 694B     		ldr	r3, .L104+4
 1191 0078 3A68     		ldr	r2, [r7]
 1192 007a D2B2     		uxtb	r2, r2
 1193 007c 1A70     		strb	r2, [r3]
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1194              		.loc 1 608 8
 1195 007e 674B     		ldr	r3, .L104+4
 1196 0080 1B68     		ldr	r3, [r3]
 1197 0082 03F00F03 		and	r3, r3, #15
 1198              		.loc 1 608 7
 1199 0086 3A68     		ldr	r2, [r7]
 1200 0088 9A42     		cmp	r2, r3
 1201 008a 01D0     		beq	.L85
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1202              		.loc 1 610 14
 1203 008c 0123     		movs	r3, #1
 1204 008e 36E1     		b	.L81
 1205              	.L85:
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1206              		.loc 1 615 25
 1207 0090 7B68     		ldr	r3, [r7, #4]
 1208 0092 1B68     		ldr	r3, [r3]
 1209              		.loc 1 615 38
 1210 0094 03F00203 		and	r3, r3, #2
 1211              		.loc 1 615 5
 1212 0098 002B     		cmp	r3, #0
 1213 009a 49D0     		beq	.L86
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1214              		.loc 1 619 27
 1215 009c 7B68     		ldr	r3, [r7, #4]
 1216 009e 1B68     		ldr	r3, [r3]
 1217              		.loc 1 619 40
 1218 00a0 03F00403 		and	r3, r3, #4
 1219              		.loc 1 619 7
 1220 00a4 002B     		cmp	r3, #0
 1221 00a6 05D0     		beq	.L87
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1222              		.loc 1 621 7
 1223 00a8 5D4B     		ldr	r3, .L104+8
 1224 00aa 9B68     		ldr	r3, [r3, #8]
 1225 00ac 5C4A     		ldr	r2, .L104+8
 1226 00ae 43F4E053 		orr	r3, r3, #7168
 1227 00b2 9360     		str	r3, [r2, #8]
 1228              	.L87:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccbSHBdX.s 			page 34


 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1229              		.loc 1 624 27
 1230 00b4 7B68     		ldr	r3, [r7, #4]
 1231 00b6 1B68     		ldr	r3, [r3]
 1232              		.loc 1 624 40
 1233 00b8 03F00803 		and	r3, r3, #8
 1234              		.loc 1 624 7
 1235 00bc 002B     		cmp	r3, #0
 1236 00be 05D0     		beq	.L88
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 1237              		.loc 1 626 7
 1238 00c0 574B     		ldr	r3, .L104+8
 1239 00c2 9B68     		ldr	r3, [r3, #8]
 1240 00c4 564A     		ldr	r2, .L104+8
 1241 00c6 43F46043 		orr	r3, r3, #57344
 1242 00ca 9360     		str	r3, [r2, #8]
 1243              	.L88:
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 1244              		.loc 1 629 5
 1245 00cc 7B68     		ldr	r3, [r7, #4]
 1246 00ce 9B68     		ldr	r3, [r3, #8]
 1247 00d0 002B     		cmp	r3, #0
 1248 00d2 24D0     		beq	.L89
 1249              		.loc 1 629 5 is_stmt 0 discriminator 1
 1250 00d4 7B68     		ldr	r3, [r7, #4]
 1251 00d6 9B68     		ldr	r3, [r3, #8]
 1252 00d8 802B     		cmp	r3, #128
 1253 00da 20D0     		beq	.L89
 1254              		.loc 1 629 5 discriminator 2
 1255 00dc 7B68     		ldr	r3, [r7, #4]
 1256 00de 9B68     		ldr	r3, [r3, #8]
 1257 00e0 902B     		cmp	r3, #144
 1258 00e2 1CD0     		beq	.L89
 1259              		.loc 1 629 5 discriminator 3
 1260 00e4 7B68     		ldr	r3, [r7, #4]
 1261 00e6 9B68     		ldr	r3, [r3, #8]
 1262 00e8 A02B     		cmp	r3, #160
 1263 00ea 18D0     		beq	.L89
 1264              		.loc 1 629 5 discriminator 4
 1265 00ec 7B68     		ldr	r3, [r7, #4]
 1266 00ee 9B68     		ldr	r3, [r3, #8]
 1267 00f0 B02B     		cmp	r3, #176
 1268 00f2 14D0     		beq	.L89
 1269              		.loc 1 629 5 discriminator 5
 1270 00f4 7B68     		ldr	r3, [r7, #4]
 1271 00f6 9B68     		ldr	r3, [r3, #8]
 1272 00f8 C02B     		cmp	r3, #192
 1273 00fa 10D0     		beq	.L89
 1274              		.loc 1 629 5 discriminator 6
 1275 00fc 7B68     		ldr	r3, [r7, #4]
 1276 00fe 9B68     		ldr	r3, [r3, #8]
 1277 0100 D02B     		cmp	r3, #208
 1278 0102 0CD0     		beq	.L89
ARM GAS  /tmp/ccbSHBdX.s 			page 35


 1279              		.loc 1 629 5 discriminator 7
 1280 0104 7B68     		ldr	r3, [r7, #4]
 1281 0106 9B68     		ldr	r3, [r3, #8]
 1282 0108 E02B     		cmp	r3, #224
 1283 010a 08D0     		beq	.L89
 1284              		.loc 1 629 5 discriminator 8
 1285 010c 7B68     		ldr	r3, [r7, #4]
 1286 010e 9B68     		ldr	r3, [r3, #8]
 1287 0110 F02B     		cmp	r3, #240
 1288 0112 04D0     		beq	.L89
 1289              		.loc 1 629 5 discriminator 9
 1290 0114 40F27521 		movw	r1, #629
 1291 0118 3F48     		ldr	r0, .L104
 1292 011a FFF7FEFF 		bl	assert_failed
 1293              	.L89:
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1294              		.loc 1 630 5 is_stmt 1
 1295 011e 404B     		ldr	r3, .L104+8
 1296 0120 9B68     		ldr	r3, [r3, #8]
 1297 0122 23F0F002 		bic	r2, r3, #240
 1298 0126 7B68     		ldr	r3, [r7, #4]
 1299 0128 9B68     		ldr	r3, [r3, #8]
 1300 012a 3D49     		ldr	r1, .L104+8
 1301 012c 1343     		orrs	r3, r3, r2
 1302 012e 8B60     		str	r3, [r1, #8]
 1303              	.L86:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1304              		.loc 1 634 25
 1305 0130 7B68     		ldr	r3, [r7, #4]
 1306 0132 1B68     		ldr	r3, [r3]
 1307              		.loc 1 634 38
 1308 0134 03F00103 		and	r3, r3, #1
 1309              		.loc 1 634 5
 1310 0138 002B     		cmp	r3, #0
 1311 013a 59D0     		beq	.L90
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 1312              		.loc 1 636 5
 1313 013c 7B68     		ldr	r3, [r7, #4]
 1314 013e 5B68     		ldr	r3, [r3, #4]
 1315 0140 002B     		cmp	r3, #0
 1316 0142 10D0     		beq	.L91
 1317              		.loc 1 636 5 is_stmt 0 discriminator 1
 1318 0144 7B68     		ldr	r3, [r7, #4]
 1319 0146 5B68     		ldr	r3, [r3, #4]
 1320 0148 012B     		cmp	r3, #1
 1321 014a 0CD0     		beq	.L91
 1322              		.loc 1 636 5 discriminator 2
 1323 014c 7B68     		ldr	r3, [r7, #4]
 1324 014e 5B68     		ldr	r3, [r3, #4]
 1325 0150 022B     		cmp	r3, #2
 1326 0152 08D0     		beq	.L91
 1327              		.loc 1 636 5 discriminator 3
 1328 0154 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccbSHBdX.s 			page 36


 1329 0156 5B68     		ldr	r3, [r3, #4]
 1330 0158 032B     		cmp	r3, #3
 1331 015a 04D0     		beq	.L91
 1332              		.loc 1 636 5 discriminator 4
 1333 015c 4FF41F71 		mov	r1, #636
 1334 0160 2D48     		ldr	r0, .L104
 1335 0162 FFF7FEFF 		bl	assert_failed
 1336              	.L91:
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1337              		.loc 1 639 25 is_stmt 1
 1338 0166 7B68     		ldr	r3, [r7, #4]
 1339 0168 5B68     		ldr	r3, [r3, #4]
 1340              		.loc 1 639 7
 1341 016a 012B     		cmp	r3, #1
 1342 016c 07D1     		bne	.L92
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1343              		.loc 1 642 10
 1344 016e 2C4B     		ldr	r3, .L104+8
 1345 0170 1B68     		ldr	r3, [r3]
 1346 0172 03F40033 		and	r3, r3, #131072
 1347              		.loc 1 642 9
 1348 0176 002B     		cmp	r3, #0
 1349 0178 19D1     		bne	.L93
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1350              		.loc 1 644 16
 1351 017a 0123     		movs	r3, #1
 1352 017c BFE0     		b	.L81
 1353              	.L92:
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 1354              		.loc 1 648 31
 1355 017e 7B68     		ldr	r3, [r7, #4]
 1356 0180 5B68     		ldr	r3, [r3, #4]
 1357              		.loc 1 648 12
 1358 0182 022B     		cmp	r3, #2
 1359 0184 03D0     		beq	.L94
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1360              		.loc 1 649 31 discriminator 1
 1361 0186 7B68     		ldr	r3, [r7, #4]
 1362 0188 5B68     		ldr	r3, [r3, #4]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1363              		.loc 1 648 76 discriminator 1
 1364 018a 032B     		cmp	r3, #3
 1365 018c 07D1     		bne	.L95
 1366              	.L94:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1367              		.loc 1 652 10
 1368 018e 244B     		ldr	r3, .L104+8
ARM GAS  /tmp/ccbSHBdX.s 			page 37


 1369 0190 1B68     		ldr	r3, [r3]
 1370 0192 03F00073 		and	r3, r3, #33554432
 1371              		.loc 1 652 9
 1372 0196 002B     		cmp	r3, #0
 1373 0198 09D1     		bne	.L93
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1374              		.loc 1 654 16
 1375 019a 0123     		movs	r3, #1
 1376 019c AFE0     		b	.L81
 1377              	.L95:
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1378              		.loc 1 661 10
 1379 019e 204B     		ldr	r3, .L104+8
 1380 01a0 1B68     		ldr	r3, [r3]
 1381 01a2 03F00203 		and	r3, r3, #2
 1382              		.loc 1 661 9
 1383 01a6 002B     		cmp	r3, #0
 1384 01a8 01D1     		bne	.L93
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1385              		.loc 1 663 16
 1386 01aa 0123     		movs	r3, #1
 1387 01ac A7E0     		b	.L81
 1388              	.L93:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1389              		.loc 1 667 5
 1390 01ae 1C4B     		ldr	r3, .L104+8
 1391 01b0 9B68     		ldr	r3, [r3, #8]
 1392 01b2 23F00302 		bic	r2, r3, #3
 1393 01b6 7B68     		ldr	r3, [r7, #4]
 1394 01b8 5B68     		ldr	r3, [r3, #4]
 1395 01ba 1949     		ldr	r1, .L104+8
 1396 01bc 1343     		orrs	r3, r3, r2
 1397 01be 8B60     		str	r3, [r1, #8]
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1398              		.loc 1 670 17
 1399 01c0 FFF7FEFF 		bl	HAL_GetTick
 1400 01c4 F860     		str	r0, [r7, #12]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1401              		.loc 1 672 11
 1402 01c6 0AE0     		b	.L97
 1403              	.L98:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
ARM GAS  /tmp/ccbSHBdX.s 			page 38


 1404              		.loc 1 674 12
 1405 01c8 FFF7FEFF 		bl	HAL_GetTick
 1406 01cc 0246     		mov	r2, r0
 1407              		.loc 1 674 26
 1408 01ce FB68     		ldr	r3, [r7, #12]
 1409 01d0 D31A     		subs	r3, r2, r3
 1410              		.loc 1 674 10
 1411 01d2 41F28832 		movw	r2, #5000
 1412 01d6 9342     		cmp	r3, r2
 1413 01d8 01D9     		bls	.L97
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1414              		.loc 1 676 16
 1415 01da 0323     		movs	r3, #3
 1416 01dc 8FE0     		b	.L81
 1417              	.L97:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1418              		.loc 1 672 12
 1419 01de 104B     		ldr	r3, .L104+8
 1420 01e0 9B68     		ldr	r3, [r3, #8]
 1421 01e2 03F00C02 		and	r2, r3, #12
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1422              		.loc 1 672 63
 1423 01e6 7B68     		ldr	r3, [r7, #4]
 1424 01e8 5B68     		ldr	r3, [r3, #4]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1425              		.loc 1 672 78
 1426 01ea 9B00     		lsls	r3, r3, #2
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1427              		.loc 1 672 11
 1428 01ec 9A42     		cmp	r2, r3
 1429 01ee EBD1     		bne	.L98
 1430              	.L90:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1431              		.loc 1 682 17
 1432 01f0 0A4B     		ldr	r3, .L104+4
 1433 01f2 1B68     		ldr	r3, [r3]
 1434 01f4 03F00F03 		and	r3, r3, #15
 1435              		.loc 1 682 5
 1436 01f8 3A68     		ldr	r2, [r7]
 1437 01fa 9A42     		cmp	r2, r3
 1438 01fc 12D2     		bcs	.L99
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1439              		.loc 1 685 5
 1440 01fe 074B     		ldr	r3, .L104+4
 1441 0200 3A68     		ldr	r2, [r7]
 1442 0202 D2B2     		uxtb	r2, r2
 1443 0204 1A70     		strb	r2, [r3]
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
ARM GAS  /tmp/ccbSHBdX.s 			page 39


 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1444              		.loc 1 689 8
 1445 0206 054B     		ldr	r3, .L104+4
 1446 0208 1B68     		ldr	r3, [r3]
 1447 020a 03F00F03 		and	r3, r3, #15
 1448              		.loc 1 689 7
 1449 020e 3A68     		ldr	r2, [r7]
 1450 0210 9A42     		cmp	r2, r3
 1451 0212 07D0     		beq	.L99
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1452              		.loc 1 691 14
 1453 0214 0123     		movs	r3, #1
 1454 0216 72E0     		b	.L81
 1455              	.L105:
 1456              		.align	2
 1457              	.L104:
 1458 0218 00000000 		.word	.LC0
 1459 021c 003C0240 		.word	1073888256
 1460 0220 00380240 		.word	1073887232
 1461              	.L99:
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1462              		.loc 1 696 25
 1463 0224 7B68     		ldr	r3, [r7, #4]
 1464 0226 1B68     		ldr	r3, [r3]
 1465              		.loc 1 696 38
 1466 0228 03F00403 		and	r3, r3, #4
 1467              		.loc 1 696 5
 1468 022c 002B     		cmp	r3, #0
 1469 022e 25D0     		beq	.L100
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 1470              		.loc 1 698 5
 1471 0230 7B68     		ldr	r3, [r7, #4]
 1472 0232 DB68     		ldr	r3, [r3, #12]
 1473 0234 002B     		cmp	r3, #0
 1474 0236 18D0     		beq	.L101
 1475              		.loc 1 698 5 is_stmt 0 discriminator 1
 1476 0238 7B68     		ldr	r3, [r7, #4]
 1477 023a DB68     		ldr	r3, [r3, #12]
 1478 023c B3F5805F 		cmp	r3, #4096
 1479 0240 13D0     		beq	.L101
 1480              		.loc 1 698 5 discriminator 2
 1481 0242 7B68     		ldr	r3, [r7, #4]
 1482 0244 DB68     		ldr	r3, [r3, #12]
 1483 0246 B3F5A05F 		cmp	r3, #5120
 1484 024a 0ED0     		beq	.L101
 1485              		.loc 1 698 5 discriminator 3
 1486 024c 7B68     		ldr	r3, [r7, #4]
 1487 024e DB68     		ldr	r3, [r3, #12]
 1488 0250 B3F5C05F 		cmp	r3, #6144
 1489 0254 09D0     		beq	.L101
ARM GAS  /tmp/ccbSHBdX.s 			page 40


 1490              		.loc 1 698 5 discriminator 4
 1491 0256 7B68     		ldr	r3, [r7, #4]
 1492 0258 DB68     		ldr	r3, [r3, #12]
 1493 025a B3F5E05F 		cmp	r3, #7168
 1494 025e 04D0     		beq	.L101
 1495              		.loc 1 698 5 discriminator 5
 1496 0260 40F2BA21 		movw	r1, #698
 1497 0264 2848     		ldr	r0, .L106
 1498 0266 FFF7FEFF 		bl	assert_failed
 1499              	.L101:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1500              		.loc 1 699 5 is_stmt 1
 1501 026a 284B     		ldr	r3, .L106+4
 1502 026c 9B68     		ldr	r3, [r3, #8]
 1503 026e 23F4E052 		bic	r2, r3, #7168
 1504 0272 7B68     		ldr	r3, [r7, #4]
 1505 0274 DB68     		ldr	r3, [r3, #12]
 1506 0276 2549     		ldr	r1, .L106+4
 1507 0278 1343     		orrs	r3, r3, r2
 1508 027a 8B60     		str	r3, [r1, #8]
 1509              	.L100:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1510              		.loc 1 703 25
 1511 027c 7B68     		ldr	r3, [r7, #4]
 1512 027e 1B68     		ldr	r3, [r3]
 1513              		.loc 1 703 38
 1514 0280 03F00803 		and	r3, r3, #8
 1515              		.loc 1 703 5
 1516 0284 002B     		cmp	r3, #0
 1517 0286 26D0     		beq	.L102
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 1518              		.loc 1 705 5
 1519 0288 7B68     		ldr	r3, [r7, #4]
 1520 028a 1B69     		ldr	r3, [r3, #16]
 1521 028c 002B     		cmp	r3, #0
 1522 028e 18D0     		beq	.L103
 1523              		.loc 1 705 5 is_stmt 0 discriminator 1
 1524 0290 7B68     		ldr	r3, [r7, #4]
 1525 0292 1B69     		ldr	r3, [r3, #16]
 1526 0294 B3F5805F 		cmp	r3, #4096
 1527 0298 13D0     		beq	.L103
 1528              		.loc 1 705 5 discriminator 2
 1529 029a 7B68     		ldr	r3, [r7, #4]
 1530 029c 1B69     		ldr	r3, [r3, #16]
 1531 029e B3F5A05F 		cmp	r3, #5120
 1532 02a2 0ED0     		beq	.L103
 1533              		.loc 1 705 5 discriminator 3
 1534 02a4 7B68     		ldr	r3, [r7, #4]
 1535 02a6 1B69     		ldr	r3, [r3, #16]
 1536 02a8 B3F5C05F 		cmp	r3, #6144
 1537 02ac 09D0     		beq	.L103
 1538              		.loc 1 705 5 discriminator 4
 1539 02ae 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccbSHBdX.s 			page 41


 1540 02b0 1B69     		ldr	r3, [r3, #16]
 1541 02b2 B3F5E05F 		cmp	r3, #7168
 1542 02b6 04D0     		beq	.L103
 1543              		.loc 1 705 5 discriminator 5
 1544 02b8 40F2C121 		movw	r1, #705
 1545 02bc 1248     		ldr	r0, .L106
 1546 02be FFF7FEFF 		bl	assert_failed
 1547              	.L103:
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1548              		.loc 1 706 5 is_stmt 1
 1549 02c2 124B     		ldr	r3, .L106+4
 1550 02c4 9B68     		ldr	r3, [r3, #8]
 1551 02c6 23F46042 		bic	r2, r3, #57344
 1552 02ca 7B68     		ldr	r3, [r7, #4]
 1553 02cc 1B69     		ldr	r3, [r3, #16]
 1554 02ce DB00     		lsls	r3, r3, #3
 1555 02d0 0E49     		ldr	r1, .L106+4
 1556 02d2 1343     		orrs	r3, r3, r2
 1557 02d4 8B60     		str	r3, [r1, #8]
 1558              	.L102:
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1559              		.loc 1 710 21
 1560 02d6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1561 02da 0246     		mov	r2, r0
 1562              		.loc 1 710 68
 1563 02dc 0B4B     		ldr	r3, .L106+4
 1564 02de 9B68     		ldr	r3, [r3, #8]
 1565              		.loc 1 710 91
 1566 02e0 1B09     		lsrs	r3, r3, #4
 1567 02e2 03F00F03 		and	r3, r3, #15
 1568              		.loc 1 710 63
 1569 02e6 0A49     		ldr	r1, .L106+8
 1570 02e8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1571              		.loc 1 710 47
 1572 02ea 22FA03F3 		lsr	r3, r2, r3
 1573              		.loc 1 710 19
 1574 02ee 094A     		ldr	r2, .L106+12
 1575 02f0 1360     		str	r3, [r2]
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 1576              		.loc 1 713 3
 1577 02f2 094B     		ldr	r3, .L106+16
 1578 02f4 1B68     		ldr	r3, [r3]
 1579 02f6 1846     		mov	r0, r3
 1580 02f8 FFF7FEFF 		bl	HAL_InitTick
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1581              		.loc 1 715 10
 1582 02fc 0023     		movs	r3, #0
 1583              	.L81:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1584              		.loc 1 716 1
 1585 02fe 1846     		mov	r0, r3
ARM GAS  /tmp/ccbSHBdX.s 			page 42


 1586 0300 1037     		adds	r7, r7, #16
 1587              	.LCFI12:
 1588              		.cfi_def_cfa_offset 8
 1589 0302 BD46     		mov	sp, r7
 1590              	.LCFI13:
 1591              		.cfi_def_cfa_register 13
 1592              		@ sp needed
 1593 0304 80BD     		pop	{r7, pc}
 1594              	.L107:
 1595 0306 00BF     		.align	2
 1596              	.L106:
 1597 0308 00000000 		.word	.LC0
 1598 030c 00380240 		.word	1073887232
 1599 0310 00000000 		.word	AHBPrescTable
 1600 0314 00000000 		.word	SystemCoreClock
 1601 0318 00000000 		.word	uwTickPrio
 1602              		.cfi_endproc
 1603              	.LFE132:
 1605              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1606              		.align	1
 1607              		.global	HAL_RCC_MCOConfig
 1608              		.syntax unified
 1609              		.thumb
 1610              		.thumb_func
 1611              		.fpu fpv4-sp-d16
 1613              	HAL_RCC_MCOConfig:
 1614              	.LFB133:
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
ARM GAS  /tmp/ccbSHBdX.s 			page 43


 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1615              		.loc 1 767 1
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 48
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619 0000 80B5     		push	{r7, lr}
 1620              	.LCFI14:
 1621              		.cfi_def_cfa_offset 8
 1622              		.cfi_offset 7, -8
 1623              		.cfi_offset 14, -4
 1624 0002 8CB0     		sub	sp, sp, #48
 1625              	.LCFI15:
 1626              		.cfi_def_cfa_offset 56
 1627 0004 00AF     		add	r7, sp, #0
 1628              	.LCFI16:
 1629              		.cfi_def_cfa_register 7
 1630 0006 F860     		str	r0, [r7, #12]
 1631 0008 B960     		str	r1, [r7, #8]
 1632 000a 7A60     		str	r2, [r7, #4]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1633              		.loc 1 770 3
 1634 000c FB68     		ldr	r3, [r7, #12]
 1635 000e 002B     		cmp	r3, #0
 1636 0010 07D0     		beq	.L109
 1637              		.loc 1 770 3 is_stmt 0 discriminator 1
 1638 0012 FB68     		ldr	r3, [r7, #12]
 1639 0014 012B     		cmp	r3, #1
 1640 0016 04D0     		beq	.L109
 1641              		.loc 1 770 3 discriminator 2
 1642 0018 40F20231 		movw	r1, #770
 1643 001c 4E48     		ldr	r0, .L116
 1644 001e FFF7FEFF 		bl	assert_failed
 1645              	.L109:
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1646              		.loc 1 771 3 is_stmt 1
ARM GAS  /tmp/ccbSHBdX.s 			page 44


 1647 0022 7B68     		ldr	r3, [r7, #4]
 1648 0024 002B     		cmp	r3, #0
 1649 0026 14D0     		beq	.L110
 1650              		.loc 1 771 3 is_stmt 0 discriminator 1
 1651 0028 7B68     		ldr	r3, [r7, #4]
 1652 002a B3F1806F 		cmp	r3, #67108864
 1653 002e 10D0     		beq	.L110
 1654              		.loc 1 771 3 discriminator 2
 1655 0030 7B68     		ldr	r3, [r7, #4]
 1656 0032 B3F1A06F 		cmp	r3, #83886080
 1657 0036 0CD0     		beq	.L110
 1658              		.loc 1 771 3 discriminator 3
 1659 0038 7B68     		ldr	r3, [r7, #4]
 1660 003a B3F1C06F 		cmp	r3, #100663296
 1661 003e 08D0     		beq	.L110
 1662              		.loc 1 771 3 discriminator 4
 1663 0040 7B68     		ldr	r3, [r7, #4]
 1664 0042 B3F1E06F 		cmp	r3, #117440512
 1665 0046 04D0     		beq	.L110
 1666              		.loc 1 771 3 discriminator 5
 1667 0048 40F20331 		movw	r1, #771
 1668 004c 4248     		ldr	r0, .L116
 1669 004e FFF7FEFF 		bl	assert_failed
 1670              	.L110:
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1671              		.loc 1 773 5 is_stmt 1
 1672 0052 FB68     		ldr	r3, [r7, #12]
 1673 0054 002B     		cmp	r3, #0
 1674 0056 3DD1     		bne	.L111
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1675              		.loc 1 775 5
 1676 0058 BB68     		ldr	r3, [r7, #8]
 1677 005a 002B     		cmp	r3, #0
 1678 005c 10D0     		beq	.L112
 1679              		.loc 1 775 5 is_stmt 0 discriminator 1
 1680 005e BB68     		ldr	r3, [r7, #8]
 1681 0060 B3F5001F 		cmp	r3, #2097152
 1682 0064 0CD0     		beq	.L112
 1683              		.loc 1 775 5 discriminator 2
 1684 0066 BB68     		ldr	r3, [r7, #8]
 1685 0068 B3F5800F 		cmp	r3, #4194304
 1686 006c 08D0     		beq	.L112
 1687              		.loc 1 775 5 discriminator 3
 1688 006e BB68     		ldr	r3, [r7, #8]
 1689 0070 B3F5C00F 		cmp	r3, #6291456
 1690 0074 04D0     		beq	.L112
 1691              		.loc 1 775 5 discriminator 4
 1692 0076 40F20731 		movw	r1, #775
 1693 007a 3748     		ldr	r0, .L116
 1694 007c FFF7FEFF 		bl	assert_failed
 1695              	.L112:
 1696              	.LBB4:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
ARM GAS  /tmp/ccbSHBdX.s 			page 45


 1697              		.loc 1 778 5 is_stmt 1
 1698 0080 0023     		movs	r3, #0
 1699 0082 BB61     		str	r3, [r7, #24]
 1700 0084 354B     		ldr	r3, .L116+4
 1701 0086 1B6B     		ldr	r3, [r3, #48]
 1702 0088 344A     		ldr	r2, .L116+4
 1703 008a 43F00103 		orr	r3, r3, #1
 1704 008e 1363     		str	r3, [r2, #48]
 1705 0090 324B     		ldr	r3, .L116+4
 1706 0092 1B6B     		ldr	r3, [r3, #48]
 1707 0094 03F00103 		and	r3, r3, #1
 1708 0098 BB61     		str	r3, [r7, #24]
 1709 009a BB69     		ldr	r3, [r7, #24]
 1710              	.LBE4:
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1711              		.loc 1 781 25
 1712 009c 4FF48073 		mov	r3, #256
 1713 00a0 FB61     		str	r3, [r7, #28]
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1714              		.loc 1 782 26
 1715 00a2 0223     		movs	r3, #2
 1716 00a4 3B62     		str	r3, [r7, #32]
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1717              		.loc 1 783 27
 1718 00a6 0323     		movs	r3, #3
 1719 00a8 BB62     		str	r3, [r7, #40]
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1720              		.loc 1 784 26
 1721 00aa 0023     		movs	r3, #0
 1722 00ac 7B62     		str	r3, [r7, #36]
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1723              		.loc 1 785 31
 1724 00ae 0023     		movs	r3, #0
 1725 00b0 FB62     		str	r3, [r7, #44]
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1726              		.loc 1 786 5
 1727 00b2 07F11C03 		add	r3, r7, #28
 1728 00b6 1946     		mov	r1, r3
 1729 00b8 2948     		ldr	r0, .L116+8
 1730 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1731              		.loc 1 789 5
 1732 00be 274B     		ldr	r3, .L116+4
 1733 00c0 9B68     		ldr	r3, [r3, #8]
 1734 00c2 23F0EC62 		bic	r2, r3, #123731968
 1735 00c6 B968     		ldr	r1, [r7, #8]
 1736 00c8 7B68     		ldr	r3, [r7, #4]
 1737 00ca 0B43     		orrs	r3, r3, r1
 1738 00cc 2349     		ldr	r1, .L116+4
 1739 00ce 1343     		orrs	r3, r3, r2
 1740 00d0 8B60     		str	r3, [r1, #8]
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
ARM GAS  /tmp/ccbSHBdX.s 			page 46


 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1741              		.loc 1 821 1
 1742 00d2 3DE0     		b	.L115
 1743              	.L111:
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1744              		.loc 1 799 5
 1745 00d4 BB68     		ldr	r3, [r7, #8]
 1746 00d6 002B     		cmp	r3, #0
 1747 00d8 10D0     		beq	.L114
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1748              		.loc 1 799 5 is_stmt 0 discriminator 1
 1749 00da BB68     		ldr	r3, [r7, #8]
 1750 00dc B3F1804F 		cmp	r3, #1073741824
 1751 00e0 0CD0     		beq	.L114
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1752              		.loc 1 799 5 discriminator 2
 1753 00e2 BB68     		ldr	r3, [r7, #8]
 1754 00e4 B3F1004F 		cmp	r3, #-2147483648
 1755 00e8 08D0     		beq	.L114
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1756              		.loc 1 799 5 discriminator 3
 1757 00ea BB68     		ldr	r3, [r7, #8]
 1758 00ec B3F1404F 		cmp	r3, #-1073741824
 1759 00f0 04D0     		beq	.L114
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1760              		.loc 1 799 5 discriminator 4
 1761 00f2 40F21F31 		movw	r1, #799
 1762 00f6 1848     		ldr	r0, .L116
ARM GAS  /tmp/ccbSHBdX.s 			page 47


 1763 00f8 FFF7FEFF 		bl	assert_failed
 1764              	.L114:
 1765              	.LBB5:
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1766              		.loc 1 802 5 is_stmt 1
 1767 00fc 0023     		movs	r3, #0
 1768 00fe 7B61     		str	r3, [r7, #20]
 1769 0100 164B     		ldr	r3, .L116+4
 1770 0102 1B6B     		ldr	r3, [r3, #48]
 1771 0104 154A     		ldr	r2, .L116+4
 1772 0106 43F00403 		orr	r3, r3, #4
 1773 010a 1363     		str	r3, [r2, #48]
 1774 010c 134B     		ldr	r3, .L116+4
 1775 010e 1B6B     		ldr	r3, [r3, #48]
 1776 0110 03F00403 		and	r3, r3, #4
 1777 0114 7B61     		str	r3, [r7, #20]
 1778 0116 7B69     		ldr	r3, [r7, #20]
 1779              	.LBE5:
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1780              		.loc 1 805 25
 1781 0118 4FF40073 		mov	r3, #512
 1782 011c FB61     		str	r3, [r7, #28]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1783              		.loc 1 806 26
 1784 011e 0223     		movs	r3, #2
 1785 0120 3B62     		str	r3, [r7, #32]
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1786              		.loc 1 807 27
 1787 0122 0323     		movs	r3, #3
 1788 0124 BB62     		str	r3, [r7, #40]
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1789              		.loc 1 808 26
 1790 0126 0023     		movs	r3, #0
 1791 0128 7B62     		str	r3, [r7, #36]
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1792              		.loc 1 809 31
 1793 012a 0023     		movs	r3, #0
 1794 012c FB62     		str	r3, [r7, #44]
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1795              		.loc 1 810 5
 1796 012e 07F11C03 		add	r3, r7, #28
 1797 0132 1946     		mov	r1, r3
 1798 0134 0B48     		ldr	r0, .L116+12
 1799 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1800              		.loc 1 813 5
 1801 013a 084B     		ldr	r3, .L116+4
 1802 013c 9B68     		ldr	r3, [r3, #8]
 1803 013e 23F07842 		bic	r2, r3, #-134217728
 1804 0142 7B68     		ldr	r3, [r7, #4]
 1805 0144 D900     		lsls	r1, r3, #3
 1806 0146 BB68     		ldr	r3, [r7, #8]
 1807 0148 0B43     		orrs	r3, r3, r1
 1808 014a 0449     		ldr	r1, .L116+4
 1809 014c 1343     		orrs	r3, r3, r2
 1810 014e 8B60     		str	r3, [r1, #8]
 1811              	.L115:
ARM GAS  /tmp/ccbSHBdX.s 			page 48


 1812              		.loc 1 821 1
 1813 0150 00BF     		nop
 1814 0152 3037     		adds	r7, r7, #48
 1815              	.LCFI17:
 1816              		.cfi_def_cfa_offset 8
 1817 0154 BD46     		mov	sp, r7
 1818              	.LCFI18:
 1819              		.cfi_def_cfa_register 13
 1820              		@ sp needed
 1821 0156 80BD     		pop	{r7, pc}
 1822              	.L117:
 1823              		.align	2
 1824              	.L116:
 1825 0158 00000000 		.word	.LC0
 1826 015c 00380240 		.word	1073887232
 1827 0160 00000240 		.word	1073872896
 1828 0164 00080240 		.word	1073874944
 1829              		.cfi_endproc
 1830              	.LFE133:
 1832              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1833              		.align	1
 1834              		.global	HAL_RCC_EnableCSS
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1838              		.fpu fpv4-sp-d16
 1840              	HAL_RCC_EnableCSS:
 1841              	.LFB134:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1842              		.loc 1 833 1
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 1, uses_anonymous_args = 0
 1846              		@ link register save eliminated.
 1847 0000 80B4     		push	{r7}
 1848              	.LCFI19:
 1849              		.cfi_def_cfa_offset 4
 1850              		.cfi_offset 7, -4
 1851 0002 00AF     		add	r7, sp, #0
 1852              	.LCFI20:
 1853              		.cfi_def_cfa_register 7
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1854              		.loc 1 834 3
 1855 0004 034B     		ldr	r3, .L119
 1856              		.loc 1 834 38
 1857 0006 0122     		movs	r2, #1
ARM GAS  /tmp/ccbSHBdX.s 			page 49


 1858 0008 1A60     		str	r2, [r3]
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1859              		.loc 1 835 1
 1860 000a 00BF     		nop
 1861 000c BD46     		mov	sp, r7
 1862              	.LCFI21:
 1863              		.cfi_def_cfa_register 13
 1864              		@ sp needed
 1865 000e 5DF8047B 		ldr	r7, [sp], #4
 1866              	.LCFI22:
 1867              		.cfi_restore 7
 1868              		.cfi_def_cfa_offset 0
 1869 0012 7047     		bx	lr
 1870              	.L120:
 1871              		.align	2
 1872              	.L119:
 1873 0014 4C004742 		.word	1111949388
 1874              		.cfi_endproc
 1875              	.LFE134:
 1877              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1878              		.align	1
 1879              		.global	HAL_RCC_DisableCSS
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	HAL_RCC_DisableCSS:
 1886              	.LFB135:
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1887              		.loc 1 842 1
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 1, uses_anonymous_args = 0
 1891              		@ link register save eliminated.
 1892 0000 80B4     		push	{r7}
 1893              	.LCFI23:
 1894              		.cfi_def_cfa_offset 4
 1895              		.cfi_offset 7, -4
 1896 0002 00AF     		add	r7, sp, #0
 1897              	.LCFI24:
 1898              		.cfi_def_cfa_register 7
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1899              		.loc 1 843 3
 1900 0004 034B     		ldr	r3, .L122
 1901              		.loc 1 843 38
 1902 0006 0022     		movs	r2, #0
 1903 0008 1A60     		str	r2, [r3]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1904              		.loc 1 844 1
 1905 000a 00BF     		nop
 1906 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccbSHBdX.s 			page 50


 1907              	.LCFI25:
 1908              		.cfi_def_cfa_register 13
 1909              		@ sp needed
 1910 000e 5DF8047B 		ldr	r7, [sp], #4
 1911              	.LCFI26:
 1912              		.cfi_restore 7
 1913              		.cfi_def_cfa_offset 0
 1914 0012 7047     		bx	lr
 1915              	.L123:
 1916              		.align	2
 1917              	.L122:
 1918 0014 4C004742 		.word	1111949388
 1919              		.cfi_endproc
 1920              	.LFE135:
 1922              		.global	__aeabi_uldivmod
 1923              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1924              		.align	1
 1925              		.weak	HAL_RCC_GetSysClockFreq
 1926              		.syntax unified
 1927              		.thumb
 1928              		.thumb_func
 1929              		.fpu fpv4-sp-d16
 1931              	HAL_RCC_GetSysClockFreq:
 1932              	.LFB136:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccbSHBdX.s 			page 51


 1933              		.loc 1 877 1
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 16
 1936              		@ frame_needed = 1, uses_anonymous_args = 0
 1937 0000 B0B5     		push	{r4, r5, r7, lr}
 1938              	.LCFI27:
 1939              		.cfi_def_cfa_offset 16
 1940              		.cfi_offset 4, -16
 1941              		.cfi_offset 5, -12
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 84B0     		sub	sp, sp, #16
 1945              	.LCFI28:
 1946              		.cfi_def_cfa_offset 32
 1947 0004 00AF     		add	r7, sp, #0
 1948              	.LCFI29:
 1949              		.cfi_def_cfa_register 7
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1950              		.loc 1 878 12
 1951 0006 0021     		movs	r1, #0
 1952 0008 7960     		str	r1, [r7, #4]
 1953              		.loc 1 878 23
 1954 000a 0021     		movs	r1, #0
 1955 000c F960     		str	r1, [r7, #12]
 1956              		.loc 1 878 36
 1957 000e 0021     		movs	r1, #0
 1958 0010 3960     		str	r1, [r7]
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1959              		.loc 1 879 12
 1960 0012 0021     		movs	r1, #0
 1961 0014 B960     		str	r1, [r7, #8]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1962              		.loc 1 882 14
 1963 0016 5249     		ldr	r1, .L133
 1964 0018 8968     		ldr	r1, [r1, #8]
 1965              		.loc 1 882 21
 1966 001a 01F00C01 		and	r1, r1, #12
 1967              		.loc 1 882 3
 1968 001e 0829     		cmp	r1, #8
 1969 0020 0DD0     		beq	.L125
 1970 0022 0829     		cmp	r1, #8
 1971 0024 00F29480 		bhi	.L126
 1972 0028 0029     		cmp	r1, #0
 1973 002a 02D0     		beq	.L127
 1974 002c 0429     		cmp	r1, #4
 1975 002e 03D0     		beq	.L128
 1976 0030 8EE0     		b	.L126
 1977              	.L127:
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1978              		.loc 1 886 20
 1979 0032 4C4B     		ldr	r3, .L133+4
 1980 0034 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccbSHBdX.s 			page 52


 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1981              		.loc 1 887 8
 1982 0036 8EE0     		b	.L129
 1983              	.L128:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1984              		.loc 1 891 20
 1985 0038 4B4B     		ldr	r3, .L133+8
 1986 003a BB60     		str	r3, [r7, #8]
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1987              		.loc 1 892 7
 1988 003c 8BE0     		b	.L129
 1989              	.L125:
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1990              		.loc 1 898 17
 1991 003e 4849     		ldr	r1, .L133
 1992 0040 4968     		ldr	r1, [r1, #4]
 1993              		.loc 1 898 12
 1994 0042 01F03F01 		and	r1, r1, #63
 1995 0046 7960     		str	r1, [r7, #4]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1996              		.loc 1 899 10
 1997 0048 4549     		ldr	r1, .L133
 1998 004a 4968     		ldr	r1, [r1, #4]
 1999 004c 01F48001 		and	r1, r1, #4194304
 2000              		.loc 1 899 9
 2001 0050 0029     		cmp	r1, #0
 2002 0052 24D0     		beq	.L130
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 2003              		.loc 1 902 72
 2004 0054 4249     		ldr	r1, .L133
 2005 0056 4968     		ldr	r1, [r1, #4]
 2006              		.loc 1 902 102
 2007 0058 8909     		lsrs	r1, r1, #6
 2008              		.loc 1 902 56
 2009 005a 0846     		mov	r0, r1
 2010 005c 4FF00001 		mov	r1, #0
 2011 0060 40F2FF14 		movw	r4, #511
 2012 0064 4FF00005 		mov	r5, #0
 2013 0068 00EA0402 		and	r2, r0, r4
 2014 006c 01EA0503 		and	r3, r1, r5
 2015              		.loc 1 902 53
 2016 0070 3D49     		ldr	r1, .L133+8
 2017 0072 01FB03F0 		mul	r0, r1, r3
 2018 0076 0021     		movs	r1, #0
 2019 0078 01FB02F1 		mul	r1, r1, r2
 2020 007c 4418     		adds	r4, r0, r1
 2021 007e 3A49     		ldr	r1, .L133+8
ARM GAS  /tmp/ccbSHBdX.s 			page 53


 2022 0080 A2FB0101 		umull	r0, r1, r2, r1
 2023 0084 6318     		adds	r3, r4, r1
 2024 0086 1946     		mov	r1, r3
 2025              		.loc 1 902 132
 2026 0088 7B68     		ldr	r3, [r7, #4]
 2027 008a 1A46     		mov	r2, r3
 2028 008c 4FF00003 		mov	r3, #0
 2029              		.loc 1 902 130
 2030 0090 FFF7FEFF 		bl	__aeabi_uldivmod
 2031              	.LVL0:
 2032 0094 0246     		mov	r2, r0
 2033 0096 0B46     		mov	r3, r1
 2034              		.loc 1 902 16
 2035 0098 1346     		mov	r3, r2
 2036 009a FB60     		str	r3, [r7, #12]
 2037 009c 4AE0     		b	.L131
 2038              	.L130:
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 2039              		.loc 1 907 72
 2040 009e 304B     		ldr	r3, .L133
 2041 00a0 5B68     		ldr	r3, [r3, #4]
 2042              		.loc 1 907 102
 2043 00a2 9B09     		lsrs	r3, r3, #6
 2044              		.loc 1 907 56
 2045 00a4 1A46     		mov	r2, r3
 2046 00a6 4FF00003 		mov	r3, #0
 2047 00aa 40F2FF10 		movw	r0, #511
 2048 00ae 4FF00001 		mov	r1, #0
 2049 00b2 02EA0004 		and	r4, r2, r0
 2050 00b6 03EA0105 		and	r5, r3, r1
 2051              		.loc 1 907 53
 2052 00ba 2046     		mov	r0, r4
 2053 00bc 2946     		mov	r1, r5
 2054 00be 4FF00002 		mov	r2, #0
 2055 00c2 4FF00003 		mov	r3, #0
 2056 00c6 4B01     		lsls	r3, r1, #5
 2057 00c8 43EAD063 		orr	r3, r3, r0, lsr #27
 2058 00cc 4201     		lsls	r2, r0, #5
 2059 00ce 1046     		mov	r0, r2
 2060 00d0 1946     		mov	r1, r3
 2061 00d2 001B     		subs	r0, r0, r4
 2062 00d4 61EB0501 		sbc	r1, r1, r5
 2063 00d8 4FF00002 		mov	r2, #0
 2064 00dc 4FF00003 		mov	r3, #0
 2065 00e0 8B01     		lsls	r3, r1, #6
 2066 00e2 43EA9063 		orr	r3, r3, r0, lsr #26
 2067 00e6 8201     		lsls	r2, r0, #6
 2068 00e8 121A     		subs	r2, r2, r0
 2069 00ea 63EB0103 		sbc	r3, r3, r1
 2070 00ee 4FF00000 		mov	r0, #0
 2071 00f2 4FF00001 		mov	r1, #0
 2072 00f6 D900     		lsls	r1, r3, #3
 2073 00f8 41EA5271 		orr	r1, r1, r2, lsr #29
ARM GAS  /tmp/ccbSHBdX.s 			page 54


 2074 00fc D000     		lsls	r0, r2, #3
 2075 00fe 0246     		mov	r2, r0
 2076 0100 0B46     		mov	r3, r1
 2077 0102 1219     		adds	r2, r2, r4
 2078 0104 45EB0303 		adc	r3, r5, r3
 2079 0108 4FF00000 		mov	r0, #0
 2080 010c 4FF00001 		mov	r1, #0
 2081 0110 9902     		lsls	r1, r3, #10
 2082 0112 41EA9251 		orr	r1, r1, r2, lsr #22
 2083 0116 9002     		lsls	r0, r2, #10
 2084 0118 0246     		mov	r2, r0
 2085 011a 0B46     		mov	r3, r1
 2086 011c 1046     		mov	r0, r2
 2087 011e 1946     		mov	r1, r3
 2088              		.loc 1 907 132
 2089 0120 7B68     		ldr	r3, [r7, #4]
 2090 0122 1A46     		mov	r2, r3
 2091 0124 4FF00003 		mov	r3, #0
 2092              		.loc 1 907 130
 2093 0128 FFF7FEFF 		bl	__aeabi_uldivmod
 2094              	.LVL1:
 2095 012c 0246     		mov	r2, r0
 2096 012e 0B46     		mov	r3, r1
 2097              		.loc 1 907 16
 2098 0130 1346     		mov	r3, r2
 2099 0132 FB60     		str	r3, [r7, #12]
 2100              	.L131:
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 2101              		.loc 1 909 21
 2102 0134 0A4B     		ldr	r3, .L133
 2103 0136 5B68     		ldr	r3, [r3, #4]
 2104              		.loc 1 909 51
 2105 0138 1B0C     		lsrs	r3, r3, #16
 2106 013a 03F00303 		and	r3, r3, #3
 2107              		.loc 1 909 76
 2108 013e 0133     		adds	r3, r3, #1
 2109              		.loc 1 909 12
 2110 0140 5B00     		lsls	r3, r3, #1
 2111 0142 3B60     		str	r3, [r7]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 2112              		.loc 1 911 20
 2113 0144 FA68     		ldr	r2, [r7, #12]
 2114 0146 3B68     		ldr	r3, [r7]
 2115 0148 B2FBF3F3 		udiv	r3, r2, r3
 2116 014c BB60     		str	r3, [r7, #8]
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2117              		.loc 1 912 7
 2118 014e 02E0     		b	.L129
 2119              	.L126:
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 2120              		.loc 1 916 20
 2121 0150 044B     		ldr	r3, .L133+4
ARM GAS  /tmp/ccbSHBdX.s 			page 55


 2122 0152 BB60     		str	r3, [r7, #8]
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2123              		.loc 1 917 7
 2124 0154 00BF     		nop
 2125              	.L129:
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 2126              		.loc 1 920 10
 2127 0156 BB68     		ldr	r3, [r7, #8]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2128              		.loc 1 921 1
 2129 0158 1846     		mov	r0, r3
 2130 015a 1037     		adds	r7, r7, #16
 2131              	.LCFI30:
 2132              		.cfi_def_cfa_offset 16
 2133 015c BD46     		mov	sp, r7
 2134              	.LCFI31:
 2135              		.cfi_def_cfa_register 13
 2136              		@ sp needed
 2137 015e B0BD     		pop	{r4, r5, r7, pc}
 2138              	.L134:
 2139              		.align	2
 2140              	.L133:
 2141 0160 00380240 		.word	1073887232
 2142 0164 0024F400 		.word	16000000
 2143 0168 40787D01 		.word	25000000
 2144              		.cfi_endproc
 2145              	.LFE136:
 2147              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2148              		.align	1
 2149              		.global	HAL_RCC_GetHCLKFreq
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2153              		.fpu fpv4-sp-d16
 2155              	HAL_RCC_GetHCLKFreq:
 2156              	.LFB137:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2157              		.loc 1 933 1
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
 2162 0000 80B4     		push	{r7}
 2163              	.LCFI32:
ARM GAS  /tmp/ccbSHBdX.s 			page 56


 2164              		.cfi_def_cfa_offset 4
 2165              		.cfi_offset 7, -4
 2166 0002 00AF     		add	r7, sp, #0
 2167              	.LCFI33:
 2168              		.cfi_def_cfa_register 7
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 2169              		.loc 1 934 10
 2170 0004 034B     		ldr	r3, .L137
 2171 0006 1B68     		ldr	r3, [r3]
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2172              		.loc 1 935 1
 2173 0008 1846     		mov	r0, r3
 2174 000a BD46     		mov	sp, r7
 2175              	.LCFI34:
 2176              		.cfi_def_cfa_register 13
 2177              		@ sp needed
 2178 000c 5DF8047B 		ldr	r7, [sp], #4
 2179              	.LCFI35:
 2180              		.cfi_restore 7
 2181              		.cfi_def_cfa_offset 0
 2182 0010 7047     		bx	lr
 2183              	.L138:
 2184 0012 00BF     		.align	2
 2185              	.L137:
 2186 0014 00000000 		.word	SystemCoreClock
 2187              		.cfi_endproc
 2188              	.LFE137:
 2190              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2191              		.align	1
 2192              		.global	HAL_RCC_GetPCLK1Freq
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu fpv4-sp-d16
 2198              	HAL_RCC_GetPCLK1Freq:
 2199              	.LFB138:
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2200              		.loc 1 944 1
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204 0000 80B5     		push	{r7, lr}
 2205              	.LCFI36:
 2206              		.cfi_def_cfa_offset 8
 2207              		.cfi_offset 7, -8
 2208              		.cfi_offset 14, -4
 2209 0002 00AF     		add	r7, sp, #0
 2210              	.LCFI37:
 2211              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccbSHBdX.s 			page 57


 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 2212              		.loc 1 946 11
 2213 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2214 0008 0246     		mov	r2, r0
 2215              		.loc 1 946 54
 2216 000a 054B     		ldr	r3, .L141
 2217 000c 9B68     		ldr	r3, [r3, #8]
 2218              		.loc 1 946 78
 2219 000e 9B0A     		lsrs	r3, r3, #10
 2220 0010 03F00703 		and	r3, r3, #7
 2221              		.loc 1 946 49
 2222 0014 0349     		ldr	r1, .L141+4
 2223 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2224              		.loc 1 946 33
 2225 0018 22FA03F3 		lsr	r3, r2, r3
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2226              		.loc 1 947 1
 2227 001c 1846     		mov	r0, r3
 2228 001e 80BD     		pop	{r7, pc}
 2229              	.L142:
 2230              		.align	2
 2231              	.L141:
 2232 0020 00380240 		.word	1073887232
 2233 0024 00000000 		.word	APBPrescTable
 2234              		.cfi_endproc
 2235              	.LFE138:
 2237              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2238              		.align	1
 2239              		.global	HAL_RCC_GetPCLK2Freq
 2240              		.syntax unified
 2241              		.thumb
 2242              		.thumb_func
 2243              		.fpu fpv4-sp-d16
 2245              	HAL_RCC_GetPCLK2Freq:
 2246              	.LFB139:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2247              		.loc 1 956 1
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 1, uses_anonymous_args = 0
 2251 0000 80B5     		push	{r7, lr}
 2252              	.LCFI38:
 2253              		.cfi_def_cfa_offset 8
 2254              		.cfi_offset 7, -8
 2255              		.cfi_offset 14, -4
 2256 0002 00AF     		add	r7, sp, #0
 2257              	.LCFI39:
 2258              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccbSHBdX.s 			page 58


 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 2259              		.loc 1 958 11
 2260 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2261 0008 0246     		mov	r2, r0
 2262              		.loc 1 958 53
 2263 000a 054B     		ldr	r3, .L145
 2264 000c 9B68     		ldr	r3, [r3, #8]
 2265              		.loc 1 958 77
 2266 000e 5B0B     		lsrs	r3, r3, #13
 2267 0010 03F00703 		and	r3, r3, #7
 2268              		.loc 1 958 48
 2269 0014 0349     		ldr	r1, .L145+4
 2270 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2271              		.loc 1 958 32
 2272 0018 22FA03F3 		lsr	r3, r2, r3
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2273              		.loc 1 959 1
 2274 001c 1846     		mov	r0, r3
 2275 001e 80BD     		pop	{r7, pc}
 2276              	.L146:
 2277              		.align	2
 2278              	.L145:
 2279 0020 00380240 		.word	1073887232
 2280 0024 00000000 		.word	APBPrescTable
 2281              		.cfi_endproc
 2282              	.LFE139:
 2284              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2285              		.align	1
 2286              		.weak	HAL_RCC_GetOscConfig
 2287              		.syntax unified
 2288              		.thumb
 2289              		.thumb_func
 2290              		.fpu fpv4-sp-d16
 2292              	HAL_RCC_GetOscConfig:
 2293              	.LFB140:
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2294              		.loc 1 969 1
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 8
 2297              		@ frame_needed = 1, uses_anonymous_args = 0
 2298              		@ link register save eliminated.
 2299 0000 80B4     		push	{r7}
 2300              	.LCFI40:
 2301              		.cfi_def_cfa_offset 4
 2302              		.cfi_offset 7, -4
 2303 0002 83B0     		sub	sp, sp, #12
 2304              	.LCFI41:
ARM GAS  /tmp/ccbSHBdX.s 			page 59


 2305              		.cfi_def_cfa_offset 16
 2306 0004 00AF     		add	r7, sp, #0
 2307              	.LCFI42:
 2308              		.cfi_def_cfa_register 7
 2309 0006 7860     		str	r0, [r7, #4]
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2310              		.loc 1 971 37
 2311 0008 7B68     		ldr	r3, [r7, #4]
 2312 000a 0F22     		movs	r2, #15
 2313 000c 1A60     		str	r2, [r3]
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2314              		.loc 1 974 10
 2315 000e 454B     		ldr	r3, .L160
 2316 0010 1B68     		ldr	r3, [r3]
 2317              		.loc 1 974 15
 2318 0012 03F48023 		and	r3, r3, #262144
 2319              		.loc 1 974 5
 2320 0016 B3F5802F 		cmp	r3, #262144
 2321 001a 04D1     		bne	.L148
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2322              		.loc 1 976 33
 2323 001c 7B68     		ldr	r3, [r7, #4]
 2324 001e 4FF4A022 		mov	r2, #327680
 2325 0022 5A60     		str	r2, [r3, #4]
 2326 0024 0EE0     		b	.L149
 2327              	.L148:
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2328              		.loc 1 978 15
 2329 0026 3F4B     		ldr	r3, .L160
 2330 0028 1B68     		ldr	r3, [r3]
 2331              		.loc 1 978 20
 2332 002a 03F48033 		and	r3, r3, #65536
 2333              		.loc 1 978 10
 2334 002e B3F5803F 		cmp	r3, #65536
 2335 0032 04D1     		bne	.L150
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2336              		.loc 1 980 33
 2337 0034 7B68     		ldr	r3, [r7, #4]
 2338 0036 4FF48032 		mov	r2, #65536
 2339 003a 5A60     		str	r2, [r3, #4]
 2340 003c 02E0     		b	.L149
 2341              	.L150:
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2342              		.loc 1 984 33
 2343 003e 7B68     		ldr	r3, [r7, #4]
 2344 0040 0022     		movs	r2, #0
 2345 0042 5A60     		str	r2, [r3, #4]
 2346              	.L149:
ARM GAS  /tmp/ccbSHBdX.s 			page 60


 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2347              		.loc 1 988 10
 2348 0044 374B     		ldr	r3, .L160
 2349 0046 1B68     		ldr	r3, [r3]
 2350              		.loc 1 988 15
 2351 0048 03F00103 		and	r3, r3, #1
 2352              		.loc 1 988 5
 2353 004c 012B     		cmp	r3, #1
 2354 004e 03D1     		bne	.L151
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2355              		.loc 1 990 33
 2356 0050 7B68     		ldr	r3, [r7, #4]
 2357 0052 0122     		movs	r2, #1
 2358 0054 DA60     		str	r2, [r3, #12]
 2359 0056 02E0     		b	.L152
 2360              	.L151:
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2361              		.loc 1 994 33
 2362 0058 7B68     		ldr	r3, [r7, #4]
 2363 005a 0022     		movs	r2, #0
 2364 005c DA60     		str	r2, [r3, #12]
 2365              	.L152:
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 2366              		.loc 1 997 59
 2367 005e 314B     		ldr	r3, .L160
 2368 0060 1B68     		ldr	r3, [r3]
 2369              		.loc 1 997 44
 2370 0062 DB08     		lsrs	r3, r3, #3
 2371 0064 03F01F02 		and	r2, r3, #31
 2372              		.loc 1 997 42
 2373 0068 7B68     		ldr	r3, [r7, #4]
 2374 006a 1A61     		str	r2, [r3, #16]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2375              		.loc 1 1000 10
 2376 006c 2D4B     		ldr	r3, .L160
 2377 006e 1B6F     		ldr	r3, [r3, #112]
 2378              		.loc 1 1000 17
 2379 0070 03F00403 		and	r3, r3, #4
 2380              		.loc 1 1000 5
 2381 0074 042B     		cmp	r3, #4
 2382 0076 03D1     		bne	.L153
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2383              		.loc 1 1002 33
 2384 0078 7B68     		ldr	r3, [r7, #4]
 2385 007a 0522     		movs	r2, #5
ARM GAS  /tmp/ccbSHBdX.s 			page 61


 2386 007c 9A60     		str	r2, [r3, #8]
 2387 007e 0CE0     		b	.L154
 2388              	.L153:
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2389              		.loc 1 1004 15
 2390 0080 284B     		ldr	r3, .L160
 2391 0082 1B6F     		ldr	r3, [r3, #112]
 2392              		.loc 1 1004 22
 2393 0084 03F00103 		and	r3, r3, #1
 2394              		.loc 1 1004 10
 2395 0088 012B     		cmp	r3, #1
 2396 008a 03D1     		bne	.L155
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2397              		.loc 1 1006 33
 2398 008c 7B68     		ldr	r3, [r7, #4]
 2399 008e 0122     		movs	r2, #1
 2400 0090 9A60     		str	r2, [r3, #8]
 2401 0092 02E0     		b	.L154
 2402              	.L155:
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2403              		.loc 1 1010 33
 2404 0094 7B68     		ldr	r3, [r7, #4]
 2405 0096 0022     		movs	r2, #0
 2406 0098 9A60     		str	r2, [r3, #8]
 2407              	.L154:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2408              		.loc 1 1014 10
 2409 009a 224B     		ldr	r3, .L160
 2410 009c 5B6F     		ldr	r3, [r3, #116]
 2411              		.loc 1 1014 16
 2412 009e 03F00103 		and	r3, r3, #1
 2413              		.loc 1 1014 5
 2414 00a2 012B     		cmp	r3, #1
 2415 00a4 03D1     		bne	.L156
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2416              		.loc 1 1016 33
 2417 00a6 7B68     		ldr	r3, [r7, #4]
 2418 00a8 0122     		movs	r2, #1
 2419 00aa 5A61     		str	r2, [r3, #20]
 2420 00ac 02E0     		b	.L157
 2421              	.L156:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2422              		.loc 1 1020 33
 2423 00ae 7B68     		ldr	r3, [r7, #4]
 2424 00b0 0022     		movs	r2, #0
ARM GAS  /tmp/ccbSHBdX.s 			page 62


 2425 00b2 5A61     		str	r2, [r3, #20]
 2426              	.L157:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2427              		.loc 1 1024 10
 2428 00b4 1B4B     		ldr	r3, .L160
 2429 00b6 1B68     		ldr	r3, [r3]
 2430              		.loc 1 1024 15
 2431 00b8 03F08073 		and	r3, r3, #16777216
 2432              		.loc 1 1024 5
 2433 00bc B3F1807F 		cmp	r3, #16777216
 2434 00c0 03D1     		bne	.L158
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2435              		.loc 1 1026 37
 2436 00c2 7B68     		ldr	r3, [r7, #4]
 2437 00c4 0222     		movs	r2, #2
 2438 00c6 9A61     		str	r2, [r3, #24]
 2439 00c8 02E0     		b	.L159
 2440              	.L158:
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2441              		.loc 1 1030 37
 2442 00ca 7B68     		ldr	r3, [r7, #4]
 2443 00cc 0122     		movs	r2, #1
 2444 00ce 9A61     		str	r2, [r3, #24]
 2445              	.L159:
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2446              		.loc 1 1032 52
 2447 00d0 144B     		ldr	r3, .L160
 2448 00d2 5B68     		ldr	r3, [r3, #4]
 2449              		.loc 1 1032 38
 2450 00d4 03F48002 		and	r2, r3, #4194304
 2451              		.loc 1 1032 36
 2452 00d8 7B68     		ldr	r3, [r7, #4]
 2453 00da DA61     		str	r2, [r3, #28]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2454              		.loc 1 1033 47
 2455 00dc 114B     		ldr	r3, .L160
 2456 00de 5B68     		ldr	r3, [r3, #4]
 2457              		.loc 1 1033 33
 2458 00e0 03F03F02 		and	r2, r3, #63
 2459              		.loc 1 1033 31
 2460 00e4 7B68     		ldr	r3, [r7, #4]
 2461 00e6 1A62     		str	r2, [r3, #32]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 2462              		.loc 1 1034 48
 2463 00e8 0E4B     		ldr	r3, .L160
 2464 00ea 5B68     		ldr	r3, [r3, #4]
 2465              		.loc 1 1034 33
 2466 00ec 9B09     		lsrs	r3, r3, #6
 2467 00ee C3F30802 		ubfx	r2, r3, #0, #9
ARM GAS  /tmp/ccbSHBdX.s 			page 63


 2468              		.loc 1 1034 31
 2469 00f2 7B68     		ldr	r3, [r7, #4]
 2470 00f4 5A62     		str	r2, [r3, #36]
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2471              		.loc 1 1035 50
 2472 00f6 0B4B     		ldr	r3, .L160
 2473 00f8 5B68     		ldr	r3, [r3, #4]
 2474              		.loc 1 1035 60
 2475 00fa 03F44033 		and	r3, r3, #196608
 2476              		.loc 1 1035 80
 2477 00fe 03F58033 		add	r3, r3, #65536
 2478              		.loc 1 1035 102
 2479 0102 5B00     		lsls	r3, r3, #1
 2480              		.loc 1 1035 33
 2481 0104 1A0C     		lsrs	r2, r3, #16
 2482              		.loc 1 1035 31
 2483 0106 7B68     		ldr	r3, [r7, #4]
 2484 0108 9A62     		str	r2, [r3, #40]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2485              		.loc 1 1036 48
 2486 010a 064B     		ldr	r3, .L160
 2487 010c 5B68     		ldr	r3, [r3, #4]
 2488              		.loc 1 1036 33
 2489 010e 1B0E     		lsrs	r3, r3, #24
 2490 0110 03F00F02 		and	r2, r3, #15
 2491              		.loc 1 1036 31
 2492 0114 7B68     		ldr	r3, [r7, #4]
 2493 0116 DA62     		str	r2, [r3, #44]
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2494              		.loc 1 1037 1
 2495 0118 00BF     		nop
 2496 011a 0C37     		adds	r7, r7, #12
 2497              	.LCFI43:
 2498              		.cfi_def_cfa_offset 4
 2499 011c BD46     		mov	sp, r7
 2500              	.LCFI44:
 2501              		.cfi_def_cfa_register 13
 2502              		@ sp needed
 2503 011e 5DF8047B 		ldr	r7, [sp], #4
 2504              	.LCFI45:
 2505              		.cfi_restore 7
 2506              		.cfi_def_cfa_offset 0
 2507 0122 7047     		bx	lr
 2508              	.L161:
 2509              		.align	2
 2510              	.L160:
 2511 0124 00380240 		.word	1073887232
 2512              		.cfi_endproc
 2513              	.LFE140:
 2515              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2516              		.align	1
 2517              		.global	HAL_RCC_GetClockConfig
 2518              		.syntax unified
 2519              		.thumb
 2520              		.thumb_func
 2521              		.fpu fpv4-sp-d16
 2523              	HAL_RCC_GetClockConfig:
ARM GAS  /tmp/ccbSHBdX.s 			page 64


 2524              	.LFB141:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2525              		.loc 1 1048 1
 2526              		.cfi_startproc
 2527              		@ args = 0, pretend = 0, frame = 8
 2528              		@ frame_needed = 1, uses_anonymous_args = 0
 2529              		@ link register save eliminated.
 2530 0000 80B4     		push	{r7}
 2531              	.LCFI46:
 2532              		.cfi_def_cfa_offset 4
 2533              		.cfi_offset 7, -4
 2534 0002 83B0     		sub	sp, sp, #12
 2535              	.LCFI47:
 2536              		.cfi_def_cfa_offset 16
 2537 0004 00AF     		add	r7, sp, #0
 2538              	.LCFI48:
 2539              		.cfi_def_cfa_register 7
 2540 0006 7860     		str	r0, [r7, #4]
 2541 0008 3960     		str	r1, [r7]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2542              		.loc 1 1050 32
 2543 000a 7B68     		ldr	r3, [r7, #4]
 2544 000c 0F22     		movs	r2, #15
 2545 000e 1A60     		str	r2, [r3]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2546              		.loc 1 1053 51
 2547 0010 124B     		ldr	r3, .L163
 2548 0012 9B68     		ldr	r3, [r3, #8]
 2549              		.loc 1 1053 37
 2550 0014 03F00302 		and	r2, r3, #3
 2551              		.loc 1 1053 35
 2552 0018 7B68     		ldr	r3, [r7, #4]
 2553 001a 5A60     		str	r2, [r3, #4]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2554              		.loc 1 1056 52
 2555 001c 0F4B     		ldr	r3, .L163
 2556 001e 9B68     		ldr	r3, [r3, #8]
 2557              		.loc 1 1056 38
 2558 0020 03F0F002 		and	r2, r3, #240
 2559              		.loc 1 1056 36
 2560 0024 7B68     		ldr	r3, [r7, #4]
 2561 0026 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccbSHBdX.s 			page 65


1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2562              		.loc 1 1059 53
 2563 0028 0C4B     		ldr	r3, .L163
 2564 002a 9B68     		ldr	r3, [r3, #8]
 2565              		.loc 1 1059 39
 2566 002c 03F4E052 		and	r2, r3, #7168
 2567              		.loc 1 1059 37
 2568 0030 7B68     		ldr	r3, [r7, #4]
 2569 0032 DA60     		str	r2, [r3, #12]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2570              		.loc 1 1062 54
 2571 0034 094B     		ldr	r3, .L163
 2572 0036 9B68     		ldr	r3, [r3, #8]
 2573              		.loc 1 1062 39
 2574 0038 DB08     		lsrs	r3, r3, #3
 2575 003a 03F4E052 		and	r2, r3, #7168
 2576              		.loc 1 1062 37
 2577 003e 7B68     		ldr	r3, [r7, #4]
 2578 0040 1A61     		str	r2, [r3, #16]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2579              		.loc 1 1065 32
 2580 0042 074B     		ldr	r3, .L163+4
 2581 0044 1B68     		ldr	r3, [r3]
 2582              		.loc 1 1065 16
 2583 0046 03F00F02 		and	r2, r3, #15
 2584              		.loc 1 1065 14
 2585 004a 3B68     		ldr	r3, [r7]
 2586 004c 1A60     		str	r2, [r3]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2587              		.loc 1 1066 1
 2588 004e 00BF     		nop
 2589 0050 0C37     		adds	r7, r7, #12
 2590              	.LCFI49:
 2591              		.cfi_def_cfa_offset 4
 2592 0052 BD46     		mov	sp, r7
 2593              	.LCFI50:
 2594              		.cfi_def_cfa_register 13
 2595              		@ sp needed
 2596 0054 5DF8047B 		ldr	r7, [sp], #4
 2597              	.LCFI51:
 2598              		.cfi_restore 7
 2599              		.cfi_def_cfa_offset 0
 2600 0058 7047     		bx	lr
 2601              	.L164:
 2602 005a 00BF     		.align	2
 2603              	.L163:
 2604 005c 00380240 		.word	1073887232
 2605 0060 003C0240 		.word	1073888256
 2606              		.cfi_endproc
 2607              	.LFE141:
 2609              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccbSHBdX.s 			page 66


 2610              		.align	1
 2611              		.global	HAL_RCC_NMI_IRQHandler
 2612              		.syntax unified
 2613              		.thumb
 2614              		.thumb_func
 2615              		.fpu fpv4-sp-d16
 2617              	HAL_RCC_NMI_IRQHandler:
 2618              	.LFB142:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2619              		.loc 1 1074 1
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 0
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 0000 80B5     		push	{r7, lr}
 2624              	.LCFI52:
 2625              		.cfi_def_cfa_offset 8
 2626              		.cfi_offset 7, -8
 2627              		.cfi_offset 14, -4
 2628 0002 00AF     		add	r7, sp, #0
 2629              	.LCFI53:
 2630              		.cfi_def_cfa_register 7
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2631              		.loc 1 1076 6
 2632 0004 064B     		ldr	r3, .L168
 2633 0006 DB68     		ldr	r3, [r3, #12]
 2634 0008 03F08003 		and	r3, r3, #128
 2635              		.loc 1 1076 5
 2636 000c 802B     		cmp	r3, #128
 2637 000e 04D1     		bne	.L167
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2638              		.loc 1 1079 5
 2639 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2640              		.loc 1 1082 5
 2641 0014 034B     		ldr	r3, .L168+4
 2642 0016 8022     		movs	r2, #128
 2643 0018 1A70     		strb	r2, [r3]
 2644              	.L167:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2645              		.loc 1 1084 1
 2646 001a 00BF     		nop
 2647 001c 80BD     		pop	{r7, pc}
 2648              	.L169:
 2649 001e 00BF     		.align	2
ARM GAS  /tmp/ccbSHBdX.s 			page 67


 2650              	.L168:
 2651 0020 00380240 		.word	1073887232
 2652 0024 0E380240 		.word	1073887246
 2653              		.cfi_endproc
 2654              	.LFE142:
 2656              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2657              		.align	1
 2658              		.weak	HAL_RCC_CSSCallback
 2659              		.syntax unified
 2660              		.thumb
 2661              		.thumb_func
 2662              		.fpu fpv4-sp-d16
 2664              	HAL_RCC_CSSCallback:
 2665              	.LFB143:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2666              		.loc 1 1091 1
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 0
 2669              		@ frame_needed = 1, uses_anonymous_args = 0
 2670              		@ link register save eliminated.
 2671 0000 80B4     		push	{r7}
 2672              	.LCFI54:
 2673              		.cfi_def_cfa_offset 4
 2674              		.cfi_offset 7, -4
 2675 0002 00AF     		add	r7, sp, #0
 2676              	.LCFI55:
 2677              		.cfi_def_cfa_register 7
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2678              		.loc 1 1095 1
 2679 0004 00BF     		nop
 2680 0006 BD46     		mov	sp, r7
 2681              	.LCFI56:
 2682              		.cfi_def_cfa_register 13
 2683              		@ sp needed
 2684 0008 5DF8047B 		ldr	r7, [sp], #4
 2685              	.LCFI57:
 2686              		.cfi_restore 7
 2687              		.cfi_def_cfa_offset 0
 2688 000c 7047     		bx	lr
 2689              		.cfi_endproc
 2690              	.LFE143:
 2692              		.text
 2693              	.Letext0:
 2694              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2695              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2696              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2697              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2698              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  /tmp/ccbSHBdX.s 			page 68


 2699              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2700              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2701              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2702              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2703              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2704              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccbSHBdX.s 			page 69


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/ccbSHBdX.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccbSHBdX.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccbSHBdX.s:58     .rodata:0000000000000000 $d
     /tmp/ccbSHBdX.s:63     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccbSHBdX.s:70     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccbSHBdX.s:520    .text.HAL_RCC_OscConfig:00000000000002ac $d
     /tmp/ccbSHBdX.s:526    .text.HAL_RCC_OscConfig:00000000000002bc $t
     /tmp/ccbSHBdX.s:908    .text.HAL_RCC_OscConfig:000000000000052c $d
     /tmp/ccbSHBdX.s:914    .text.HAL_RCC_OscConfig:000000000000053c $t
     /tmp/ccbSHBdX.s:1088   .text.HAL_RCC_OscConfig:0000000000000638 $d
     /tmp/ccbSHBdX.s:1094   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccbSHBdX.s:1101   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccbSHBdX.s:1458   .text.HAL_RCC_ClockConfig:0000000000000218 $d
     /tmp/ccbSHBdX.s:1463   .text.HAL_RCC_ClockConfig:0000000000000224 $t
     /tmp/ccbSHBdX.s:1931   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccbSHBdX.s:1597   .text.HAL_RCC_ClockConfig:0000000000000308 $d
     /tmp/ccbSHBdX.s:1606   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccbSHBdX.s:1613   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccbSHBdX.s:1825   .text.HAL_RCC_MCOConfig:0000000000000158 $d
     /tmp/ccbSHBdX.s:1833   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccbSHBdX.s:1840   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccbSHBdX.s:1873   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/ccbSHBdX.s:1878   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccbSHBdX.s:1885   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccbSHBdX.s:1918   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/ccbSHBdX.s:1924   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccbSHBdX.s:2141   .text.HAL_RCC_GetSysClockFreq:0000000000000160 $d
     /tmp/ccbSHBdX.s:2148   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccbSHBdX.s:2155   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccbSHBdX.s:2186   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccbSHBdX.s:2191   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccbSHBdX.s:2198   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccbSHBdX.s:2232   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/ccbSHBdX.s:2238   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccbSHBdX.s:2245   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccbSHBdX.s:2279   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/ccbSHBdX.s:2285   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccbSHBdX.s:2292   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccbSHBdX.s:2511   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/ccbSHBdX.s:2516   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccbSHBdX.s:2523   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccbSHBdX.s:2604   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccbSHBdX.s:2610   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccbSHBdX.s:2617   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccbSHBdX.s:2664   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccbSHBdX.s:2651   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccbSHBdX.s:2657   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
assert_failed
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
ARM GAS  /tmp/ccbSHBdX.s 			page 70


HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
