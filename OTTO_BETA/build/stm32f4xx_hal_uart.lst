ARM GAS  /tmp/ccvnu0oO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart"
  20      6572732F 
  20      53544D33 
  20      32463478 
  20      785F4841 
  21 0033 2E6300   		.ascii	".c\000"
  22              		.section	.text.HAL_UART_Init,"ax",%progbits
  23              		.align	1
  24              		.global	HAL_UART_Init
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	HAL_UART_Init:
  32              	.LFB130:
  33              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
ARM GAS  /tmp/ccvnu0oO.s 			page 2


  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
ARM GAS  /tmp/ccvnu0oO.s 			page 3


  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
ARM GAS  /tmp/ccvnu0oO.s 			page 4


 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
ARM GAS  /tmp/ccvnu0oO.s 			page 5


 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
ARM GAS  /tmp/ccvnu0oO.s 			page 6


 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
ARM GAS  /tmp/ccvnu0oO.s 			page 7


 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  34              		.loc 1 318 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 7860     		str	r0, [r7, #4]
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  50              		.loc 1 320 6
  51 0008 7B68     		ldr	r3, [r7, #4]
  52 000a 002B     		cmp	r3, #0
  53 000c 01D1     		bne	.L2
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  54              		.loc 1 322 12
  55 000e 0123     		movs	r3, #1
  56 0010 B4E0     		b	.L3
  57              	.L2:
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
  58              		.loc 1 326 18
  59 0012 7B68     		ldr	r3, [r7, #4]
  60 0014 9B69     		ldr	r3, [r3, #24]
  61              		.loc 1 326 6
  62 0016 002B     		cmp	r3, #0
  63 0018 31D0     		beq	.L4
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
  64              		.loc 1 331 5
  65 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 8


  66 001c 1B68     		ldr	r3, [r3]
  67 001e 594A     		ldr	r2, .L10
  68 0020 9342     		cmp	r3, r2
  69 0022 13D0     		beq	.L5
  70              		.loc 1 331 5 is_stmt 0 discriminator 1
  71 0024 7B68     		ldr	r3, [r7, #4]
  72 0026 1B68     		ldr	r3, [r3]
  73 0028 574A     		ldr	r2, .L10+4
  74 002a 9342     		cmp	r3, r2
  75 002c 0ED0     		beq	.L5
  76              		.loc 1 331 5 discriminator 2
  77 002e 7B68     		ldr	r3, [r7, #4]
  78 0030 1B68     		ldr	r3, [r3]
  79 0032 564A     		ldr	r2, .L10+8
  80 0034 9342     		cmp	r3, r2
  81 0036 09D0     		beq	.L5
  82              		.loc 1 331 5 discriminator 3
  83 0038 7B68     		ldr	r3, [r7, #4]
  84 003a 1B68     		ldr	r3, [r3]
  85 003c 544A     		ldr	r2, .L10+12
  86 003e 9342     		cmp	r3, r2
  87 0040 04D0     		beq	.L5
  88              		.loc 1 331 5 discriminator 4
  89 0042 40F24B11 		movw	r1, #331
  90 0046 5348     		ldr	r0, .L10+16
  91 0048 FFF7FEFF 		bl	assert_failed
  92              	.L5:
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
  93              		.loc 1 332 5 is_stmt 1
  94 004c 7B68     		ldr	r3, [r7, #4]
  95 004e 9B69     		ldr	r3, [r3, #24]
  96 0050 002B     		cmp	r3, #0
  97 0052 37D0     		beq	.L6
  98              		.loc 1 332 5 is_stmt 0 discriminator 1
  99 0054 7B68     		ldr	r3, [r7, #4]
 100 0056 9B69     		ldr	r3, [r3, #24]
 101 0058 B3F5807F 		cmp	r3, #256
 102 005c 32D0     		beq	.L6
 103              		.loc 1 332 5 discriminator 2
 104 005e 7B68     		ldr	r3, [r7, #4]
 105 0060 9B69     		ldr	r3, [r3, #24]
 106 0062 B3F5007F 		cmp	r3, #512
 107 0066 2DD0     		beq	.L6
 108              		.loc 1 332 5 discriminator 3
 109 0068 7B68     		ldr	r3, [r7, #4]
 110 006a 9B69     		ldr	r3, [r3, #24]
 111 006c B3F5407F 		cmp	r3, #768
 112 0070 28D0     		beq	.L6
 113              		.loc 1 332 5 discriminator 4
 114 0072 4FF4A671 		mov	r1, #332
 115 0076 4748     		ldr	r0, .L10+16
 116 0078 FFF7FEFF 		bl	assert_failed
 117 007c 22E0     		b	.L6
 118              	.L4:
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccvnu0oO.s 			page 9


 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 119              		.loc 1 336 5 is_stmt 1
 120 007e 7B68     		ldr	r3, [r7, #4]
 121 0080 1B68     		ldr	r3, [r3]
 122 0082 404A     		ldr	r2, .L10
 123 0084 9342     		cmp	r3, r2
 124 0086 1DD0     		beq	.L6
 125              		.loc 1 336 5 is_stmt 0 discriminator 1
 126 0088 7B68     		ldr	r3, [r7, #4]
 127 008a 1B68     		ldr	r3, [r3]
 128 008c 3E4A     		ldr	r2, .L10+4
 129 008e 9342     		cmp	r3, r2
 130 0090 18D0     		beq	.L6
 131              		.loc 1 336 5 discriminator 2
 132 0092 7B68     		ldr	r3, [r7, #4]
 133 0094 1B68     		ldr	r3, [r3]
 134 0096 3D4A     		ldr	r2, .L10+8
 135 0098 9342     		cmp	r3, r2
 136 009a 13D0     		beq	.L6
 137              		.loc 1 336 5 discriminator 3
 138 009c 7B68     		ldr	r3, [r7, #4]
 139 009e 1B68     		ldr	r3, [r3]
 140 00a0 3D4A     		ldr	r2, .L10+20
 141 00a2 9342     		cmp	r3, r2
 142 00a4 0ED0     		beq	.L6
 143              		.loc 1 336 5 discriminator 4
 144 00a6 7B68     		ldr	r3, [r7, #4]
 145 00a8 1B68     		ldr	r3, [r3]
 146 00aa 3C4A     		ldr	r2, .L10+24
 147 00ac 9342     		cmp	r3, r2
 148 00ae 09D0     		beq	.L6
 149              		.loc 1 336 5 discriminator 5
 150 00b0 7B68     		ldr	r3, [r7, #4]
 151 00b2 1B68     		ldr	r3, [r3]
 152 00b4 364A     		ldr	r2, .L10+12
 153 00b6 9342     		cmp	r3, r2
 154 00b8 04D0     		beq	.L6
 155              		.loc 1 336 5 discriminator 6
 156 00ba 4FF4A871 		mov	r1, #336
 157 00be 3548     		ldr	r0, .L10+16
 158 00c0 FFF7FEFF 		bl	assert_failed
 159              	.L6:
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 160              		.loc 1 338 3 is_stmt 1
 161 00c4 7B68     		ldr	r3, [r7, #4]
 162 00c6 9B68     		ldr	r3, [r3, #8]
 163 00c8 002B     		cmp	r3, #0
 164 00ca 09D0     		beq	.L7
 165              		.loc 1 338 3 is_stmt 0 discriminator 1
 166 00cc 7B68     		ldr	r3, [r7, #4]
 167 00ce 9B68     		ldr	r3, [r3, #8]
 168 00d0 B3F5805F 		cmp	r3, #4096
 169 00d4 04D0     		beq	.L7
 170              		.loc 1 338 3 discriminator 2
 171 00d6 4FF4A971 		mov	r1, #338
 172 00da 2E48     		ldr	r0, .L10+16
ARM GAS  /tmp/ccvnu0oO.s 			page 10


 173 00dc FFF7FEFF 		bl	assert_failed
 174              	.L7:
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 175              		.loc 1 339 3 is_stmt 1
 176 00e0 7B68     		ldr	r3, [r7, #4]
 177 00e2 DB69     		ldr	r3, [r3, #28]
 178 00e4 002B     		cmp	r3, #0
 179 00e6 09D0     		beq	.L8
 180              		.loc 1 339 3 is_stmt 0 discriminator 1
 181 00e8 7B68     		ldr	r3, [r7, #4]
 182 00ea DB69     		ldr	r3, [r3, #28]
 183 00ec B3F5004F 		cmp	r3, #32768
 184 00f0 04D0     		beq	.L8
 185              		.loc 1 339 3 discriminator 2
 186 00f2 40F25311 		movw	r1, #339
 187 00f6 2748     		ldr	r0, .L10+16
 188 00f8 FFF7FEFF 		bl	assert_failed
 189              	.L8:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 190              		.loc 1 341 12 is_stmt 1
 191 00fc 7B68     		ldr	r3, [r7, #4]
 192 00fe 93F83930 		ldrb	r3, [r3, #57]
 193 0102 DBB2     		uxtb	r3, r3
 194              		.loc 1 341 6
 195 0104 002B     		cmp	r3, #0
 196 0106 06D1     		bne	.L9
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 197              		.loc 1 344 17
 198 0108 7B68     		ldr	r3, [r7, #4]
 199 010a 0022     		movs	r2, #0
 200 010c 83F83820 		strb	r2, [r3, #56]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 201              		.loc 1 358 5
 202 0110 7868     		ldr	r0, [r7, #4]
 203 0112 FFF7FEFF 		bl	HAL_UART_MspInit
 204              	.L9:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 205              		.loc 1 362 17
ARM GAS  /tmp/ccvnu0oO.s 			page 11


 206 0116 7B68     		ldr	r3, [r7, #4]
 207 0118 2422     		movs	r2, #36
 208 011a 83F83920 		strb	r2, [r3, #57]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 209              		.loc 1 365 3
 210 011e 7B68     		ldr	r3, [r7, #4]
 211 0120 1B68     		ldr	r3, [r3]
 212 0122 DA68     		ldr	r2, [r3, #12]
 213 0124 7B68     		ldr	r3, [r7, #4]
 214 0126 1B68     		ldr	r3, [r3]
 215 0128 22F40052 		bic	r2, r2, #8192
 216 012c DA60     		str	r2, [r3, #12]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 217              		.loc 1 368 3
 218 012e 7868     		ldr	r0, [r7, #4]
 219 0130 FFF7FEFF 		bl	UART_SetConfig
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 220              		.loc 1 373 3
 221 0134 7B68     		ldr	r3, [r7, #4]
 222 0136 1B68     		ldr	r3, [r3]
 223 0138 1A69     		ldr	r2, [r3, #16]
 224 013a 7B68     		ldr	r3, [r7, #4]
 225 013c 1B68     		ldr	r3, [r3]
 226 013e 22F49042 		bic	r2, r2, #18432
 227 0142 1A61     		str	r2, [r3, #16]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 228              		.loc 1 374 3
 229 0144 7B68     		ldr	r3, [r7, #4]
 230 0146 1B68     		ldr	r3, [r3]
 231 0148 5A69     		ldr	r2, [r3, #20]
 232 014a 7B68     		ldr	r3, [r7, #4]
 233 014c 1B68     		ldr	r3, [r3]
 234 014e 22F02A02 		bic	r2, r2, #42
 235 0152 5A61     		str	r2, [r3, #20]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 236              		.loc 1 377 3
 237 0154 7B68     		ldr	r3, [r7, #4]
 238 0156 1B68     		ldr	r3, [r3]
 239 0158 DA68     		ldr	r2, [r3, #12]
 240 015a 7B68     		ldr	r3, [r7, #4]
 241 015c 1B68     		ldr	r3, [r3]
 242 015e 42F40052 		orr	r2, r2, #8192
 243 0162 DA60     		str	r2, [r3, #12]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 244              		.loc 1 380 20
ARM GAS  /tmp/ccvnu0oO.s 			page 12


 245 0164 7B68     		ldr	r3, [r7, #4]
 246 0166 0022     		movs	r2, #0
 247 0168 DA63     		str	r2, [r3, #60]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 248              		.loc 1 381 17
 249 016a 7B68     		ldr	r3, [r7, #4]
 250 016c 2022     		movs	r2, #32
 251 016e 83F83920 		strb	r2, [r3, #57]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 252              		.loc 1 382 18
 253 0172 7B68     		ldr	r3, [r7, #4]
 254 0174 2022     		movs	r2, #32
 255 0176 83F83A20 		strb	r2, [r3, #58]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 256              		.loc 1 384 10
 257 017a 0023     		movs	r3, #0
 258              	.L3:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 259              		.loc 1 385 1
 260 017c 1846     		mov	r0, r3
 261 017e 0837     		adds	r7, r7, #8
 262              	.LCFI3:
 263              		.cfi_def_cfa_offset 8
 264 0180 BD46     		mov	sp, r7
 265              	.LCFI4:
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 0182 80BD     		pop	{r7, pc}
 269              	.L11:
 270              		.align	2
 271              	.L10:
 272 0184 00100140 		.word	1073811456
 273 0188 00440040 		.word	1073759232
 274 018c 00480040 		.word	1073760256
 275 0190 00140140 		.word	1073812480
 276 0194 00000000 		.word	.LC0
 277 0198 004C0040 		.word	1073761280
 278 019c 00500040 		.word	1073762304
 279              		.cfi_endproc
 280              	.LFE130:
 282              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 283              		.align	1
 284              		.global	HAL_HalfDuplex_Init
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	HAL_HalfDuplex_Init:
 291              	.LFB131:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccvnu0oO.s 			page 13


 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 292              		.loc 1 395 1
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              	.LCFI5:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 82B0     		sub	sp, sp, #8
 302              	.LCFI6:
 303              		.cfi_def_cfa_offset 16
 304 0004 00AF     		add	r7, sp, #0
 305              	.LCFI7:
 306              		.cfi_def_cfa_register 7
 307 0006 7860     		str	r0, [r7, #4]
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 308              		.loc 1 397 6
 309 0008 7B68     		ldr	r3, [r7, #4]
 310 000a 002B     		cmp	r3, #0
 311 000c 01D1     		bne	.L13
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 312              		.loc 1 399 12
 313 000e 0123     		movs	r3, #1
 314 0010 86E0     		b	.L14
 315              	.L13:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 316              		.loc 1 403 3
 317 0012 7B68     		ldr	r3, [r7, #4]
 318 0014 1B68     		ldr	r3, [r3]
 319 0016 444A     		ldr	r2, .L19
 320 0018 9342     		cmp	r3, r2
 321 001a 1DD0     		beq	.L15
 322              		.loc 1 403 3 is_stmt 0 discriminator 1
 323 001c 7B68     		ldr	r3, [r7, #4]
 324 001e 1B68     		ldr	r3, [r3]
 325 0020 424A     		ldr	r2, .L19+4
 326 0022 9342     		cmp	r3, r2
 327 0024 18D0     		beq	.L15
 328              		.loc 1 403 3 discriminator 2
 329 0026 7B68     		ldr	r3, [r7, #4]
 330 0028 1B68     		ldr	r3, [r3]
 331 002a 414A     		ldr	r2, .L19+8
 332 002c 9342     		cmp	r3, r2
 333 002e 13D0     		beq	.L15
 334              		.loc 1 403 3 discriminator 3
 335 0030 7B68     		ldr	r3, [r7, #4]
 336 0032 1B68     		ldr	r3, [r3]
 337 0034 3F4A     		ldr	r2, .L19+12
ARM GAS  /tmp/ccvnu0oO.s 			page 14


 338 0036 9342     		cmp	r3, r2
 339 0038 0ED0     		beq	.L15
 340              		.loc 1 403 3 discriminator 4
 341 003a 7B68     		ldr	r3, [r7, #4]
 342 003c 1B68     		ldr	r3, [r3]
 343 003e 3E4A     		ldr	r2, .L19+16
 344 0040 9342     		cmp	r3, r2
 345 0042 09D0     		beq	.L15
 346              		.loc 1 403 3 discriminator 5
 347 0044 7B68     		ldr	r3, [r7, #4]
 348 0046 1B68     		ldr	r3, [r3]
 349 0048 3C4A     		ldr	r2, .L19+20
 350 004a 9342     		cmp	r3, r2
 351 004c 04D0     		beq	.L15
 352              		.loc 1 403 3 discriminator 6
 353 004e 40F29311 		movw	r1, #403
 354 0052 3B48     		ldr	r0, .L19+24
 355 0054 FFF7FEFF 		bl	assert_failed
 356              	.L15:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 357              		.loc 1 404 3 is_stmt 1
 358 0058 7B68     		ldr	r3, [r7, #4]
 359 005a 9B68     		ldr	r3, [r3, #8]
 360 005c 002B     		cmp	r3, #0
 361 005e 09D0     		beq	.L16
 362              		.loc 1 404 3 is_stmt 0 discriminator 1
 363 0060 7B68     		ldr	r3, [r7, #4]
 364 0062 9B68     		ldr	r3, [r3, #8]
 365 0064 B3F5805F 		cmp	r3, #4096
 366 0068 04D0     		beq	.L16
 367              		.loc 1 404 3 discriminator 2
 368 006a 4FF4CA71 		mov	r1, #404
 369 006e 3448     		ldr	r0, .L19+24
 370 0070 FFF7FEFF 		bl	assert_failed
 371              	.L16:
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 372              		.loc 1 405 3 is_stmt 1
 373 0074 7B68     		ldr	r3, [r7, #4]
 374 0076 DB69     		ldr	r3, [r3, #28]
 375 0078 002B     		cmp	r3, #0
 376 007a 09D0     		beq	.L17
 377              		.loc 1 405 3 is_stmt 0 discriminator 1
 378 007c 7B68     		ldr	r3, [r7, #4]
 379 007e DB69     		ldr	r3, [r3, #28]
 380 0080 B3F5004F 		cmp	r3, #32768
 381 0084 04D0     		beq	.L17
 382              		.loc 1 405 3 discriminator 2
 383 0086 40F29511 		movw	r1, #405
 384 008a 2D48     		ldr	r0, .L19+24
 385 008c FFF7FEFF 		bl	assert_failed
 386              	.L17:
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 387              		.loc 1 407 12 is_stmt 1
 388 0090 7B68     		ldr	r3, [r7, #4]
 389 0092 93F83930 		ldrb	r3, [r3, #57]
 390 0096 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 15


 391              		.loc 1 407 6
 392 0098 002B     		cmp	r3, #0
 393 009a 06D1     		bne	.L18
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 394              		.loc 1 410 17
 395 009c 7B68     		ldr	r3, [r7, #4]
 396 009e 0022     		movs	r2, #0
 397 00a0 83F83820 		strb	r2, [r3, #56]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 398              		.loc 1 424 5
 399 00a4 7868     		ldr	r0, [r7, #4]
 400 00a6 FFF7FEFF 		bl	HAL_UART_MspInit
 401              	.L18:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 402              		.loc 1 428 17
 403 00aa 7B68     		ldr	r3, [r7, #4]
 404 00ac 2422     		movs	r2, #36
 405 00ae 83F83920 		strb	r2, [r3, #57]
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 406              		.loc 1 431 3
 407 00b2 7B68     		ldr	r3, [r7, #4]
 408 00b4 1B68     		ldr	r3, [r3]
 409 00b6 DA68     		ldr	r2, [r3, #12]
 410 00b8 7B68     		ldr	r3, [r7, #4]
 411 00ba 1B68     		ldr	r3, [r3]
 412 00bc 22F40052 		bic	r2, r2, #8192
 413 00c0 DA60     		str	r2, [r3, #12]
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 414              		.loc 1 434 3
 415 00c2 7868     		ldr	r0, [r7, #4]
 416 00c4 FFF7FEFF 		bl	UART_SetConfig
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
ARM GAS  /tmp/ccvnu0oO.s 			page 16


 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 417              		.loc 1 439 3
 418 00c8 7B68     		ldr	r3, [r7, #4]
 419 00ca 1B68     		ldr	r3, [r3]
 420 00cc 1A69     		ldr	r2, [r3, #16]
 421 00ce 7B68     		ldr	r3, [r7, #4]
 422 00d0 1B68     		ldr	r3, [r3]
 423 00d2 22F49042 		bic	r2, r2, #18432
 424 00d6 1A61     		str	r2, [r3, #16]
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 425              		.loc 1 440 3
 426 00d8 7B68     		ldr	r3, [r7, #4]
 427 00da 1B68     		ldr	r3, [r3]
 428 00dc 5A69     		ldr	r2, [r3, #20]
 429 00de 7B68     		ldr	r3, [r7, #4]
 430 00e0 1B68     		ldr	r3, [r3]
 431 00e2 22F02202 		bic	r2, r2, #34
 432 00e6 5A61     		str	r2, [r3, #20]
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 433              		.loc 1 443 3
 434 00e8 7B68     		ldr	r3, [r7, #4]
 435 00ea 1B68     		ldr	r3, [r3]
 436 00ec 5A69     		ldr	r2, [r3, #20]
 437 00ee 7B68     		ldr	r3, [r7, #4]
 438 00f0 1B68     		ldr	r3, [r3]
 439 00f2 42F00802 		orr	r2, r2, #8
 440 00f6 5A61     		str	r2, [r3, #20]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 441              		.loc 1 446 3
 442 00f8 7B68     		ldr	r3, [r7, #4]
 443 00fa 1B68     		ldr	r3, [r3]
 444 00fc DA68     		ldr	r2, [r3, #12]
 445 00fe 7B68     		ldr	r3, [r7, #4]
 446 0100 1B68     		ldr	r3, [r3]
 447 0102 42F40052 		orr	r2, r2, #8192
 448 0106 DA60     		str	r2, [r3, #12]
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 449              		.loc 1 449 20
 450 0108 7B68     		ldr	r3, [r7, #4]
 451 010a 0022     		movs	r2, #0
 452 010c DA63     		str	r2, [r3, #60]
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 453              		.loc 1 450 17
 454 010e 7B68     		ldr	r3, [r7, #4]
 455 0110 2022     		movs	r2, #32
 456 0112 83F83920 		strb	r2, [r3, #57]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 457              		.loc 1 451 18
 458 0116 7B68     		ldr	r3, [r7, #4]
 459 0118 2022     		movs	r2, #32
 460 011a 83F83A20 		strb	r2, [r3, #58]
ARM GAS  /tmp/ccvnu0oO.s 			page 17


 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 461              		.loc 1 453 10
 462 011e 0023     		movs	r3, #0
 463              	.L14:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 464              		.loc 1 454 1
 465 0120 1846     		mov	r0, r3
 466 0122 0837     		adds	r7, r7, #8
 467              	.LCFI8:
 468              		.cfi_def_cfa_offset 8
 469 0124 BD46     		mov	sp, r7
 470              	.LCFI9:
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 0126 80BD     		pop	{r7, pc}
 474              	.L20:
 475              		.align	2
 476              	.L19:
 477 0128 00100140 		.word	1073811456
 478 012c 00440040 		.word	1073759232
 479 0130 00480040 		.word	1073760256
 480 0134 004C0040 		.word	1073761280
 481 0138 00500040 		.word	1073762304
 482 013c 00140140 		.word	1073812480
 483 0140 00000000 		.word	.LC0
 484              		.cfi_endproc
 485              	.LFE131:
 487              		.section	.text.HAL_LIN_Init,"ax",%progbits
 488              		.align	1
 489              		.global	HAL_LIN_Init
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	HAL_LIN_Init:
 496              	.LFB132:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 497              		.loc 1 468 1
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 8
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501 0000 80B5     		push	{r7, lr}
 502              	.LCFI10:
ARM GAS  /tmp/ccvnu0oO.s 			page 18


 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 82B0     		sub	sp, sp, #8
 507              	.LCFI11:
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI12:
 511              		.cfi_def_cfa_register 7
 512 0006 7860     		str	r0, [r7, #4]
 513 0008 3960     		str	r1, [r7]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 514              		.loc 1 470 6
 515 000a 7B68     		ldr	r3, [r7, #4]
 516 000c 002B     		cmp	r3, #0
 517 000e 01D1     		bne	.L22
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 518              		.loc 1 472 12
 519 0010 0123     		movs	r3, #1
 520 0012 97E0     		b	.L23
 521              	.L22:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 522              		.loc 1 476 3
 523 0014 7B68     		ldr	r3, [r7, #4]
 524 0016 1B68     		ldr	r3, [r3]
 525 0018 4C4A     		ldr	r2, .L29
 526 001a 9342     		cmp	r3, r2
 527 001c 1DD0     		beq	.L24
 528              		.loc 1 476 3 is_stmt 0 discriminator 1
 529 001e 7B68     		ldr	r3, [r7, #4]
 530 0020 1B68     		ldr	r3, [r3]
 531 0022 4B4A     		ldr	r2, .L29+4
 532 0024 9342     		cmp	r3, r2
 533 0026 18D0     		beq	.L24
 534              		.loc 1 476 3 discriminator 2
 535 0028 7B68     		ldr	r3, [r7, #4]
 536 002a 1B68     		ldr	r3, [r3]
 537 002c 494A     		ldr	r2, .L29+8
 538 002e 9342     		cmp	r3, r2
 539 0030 13D0     		beq	.L24
 540              		.loc 1 476 3 discriminator 3
 541 0032 7B68     		ldr	r3, [r7, #4]
 542 0034 1B68     		ldr	r3, [r3]
 543 0036 484A     		ldr	r2, .L29+12
 544 0038 9342     		cmp	r3, r2
 545 003a 0ED0     		beq	.L24
 546              		.loc 1 476 3 discriminator 4
 547 003c 7B68     		ldr	r3, [r7, #4]
 548 003e 1B68     		ldr	r3, [r3]
 549 0040 464A     		ldr	r2, .L29+16
 550 0042 9342     		cmp	r3, r2
 551 0044 09D0     		beq	.L24
ARM GAS  /tmp/ccvnu0oO.s 			page 19


 552              		.loc 1 476 3 discriminator 5
 553 0046 7B68     		ldr	r3, [r7, #4]
 554 0048 1B68     		ldr	r3, [r3]
 555 004a 454A     		ldr	r2, .L29+20
 556 004c 9342     		cmp	r3, r2
 557 004e 04D0     		beq	.L24
 558              		.loc 1 476 3 discriminator 6
 559 0050 4FF4EE71 		mov	r1, #476
 560 0054 4348     		ldr	r0, .L29+24
 561 0056 FFF7FEFF 		bl	assert_failed
 562              	.L24:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 563              		.loc 1 479 3 is_stmt 1
 564 005a 3B68     		ldr	r3, [r7]
 565 005c 002B     		cmp	r3, #0
 566 005e 07D0     		beq	.L25
 567              		.loc 1 479 3 is_stmt 0 discriminator 1
 568 0060 3B68     		ldr	r3, [r7]
 569 0062 202B     		cmp	r3, #32
 570 0064 04D0     		beq	.L25
 571              		.loc 1 479 3 discriminator 2
 572 0066 40F2DF11 		movw	r1, #479
 573 006a 3E48     		ldr	r0, .L29+24
 574 006c FFF7FEFF 		bl	assert_failed
 575              	.L25:
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 576              		.loc 1 480 3 is_stmt 1
 577 0070 7B68     		ldr	r3, [r7, #4]
 578 0072 9B68     		ldr	r3, [r3, #8]
 579 0074 002B     		cmp	r3, #0
 580 0076 04D0     		beq	.L26
 581              		.loc 1 480 3 is_stmt 0 discriminator 1
 582 0078 4FF4F071 		mov	r1, #480
 583 007c 3948     		ldr	r0, .L29+24
 584 007e FFF7FEFF 		bl	assert_failed
 585              	.L26:
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 586              		.loc 1 481 3 is_stmt 1
 587 0082 7B68     		ldr	r3, [r7, #4]
 588 0084 DB69     		ldr	r3, [r3, #28]
 589 0086 002B     		cmp	r3, #0
 590 0088 04D0     		beq	.L27
 591              		.loc 1 481 3 is_stmt 0 discriminator 1
 592 008a 40F2E111 		movw	r1, #481
 593 008e 3548     		ldr	r0, .L29+24
 594 0090 FFF7FEFF 		bl	assert_failed
 595              	.L27:
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 596              		.loc 1 483 12 is_stmt 1
 597 0094 7B68     		ldr	r3, [r7, #4]
 598 0096 93F83930 		ldrb	r3, [r3, #57]
 599 009a DBB2     		uxtb	r3, r3
 600              		.loc 1 483 6
 601 009c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccvnu0oO.s 			page 20


 602 009e 06D1     		bne	.L28
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 603              		.loc 1 486 17
 604 00a0 7B68     		ldr	r3, [r7, #4]
 605 00a2 0022     		movs	r2, #0
 606 00a4 83F83820 		strb	r2, [r3, #56]
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 607              		.loc 1 500 5
 608 00a8 7868     		ldr	r0, [r7, #4]
 609 00aa FFF7FEFF 		bl	HAL_UART_MspInit
 610              	.L28:
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 611              		.loc 1 504 17
 612 00ae 7B68     		ldr	r3, [r7, #4]
 613 00b0 2422     		movs	r2, #36
 614 00b2 83F83920 		strb	r2, [r3, #57]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 615              		.loc 1 507 3
 616 00b6 7B68     		ldr	r3, [r7, #4]
 617 00b8 1B68     		ldr	r3, [r3]
 618 00ba DA68     		ldr	r2, [r3, #12]
 619 00bc 7B68     		ldr	r3, [r7, #4]
 620 00be 1B68     		ldr	r3, [r3]
 621 00c0 22F40052 		bic	r2, r2, #8192
 622 00c4 DA60     		str	r2, [r3, #12]
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 623              		.loc 1 510 3
 624 00c6 7868     		ldr	r0, [r7, #4]
 625 00c8 FFF7FEFF 		bl	UART_SetConfig
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 626              		.loc 1 515 3
ARM GAS  /tmp/ccvnu0oO.s 			page 21


 627 00cc 7B68     		ldr	r3, [r7, #4]
 628 00ce 1B68     		ldr	r3, [r3]
 629 00d0 1A69     		ldr	r2, [r3, #16]
 630 00d2 7B68     		ldr	r3, [r7, #4]
 631 00d4 1B68     		ldr	r3, [r3]
 632 00d6 22F40062 		bic	r2, r2, #2048
 633 00da 1A61     		str	r2, [r3, #16]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 634              		.loc 1 516 3
 635 00dc 7B68     		ldr	r3, [r7, #4]
 636 00de 1B68     		ldr	r3, [r3]
 637 00e0 5A69     		ldr	r2, [r3, #20]
 638 00e2 7B68     		ldr	r3, [r7, #4]
 639 00e4 1B68     		ldr	r3, [r3]
 640 00e6 22F02A02 		bic	r2, r2, #42
 641 00ea 5A61     		str	r2, [r3, #20]
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 642              		.loc 1 519 3
 643 00ec 7B68     		ldr	r3, [r7, #4]
 644 00ee 1B68     		ldr	r3, [r3]
 645 00f0 1A69     		ldr	r2, [r3, #16]
 646 00f2 7B68     		ldr	r3, [r7, #4]
 647 00f4 1B68     		ldr	r3, [r3]
 648 00f6 42F48042 		orr	r2, r2, #16384
 649 00fa 1A61     		str	r2, [r3, #16]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 650              		.loc 1 522 3
 651 00fc 7B68     		ldr	r3, [r7, #4]
 652 00fe 1B68     		ldr	r3, [r3]
 653 0100 1A69     		ldr	r2, [r3, #16]
 654 0102 7B68     		ldr	r3, [r7, #4]
 655 0104 1B68     		ldr	r3, [r3]
 656 0106 22F02002 		bic	r2, r2, #32
 657 010a 1A61     		str	r2, [r3, #16]
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 658              		.loc 1 523 3
 659 010c 7B68     		ldr	r3, [r7, #4]
 660 010e 1B68     		ldr	r3, [r3]
 661 0110 1969     		ldr	r1, [r3, #16]
 662 0112 7B68     		ldr	r3, [r7, #4]
 663 0114 1B68     		ldr	r3, [r3]
 664 0116 3A68     		ldr	r2, [r7]
 665 0118 0A43     		orrs	r2, r2, r1
 666 011a 1A61     		str	r2, [r3, #16]
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 667              		.loc 1 526 3
 668 011c 7B68     		ldr	r3, [r7, #4]
 669 011e 1B68     		ldr	r3, [r3]
 670 0120 DA68     		ldr	r2, [r3, #12]
 671 0122 7B68     		ldr	r3, [r7, #4]
 672 0124 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvnu0oO.s 			page 22


 673 0126 42F40052 		orr	r2, r2, #8192
 674 012a DA60     		str	r2, [r3, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 675              		.loc 1 529 20
 676 012c 7B68     		ldr	r3, [r7, #4]
 677 012e 0022     		movs	r2, #0
 678 0130 DA63     		str	r2, [r3, #60]
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 679              		.loc 1 530 17
 680 0132 7B68     		ldr	r3, [r7, #4]
 681 0134 2022     		movs	r2, #32
 682 0136 83F83920 		strb	r2, [r3, #57]
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 683              		.loc 1 531 18
 684 013a 7B68     		ldr	r3, [r7, #4]
 685 013c 2022     		movs	r2, #32
 686 013e 83F83A20 		strb	r2, [r3, #58]
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 687              		.loc 1 533 10
 688 0142 0023     		movs	r3, #0
 689              	.L23:
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 690              		.loc 1 534 1
 691 0144 1846     		mov	r0, r3
 692 0146 0837     		adds	r7, r7, #8
 693              	.LCFI13:
 694              		.cfi_def_cfa_offset 8
 695 0148 BD46     		mov	sp, r7
 696              	.LCFI14:
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 014a 80BD     		pop	{r7, pc}
 700              	.L30:
 701              		.align	2
 702              	.L29:
 703 014c 00100140 		.word	1073811456
 704 0150 00440040 		.word	1073759232
 705 0154 00480040 		.word	1073760256
 706 0158 004C0040 		.word	1073761280
 707 015c 00500040 		.word	1073762304
 708 0160 00140140 		.word	1073812480
 709 0164 00000000 		.word	.LC0
 710              		.cfi_endproc
 711              	.LFE132:
 713              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 714              		.align	1
 715              		.global	HAL_MultiProcessor_Init
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	HAL_MultiProcessor_Init:
 722              	.LFB133:
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 23


 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 723              		.loc 1 549 1
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 16
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727 0000 80B5     		push	{r7, lr}
 728              	.LCFI15:
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 84B0     		sub	sp, sp, #16
 733              	.LCFI16:
 734              		.cfi_def_cfa_offset 24
 735 0004 00AF     		add	r7, sp, #0
 736              	.LCFI17:
 737              		.cfi_def_cfa_register 7
 738 0006 F860     		str	r0, [r7, #12]
 739 0008 0B46     		mov	r3, r1
 740 000a 7A60     		str	r2, [r7, #4]
 741 000c FB72     		strb	r3, [r7, #11]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 742              		.loc 1 551 6
 743 000e FB68     		ldr	r3, [r7, #12]
 744 0010 002B     		cmp	r3, #0
 745 0012 01D1     		bne	.L32
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 746              		.loc 1 553 12
 747 0014 0123     		movs	r3, #1
 748 0016 B2E0     		b	.L33
 749              	.L32:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 750              		.loc 1 557 3
 751 0018 FB68     		ldr	r3, [r7, #12]
 752 001a 1B68     		ldr	r3, [r3]
 753 001c 5A4A     		ldr	r2, .L40
 754 001e 9342     		cmp	r3, r2
 755 0020 1DD0     		beq	.L34
 756              		.loc 1 557 3 is_stmt 0 discriminator 1
 757 0022 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvnu0oO.s 			page 24


 758 0024 1B68     		ldr	r3, [r3]
 759 0026 594A     		ldr	r2, .L40+4
 760 0028 9342     		cmp	r3, r2
 761 002a 18D0     		beq	.L34
 762              		.loc 1 557 3 discriminator 2
 763 002c FB68     		ldr	r3, [r7, #12]
 764 002e 1B68     		ldr	r3, [r3]
 765 0030 574A     		ldr	r2, .L40+8
 766 0032 9342     		cmp	r3, r2
 767 0034 13D0     		beq	.L34
 768              		.loc 1 557 3 discriminator 3
 769 0036 FB68     		ldr	r3, [r7, #12]
 770 0038 1B68     		ldr	r3, [r3]
 771 003a 564A     		ldr	r2, .L40+12
 772 003c 9342     		cmp	r3, r2
 773 003e 0ED0     		beq	.L34
 774              		.loc 1 557 3 discriminator 4
 775 0040 FB68     		ldr	r3, [r7, #12]
 776 0042 1B68     		ldr	r3, [r3]
 777 0044 544A     		ldr	r2, .L40+16
 778 0046 9342     		cmp	r3, r2
 779 0048 09D0     		beq	.L34
 780              		.loc 1 557 3 discriminator 5
 781 004a FB68     		ldr	r3, [r7, #12]
 782 004c 1B68     		ldr	r3, [r3]
 783 004e 534A     		ldr	r2, .L40+20
 784 0050 9342     		cmp	r3, r2
 785 0052 04D0     		beq	.L34
 786              		.loc 1 557 3 discriminator 6
 787 0054 40F22D21 		movw	r1, #557
 788 0058 5148     		ldr	r0, .L40+24
 789 005a FFF7FEFF 		bl	assert_failed
 790              	.L34:
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 791              		.loc 1 560 3 is_stmt 1
 792 005e 7B68     		ldr	r3, [r7, #4]
 793 0060 002B     		cmp	r3, #0
 794 0062 08D0     		beq	.L35
 795              		.loc 1 560 3 is_stmt 0 discriminator 1
 796 0064 7B68     		ldr	r3, [r7, #4]
 797 0066 B3F5006F 		cmp	r3, #2048
 798 006a 04D0     		beq	.L35
 799              		.loc 1 560 3 discriminator 2
 800 006c 4FF40C71 		mov	r1, #560
 801 0070 4B48     		ldr	r0, .L40+24
 802 0072 FFF7FEFF 		bl	assert_failed
 803              	.L35:
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 804              		.loc 1 561 3 is_stmt 1
 805 0076 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 806 0078 0F2B     		cmp	r3, #15
 807 007a 04D9     		bls	.L36
 808              		.loc 1 561 3 is_stmt 0 discriminator 1
 809 007c 40F23121 		movw	r1, #561
 810 0080 4748     		ldr	r0, .L40+24
ARM GAS  /tmp/ccvnu0oO.s 			page 25


 811 0082 FFF7FEFF 		bl	assert_failed
 812              	.L36:
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 813              		.loc 1 562 3 is_stmt 1
 814 0086 FB68     		ldr	r3, [r7, #12]
 815 0088 9B68     		ldr	r3, [r3, #8]
 816 008a 002B     		cmp	r3, #0
 817 008c 09D0     		beq	.L37
 818              		.loc 1 562 3 is_stmt 0 discriminator 1
 819 008e FB68     		ldr	r3, [r7, #12]
 820 0090 9B68     		ldr	r3, [r3, #8]
 821 0092 B3F5805F 		cmp	r3, #4096
 822 0096 04D0     		beq	.L37
 823              		.loc 1 562 3 discriminator 2
 824 0098 40F23221 		movw	r1, #562
 825 009c 4048     		ldr	r0, .L40+24
 826 009e FFF7FEFF 		bl	assert_failed
 827              	.L37:
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 828              		.loc 1 563 3 is_stmt 1
 829 00a2 FB68     		ldr	r3, [r7, #12]
 830 00a4 DB69     		ldr	r3, [r3, #28]
 831 00a6 002B     		cmp	r3, #0
 832 00a8 09D0     		beq	.L38
 833              		.loc 1 563 3 is_stmt 0 discriminator 1
 834 00aa FB68     		ldr	r3, [r7, #12]
 835 00ac DB69     		ldr	r3, [r3, #28]
 836 00ae B3F5004F 		cmp	r3, #32768
 837 00b2 04D0     		beq	.L38
 838              		.loc 1 563 3 discriminator 2
 839 00b4 40F23321 		movw	r1, #563
 840 00b8 3948     		ldr	r0, .L40+24
 841 00ba FFF7FEFF 		bl	assert_failed
 842              	.L38:
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 843              		.loc 1 565 12 is_stmt 1
 844 00be FB68     		ldr	r3, [r7, #12]
 845 00c0 93F83930 		ldrb	r3, [r3, #57]
 846 00c4 DBB2     		uxtb	r3, r3
 847              		.loc 1 565 6
 848 00c6 002B     		cmp	r3, #0
 849 00c8 06D1     		bne	.L39
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 850              		.loc 1 568 17
 851 00ca FB68     		ldr	r3, [r7, #12]
 852 00cc 0022     		movs	r2, #0
 853 00ce 83F83820 		strb	r2, [r3, #56]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
ARM GAS  /tmp/ccvnu0oO.s 			page 26


 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 854              		.loc 1 582 5
 855 00d2 F868     		ldr	r0, [r7, #12]
 856 00d4 FFF7FEFF 		bl	HAL_UART_MspInit
 857              	.L39:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 858              		.loc 1 586 17
 859 00d8 FB68     		ldr	r3, [r7, #12]
 860 00da 2422     		movs	r2, #36
 861 00dc 83F83920 		strb	r2, [r3, #57]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 862              		.loc 1 589 3
 863 00e0 FB68     		ldr	r3, [r7, #12]
 864 00e2 1B68     		ldr	r3, [r3]
 865 00e4 DA68     		ldr	r2, [r3, #12]
 866 00e6 FB68     		ldr	r3, [r7, #12]
 867 00e8 1B68     		ldr	r3, [r3]
 868 00ea 22F40052 		bic	r2, r2, #8192
 869 00ee DA60     		str	r2, [r3, #12]
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 870              		.loc 1 592 3
 871 00f0 F868     		ldr	r0, [r7, #12]
 872 00f2 FFF7FEFF 		bl	UART_SetConfig
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 873              		.loc 1 597 3
 874 00f6 FB68     		ldr	r3, [r7, #12]
 875 00f8 1B68     		ldr	r3, [r3]
 876 00fa 1A69     		ldr	r2, [r3, #16]
 877 00fc FB68     		ldr	r3, [r7, #12]
 878 00fe 1B68     		ldr	r3, [r3]
 879 0100 22F49042 		bic	r2, r2, #18432
 880 0104 1A61     		str	r2, [r3, #16]
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 881              		.loc 1 598 3
 882 0106 FB68     		ldr	r3, [r7, #12]
 883 0108 1B68     		ldr	r3, [r3]
 884 010a 5A69     		ldr	r2, [r3, #20]
 885 010c FB68     		ldr	r3, [r7, #12]
 886 010e 1B68     		ldr	r3, [r3]
 887 0110 22F02A02 		bic	r2, r2, #42
ARM GAS  /tmp/ccvnu0oO.s 			page 27


 888 0114 5A61     		str	r2, [r3, #20]
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 889              		.loc 1 601 3
 890 0116 FB68     		ldr	r3, [r7, #12]
 891 0118 1B68     		ldr	r3, [r3]
 892 011a 1A69     		ldr	r2, [r3, #16]
 893 011c FB68     		ldr	r3, [r7, #12]
 894 011e 1B68     		ldr	r3, [r3]
 895 0120 22F00F02 		bic	r2, r2, #15
 896 0124 1A61     		str	r2, [r3, #16]
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 897              		.loc 1 602 3
 898 0126 FB68     		ldr	r3, [r7, #12]
 899 0128 1B68     		ldr	r3, [r3]
 900 012a 1969     		ldr	r1, [r3, #16]
 901 012c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 902 012e FB68     		ldr	r3, [r7, #12]
 903 0130 1B68     		ldr	r3, [r3]
 904 0132 0A43     		orrs	r2, r2, r1
 905 0134 1A61     		str	r2, [r3, #16]
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 906              		.loc 1 605 3
 907 0136 FB68     		ldr	r3, [r7, #12]
 908 0138 1B68     		ldr	r3, [r3]
 909 013a DA68     		ldr	r2, [r3, #12]
 910 013c FB68     		ldr	r3, [r7, #12]
 911 013e 1B68     		ldr	r3, [r3]
 912 0140 22F40062 		bic	r2, r2, #2048
 913 0144 DA60     		str	r2, [r3, #12]
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 914              		.loc 1 606 3
 915 0146 FB68     		ldr	r3, [r7, #12]
 916 0148 1B68     		ldr	r3, [r3]
 917 014a D968     		ldr	r1, [r3, #12]
 918 014c FB68     		ldr	r3, [r7, #12]
 919 014e 1B68     		ldr	r3, [r3]
 920 0150 7A68     		ldr	r2, [r7, #4]
 921 0152 0A43     		orrs	r2, r2, r1
 922 0154 DA60     		str	r2, [r3, #12]
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 923              		.loc 1 609 3
 924 0156 FB68     		ldr	r3, [r7, #12]
 925 0158 1B68     		ldr	r3, [r3]
 926 015a DA68     		ldr	r2, [r3, #12]
 927 015c FB68     		ldr	r3, [r7, #12]
 928 015e 1B68     		ldr	r3, [r3]
 929 0160 42F40052 		orr	r2, r2, #8192
 930 0164 DA60     		str	r2, [r3, #12]
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccvnu0oO.s 			page 28


 931              		.loc 1 612 20
 932 0166 FB68     		ldr	r3, [r7, #12]
 933 0168 0022     		movs	r2, #0
 934 016a DA63     		str	r2, [r3, #60]
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 935              		.loc 1 613 17
 936 016c FB68     		ldr	r3, [r7, #12]
 937 016e 2022     		movs	r2, #32
 938 0170 83F83920 		strb	r2, [r3, #57]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 939              		.loc 1 614 18
 940 0174 FB68     		ldr	r3, [r7, #12]
 941 0176 2022     		movs	r2, #32
 942 0178 83F83A20 		strb	r2, [r3, #58]
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 943              		.loc 1 616 10
 944 017c 0023     		movs	r3, #0
 945              	.L33:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 946              		.loc 1 617 1
 947 017e 1846     		mov	r0, r3
 948 0180 1037     		adds	r7, r7, #16
 949              	.LCFI18:
 950              		.cfi_def_cfa_offset 8
 951 0182 BD46     		mov	sp, r7
 952              	.LCFI19:
 953              		.cfi_def_cfa_register 13
 954              		@ sp needed
 955 0184 80BD     		pop	{r7, pc}
 956              	.L41:
 957 0186 00BF     		.align	2
 958              	.L40:
 959 0188 00100140 		.word	1073811456
 960 018c 00440040 		.word	1073759232
 961 0190 00480040 		.word	1073760256
 962 0194 004C0040 		.word	1073761280
 963 0198 00500040 		.word	1073762304
 964 019c 00140140 		.word	1073812480
 965 01a0 00000000 		.word	.LC0
 966              		.cfi_endproc
 967              	.LFE133:
 969              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 970              		.align	1
 971              		.global	HAL_UART_DeInit
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu fpv4-sp-d16
 977              	HAL_UART_DeInit:
 978              	.LFB134:
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccvnu0oO.s 			page 29


 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 979              		.loc 1 626 1
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 8
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983 0000 80B5     		push	{r7, lr}
 984              	.LCFI20:
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 82B0     		sub	sp, sp, #8
 989              	.LCFI21:
 990              		.cfi_def_cfa_offset 16
 991 0004 00AF     		add	r7, sp, #0
 992              	.LCFI22:
 993              		.cfi_def_cfa_register 7
 994 0006 7860     		str	r0, [r7, #4]
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 995              		.loc 1 628 6
 996 0008 7B68     		ldr	r3, [r7, #4]
 997 000a 002B     		cmp	r3, #0
 998 000c 01D1     		bne	.L43
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 999              		.loc 1 630 12
 1000 000e 0123     		movs	r3, #1
 1001 0010 41E0     		b	.L44
 1002              	.L43:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 1003              		.loc 1 634 3
 1004 0012 7B68     		ldr	r3, [r7, #4]
 1005 0014 1B68     		ldr	r3, [r3]
 1006 0016 224A     		ldr	r2, .L46
 1007 0018 9342     		cmp	r3, r2
 1008 001a 1DD0     		beq	.L45
 1009              		.loc 1 634 3 is_stmt 0 discriminator 1
 1010 001c 7B68     		ldr	r3, [r7, #4]
 1011 001e 1B68     		ldr	r3, [r3]
 1012 0020 204A     		ldr	r2, .L46+4
 1013 0022 9342     		cmp	r3, r2
 1014 0024 18D0     		beq	.L45
 1015              		.loc 1 634 3 discriminator 2
 1016 0026 7B68     		ldr	r3, [r7, #4]
 1017 0028 1B68     		ldr	r3, [r3]
 1018 002a 1F4A     		ldr	r2, .L46+8
 1019 002c 9342     		cmp	r3, r2
 1020 002e 13D0     		beq	.L45
 1021              		.loc 1 634 3 discriminator 3
 1022 0030 7B68     		ldr	r3, [r7, #4]
 1023 0032 1B68     		ldr	r3, [r3]
 1024 0034 1D4A     		ldr	r2, .L46+12
ARM GAS  /tmp/ccvnu0oO.s 			page 30


 1025 0036 9342     		cmp	r3, r2
 1026 0038 0ED0     		beq	.L45
 1027              		.loc 1 634 3 discriminator 4
 1028 003a 7B68     		ldr	r3, [r7, #4]
 1029 003c 1B68     		ldr	r3, [r3]
 1030 003e 1C4A     		ldr	r2, .L46+16
 1031 0040 9342     		cmp	r3, r2
 1032 0042 09D0     		beq	.L45
 1033              		.loc 1 634 3 discriminator 5
 1034 0044 7B68     		ldr	r3, [r7, #4]
 1035 0046 1B68     		ldr	r3, [r3]
 1036 0048 1A4A     		ldr	r2, .L46+20
 1037 004a 9342     		cmp	r3, r2
 1038 004c 04D0     		beq	.L45
 1039              		.loc 1 634 3 discriminator 6
 1040 004e 40F27A21 		movw	r1, #634
 1041 0052 1948     		ldr	r0, .L46+24
 1042 0054 FFF7FEFF 		bl	assert_failed
 1043              	.L45:
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1044              		.loc 1 636 17 is_stmt 1
 1045 0058 7B68     		ldr	r3, [r7, #4]
 1046 005a 2422     		movs	r2, #36
 1047 005c 83F83920 		strb	r2, [r3, #57]
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 1048              		.loc 1 639 3
 1049 0060 7B68     		ldr	r3, [r7, #4]
 1050 0062 1B68     		ldr	r3, [r3]
 1051 0064 DA68     		ldr	r2, [r3, #12]
 1052 0066 7B68     		ldr	r3, [r7, #4]
 1053 0068 1B68     		ldr	r3, [r3]
 1054 006a 22F40052 		bic	r2, r2, #8192
 1055 006e DA60     		str	r2, [r3, #12]
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 1056              		.loc 1 650 3
 1057 0070 7868     		ldr	r0, [r7, #4]
 1058 0072 FFF7FEFF 		bl	HAL_UART_MspDeInit
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1059              		.loc 1 653 20
 1060 0076 7B68     		ldr	r3, [r7, #4]
 1061 0078 0022     		movs	r2, #0
 1062 007a DA63     		str	r2, [r3, #60]
ARM GAS  /tmp/ccvnu0oO.s 			page 31


 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1063              		.loc 1 654 17
 1064 007c 7B68     		ldr	r3, [r7, #4]
 1065 007e 0022     		movs	r2, #0
 1066 0080 83F83920 		strb	r2, [r3, #57]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1067              		.loc 1 655 18
 1068 0084 7B68     		ldr	r3, [r7, #4]
 1069 0086 0022     		movs	r2, #0
 1070 0088 83F83A20 		strb	r2, [r3, #58]
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1071              		.loc 1 658 3
 1072 008c 7B68     		ldr	r3, [r7, #4]
 1073 008e 0022     		movs	r2, #0
 1074 0090 83F83820 		strb	r2, [r3, #56]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1075              		.loc 1 660 10
 1076 0094 0023     		movs	r3, #0
 1077              	.L44:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1078              		.loc 1 661 1
 1079 0096 1846     		mov	r0, r3
 1080 0098 0837     		adds	r7, r7, #8
 1081              	.LCFI23:
 1082              		.cfi_def_cfa_offset 8
 1083 009a BD46     		mov	sp, r7
 1084              	.LCFI24:
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 009c 80BD     		pop	{r7, pc}
 1088              	.L47:
 1089 009e 00BF     		.align	2
 1090              	.L46:
 1091 00a0 00100140 		.word	1073811456
 1092 00a4 00440040 		.word	1073759232
 1093 00a8 00480040 		.word	1073760256
 1094 00ac 004C0040 		.word	1073761280
 1095 00b0 00500040 		.word	1073762304
 1096 00b4 00140140 		.word	1073812480
 1097 00b8 00000000 		.word	.LC0
 1098              		.cfi_endproc
 1099              	.LFE134:
 1101              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 1102              		.align	1
 1103              		.weak	HAL_UART_MspInit
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv4-sp-d16
 1109              	HAL_UART_MspInit:
 1110              	.LFB135:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
ARM GAS  /tmp/ccvnu0oO.s 			page 32


 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1111              		.loc 1 670 1
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 8
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
 1116 0000 80B4     		push	{r7}
 1117              	.LCFI25:
 1118              		.cfi_def_cfa_offset 4
 1119              		.cfi_offset 7, -4
 1120 0002 83B0     		sub	sp, sp, #12
 1121              	.LCFI26:
 1122              		.cfi_def_cfa_offset 16
 1123 0004 00AF     		add	r7, sp, #0
 1124              	.LCFI27:
 1125              		.cfi_def_cfa_register 7
 1126 0006 7860     		str	r0, [r7, #4]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1127              		.loc 1 676 1
 1128 0008 00BF     		nop
 1129 000a 0C37     		adds	r7, r7, #12
 1130              	.LCFI28:
 1131              		.cfi_def_cfa_offset 4
 1132 000c BD46     		mov	sp, r7
 1133              	.LCFI29:
 1134              		.cfi_def_cfa_register 13
 1135              		@ sp needed
 1136 000e 5DF8047B 		ldr	r7, [sp], #4
 1137              	.LCFI30:
 1138              		.cfi_restore 7
 1139              		.cfi_def_cfa_offset 0
 1140 0012 7047     		bx	lr
 1141              		.cfi_endproc
 1142              	.LFE135:
 1144              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1145              		.align	1
 1146              		.weak	HAL_UART_MspDeInit
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	HAL_UART_MspDeInit:
 1153              	.LFB136:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccvnu0oO.s 			page 33


 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1154              		.loc 1 685 1
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 8
 1157              		@ frame_needed = 1, uses_anonymous_args = 0
 1158              		@ link register save eliminated.
 1159 0000 80B4     		push	{r7}
 1160              	.LCFI31:
 1161              		.cfi_def_cfa_offset 4
 1162              		.cfi_offset 7, -4
 1163 0002 83B0     		sub	sp, sp, #12
 1164              	.LCFI32:
 1165              		.cfi_def_cfa_offset 16
 1166 0004 00AF     		add	r7, sp, #0
 1167              	.LCFI33:
 1168              		.cfi_def_cfa_register 7
 1169 0006 7860     		str	r0, [r7, #4]
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1170              		.loc 1 691 1
 1171 0008 00BF     		nop
 1172 000a 0C37     		adds	r7, r7, #12
 1173              	.LCFI34:
 1174              		.cfi_def_cfa_offset 4
 1175 000c BD46     		mov	sp, r7
 1176              	.LCFI35:
 1177              		.cfi_def_cfa_register 13
 1178              		@ sp needed
 1179 000e 5DF8047B 		ldr	r7, [sp], #4
 1180              	.LCFI36:
 1181              		.cfi_restore 7
 1182              		.cfi_def_cfa_offset 0
 1183 0012 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE136:
 1187              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1188              		.align	1
 1189              		.global	HAL_UART_Transmit
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	HAL_UART_Transmit:
 1196              	.LFB137:
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
ARM GAS  /tmp/ccvnu0oO.s 			page 34


 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccvnu0oO.s 			page 35


 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
ARM GAS  /tmp/ccvnu0oO.s 			page 36


 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccvnu0oO.s 			page 37


 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
ARM GAS  /tmp/ccvnu0oO.s 			page 38


 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
ARM GAS  /tmp/ccvnu0oO.s 			page 39


 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1197              		.loc 1 1025 1
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 24
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 80B5     		push	{r7, lr}
 1202              	.LCFI37:
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 88B0     		sub	sp, sp, #32
 1207              	.LCFI38:
 1208              		.cfi_def_cfa_offset 40
 1209 0004 02AF     		add	r7, sp, #8
ARM GAS  /tmp/ccvnu0oO.s 			page 40


 1210              	.LCFI39:
 1211              		.cfi_def_cfa 7, 32
 1212 0006 F860     		str	r0, [r7, #12]
 1213 0008 B960     		str	r1, [r7, #8]
 1214 000a 3B60     		str	r3, [r7]
 1215 000c 1346     		mov	r3, r2	@ movhi
 1216 000e FB80     		strh	r3, [r7, #6]	@ movhi
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1217              		.loc 1 1027 12
 1218 0010 0023     		movs	r3, #0
 1219 0012 7B61     		str	r3, [r7, #20]
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1220              		.loc 1 1030 12
 1221 0014 FB68     		ldr	r3, [r7, #12]
 1222 0016 93F83930 		ldrb	r3, [r3, #57]
 1223 001a DBB2     		uxtb	r3, r3
 1224              		.loc 1 1030 6
 1225 001c 202B     		cmp	r3, #32
 1226 001e 40F08380 		bne	.L51
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1227              		.loc 1 1032 8
 1228 0022 BB68     		ldr	r3, [r7, #8]
 1229 0024 002B     		cmp	r3, #0
 1230 0026 02D0     		beq	.L52
 1231              		.loc 1 1032 25 discriminator 1
 1232 0028 FB88     		ldrh	r3, [r7, #6]
 1233 002a 002B     		cmp	r3, #0
 1234 002c 01D1     		bne	.L53
 1235              	.L52:
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1236              		.loc 1 1034 15
 1237 002e 0123     		movs	r3, #1
 1238 0030 7BE0     		b	.L54
 1239              	.L53:
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1240              		.loc 1 1038 5
 1241 0032 FB68     		ldr	r3, [r7, #12]
 1242 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1243 0038 012B     		cmp	r3, #1
 1244 003a 01D1     		bne	.L55
 1245              		.loc 1 1038 5 is_stmt 0 discriminator 1
 1246 003c 0223     		movs	r3, #2
 1247 003e 74E0     		b	.L54
 1248              	.L55:
 1249              		.loc 1 1038 5 discriminator 2
 1250 0040 FB68     		ldr	r3, [r7, #12]
 1251 0042 0122     		movs	r2, #1
 1252 0044 83F83820 		strb	r2, [r3, #56]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 41


1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1253              		.loc 1 1040 22 is_stmt 1 discriminator 2
 1254 0048 FB68     		ldr	r3, [r7, #12]
 1255 004a 0022     		movs	r2, #0
 1256 004c DA63     		str	r2, [r3, #60]
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1257              		.loc 1 1041 19 discriminator 2
 1258 004e FB68     		ldr	r3, [r7, #12]
 1259 0050 2122     		movs	r2, #33
 1260 0052 83F83920 		strb	r2, [r3, #57]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1261              		.loc 1 1044 17 discriminator 2
 1262 0056 FFF7FEFF 		bl	HAL_GetTick
 1263 005a 7861     		str	r0, [r7, #20]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1264              		.loc 1 1046 23 discriminator 2
 1265 005c FB68     		ldr	r3, [r7, #12]
 1266 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1267 0060 9A84     		strh	r2, [r3, #36]	@ movhi
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1268              		.loc 1 1047 24 discriminator 2
 1269 0062 FB68     		ldr	r3, [r7, #12]
 1270 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1271 0066 DA84     		strh	r2, [r3, #38]	@ movhi
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1272              		.loc 1 1050 5 discriminator 2
 1273 0068 FB68     		ldr	r3, [r7, #12]
 1274 006a 0022     		movs	r2, #0
 1275 006c 83F83820 		strb	r2, [r3, #56]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 1276              		.loc 1 1052 11 discriminator 2
 1277 0070 42E0     		b	.L56
 1278              	.L61:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 1279              		.loc 1 1054 12
 1280 0072 FB68     		ldr	r3, [r7, #12]
 1281 0074 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 1282 0076 9BB2     		uxth	r3, r3
 1283              		.loc 1 1054 25
 1284 0078 013B     		subs	r3, r3, #1
 1285 007a 9AB2     		uxth	r2, r3
 1286 007c FB68     		ldr	r3, [r7, #12]
 1287 007e DA84     		strh	r2, [r3, #38]	@ movhi
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1288              		.loc 1 1055 22
 1289 0080 FB68     		ldr	r3, [r7, #12]
 1290 0082 9B68     		ldr	r3, [r3, #8]
 1291              		.loc 1 1055 10
 1292 0084 B3F5805F 		cmp	r3, #4096
 1293 0088 22D1     		bne	.L57
ARM GAS  /tmp/ccvnu0oO.s 			page 42


1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1294              		.loc 1 1057 13
 1295 008a 3B68     		ldr	r3, [r7]
 1296 008c 0093     		str	r3, [sp]
 1297 008e 7B69     		ldr	r3, [r7, #20]
 1298 0090 0022     		movs	r2, #0
 1299 0092 8021     		movs	r1, #128
 1300 0094 F868     		ldr	r0, [r7, #12]
 1301 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1302 009a 0346     		mov	r3, r0
 1303              		.loc 1 1057 12
 1304 009c 002B     		cmp	r3, #0
 1305 009e 01D0     		beq	.L58
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1306              		.loc 1 1059 18
 1307 00a0 0323     		movs	r3, #3
 1308 00a2 42E0     		b	.L54
 1309              	.L58:
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 1310              		.loc 1 1061 13
 1311 00a4 BB68     		ldr	r3, [r7, #8]
 1312 00a6 3B61     		str	r3, [r7, #16]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 1313              		.loc 1 1062 32
 1314 00a8 3B69     		ldr	r3, [r7, #16]
 1315 00aa 1B88     		ldrh	r3, [r3]
 1316              		.loc 1 1062 37
 1317 00ac 1A46     		mov	r2, r3
 1318              		.loc 1 1062 14
 1319 00ae FB68     		ldr	r3, [r7, #12]
 1320 00b0 1B68     		ldr	r3, [r3]
 1321              		.loc 1 1062 37
 1322 00b2 C2F30802 		ubfx	r2, r2, #0, #9
 1323              		.loc 1 1062 29
 1324 00b6 5A60     		str	r2, [r3, #4]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1325              		.loc 1 1063 24
 1326 00b8 FB68     		ldr	r3, [r7, #12]
 1327 00ba 1B69     		ldr	r3, [r3, #16]
 1328              		.loc 1 1063 12
 1329 00bc 002B     		cmp	r3, #0
 1330 00be 03D1     		bne	.L59
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 1331              		.loc 1 1065 17
 1332 00c0 BB68     		ldr	r3, [r7, #8]
 1333 00c2 0233     		adds	r3, r3, #2
 1334 00c4 BB60     		str	r3, [r7, #8]
 1335 00c6 17E0     		b	.L56
 1336              	.L59:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
ARM GAS  /tmp/ccvnu0oO.s 			page 43


 1337              		.loc 1 1069 17
 1338 00c8 BB68     		ldr	r3, [r7, #8]
 1339 00ca 0133     		adds	r3, r3, #1
 1340 00cc BB60     		str	r3, [r7, #8]
 1341 00ce 13E0     		b	.L56
 1342              	.L57:
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1343              		.loc 1 1074 13
 1344 00d0 3B68     		ldr	r3, [r7]
 1345 00d2 0093     		str	r3, [sp]
 1346 00d4 7B69     		ldr	r3, [r7, #20]
 1347 00d6 0022     		movs	r2, #0
 1348 00d8 8021     		movs	r1, #128
 1349 00da F868     		ldr	r0, [r7, #12]
 1350 00dc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1351 00e0 0346     		mov	r3, r0
 1352              		.loc 1 1074 12
 1353 00e2 002B     		cmp	r3, #0
 1354 00e4 01D0     		beq	.L60
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1355              		.loc 1 1076 18
 1356 00e6 0323     		movs	r3, #3
 1357 00e8 1FE0     		b	.L54
 1358              	.L60:
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 1359              		.loc 1 1078 38
 1360 00ea BB68     		ldr	r3, [r7, #8]
 1361 00ec 5A1C     		adds	r2, r3, #1
 1362 00ee BA60     		str	r2, [r7, #8]
 1363              		.loc 1 1078 32
 1364 00f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1365              		.loc 1 1078 14
 1366 00f2 FB68     		ldr	r3, [r7, #12]
 1367 00f4 1B68     		ldr	r3, [r3]
 1368              		.loc 1 1078 29
 1369 00f6 5A60     		str	r2, [r3, #4]
 1370              	.L56:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1371              		.loc 1 1052 17
 1372 00f8 FB68     		ldr	r3, [r7, #12]
 1373 00fa DB8C     		ldrh	r3, [r3, #38]	@ movhi
 1374 00fc 9BB2     		uxth	r3, r3
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1375              		.loc 1 1052 11
 1376 00fe 002B     		cmp	r3, #0
 1377 0100 B7D1     		bne	.L61
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1378              		.loc 1 1082 9
ARM GAS  /tmp/ccvnu0oO.s 			page 44


 1379 0102 3B68     		ldr	r3, [r7]
 1380 0104 0093     		str	r3, [sp]
 1381 0106 7B69     		ldr	r3, [r7, #20]
 1382 0108 0022     		movs	r2, #0
 1383 010a 4021     		movs	r1, #64
 1384 010c F868     		ldr	r0, [r7, #12]
 1385 010e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1386 0112 0346     		mov	r3, r0
 1387              		.loc 1 1082 8
 1388 0114 002B     		cmp	r3, #0
 1389 0116 01D0     		beq	.L62
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 1390              		.loc 1 1084 14
 1391 0118 0323     		movs	r3, #3
 1392 011a 06E0     		b	.L54
 1393              	.L62:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1394              		.loc 1 1088 19
 1395 011c FB68     		ldr	r3, [r7, #12]
 1396 011e 2022     		movs	r2, #32
 1397 0120 83F83920 		strb	r2, [r3, #57]
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1398              		.loc 1 1090 12
 1399 0124 0023     		movs	r3, #0
 1400 0126 00E0     		b	.L54
 1401              	.L51:
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1402              		.loc 1 1094 12
 1403 0128 0223     		movs	r3, #2
 1404              	.L54:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1405              		.loc 1 1096 1
 1406 012a 1846     		mov	r0, r3
 1407 012c 1837     		adds	r7, r7, #24
 1408              	.LCFI40:
 1409              		.cfi_def_cfa_offset 8
 1410 012e BD46     		mov	sp, r7
 1411              	.LCFI41:
 1412              		.cfi_def_cfa_register 13
 1413              		@ sp needed
 1414 0130 80BD     		pop	{r7, pc}
 1415              		.cfi_endproc
 1416              	.LFE137:
 1418              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1419              		.align	1
 1420              		.global	HAL_UART_Receive
 1421              		.syntax unified
 1422              		.thumb
ARM GAS  /tmp/ccvnu0oO.s 			page 45


 1423              		.thumb_func
 1424              		.fpu fpv4-sp-d16
 1426              	HAL_UART_Receive:
 1427              	.LFB138:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1428              		.loc 1 1111 1
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 24
 1431              		@ frame_needed = 1, uses_anonymous_args = 0
 1432 0000 80B5     		push	{r7, lr}
 1433              	.LCFI42:
 1434              		.cfi_def_cfa_offset 8
 1435              		.cfi_offset 7, -8
 1436              		.cfi_offset 14, -4
 1437 0002 88B0     		sub	sp, sp, #32
 1438              	.LCFI43:
 1439              		.cfi_def_cfa_offset 40
 1440 0004 02AF     		add	r7, sp, #8
 1441              	.LCFI44:
 1442              		.cfi_def_cfa 7, 32
 1443 0006 F860     		str	r0, [r7, #12]
 1444 0008 B960     		str	r1, [r7, #8]
 1445 000a 3B60     		str	r3, [r7]
 1446 000c 1346     		mov	r3, r2	@ movhi
 1447 000e FB80     		strh	r3, [r7, #6]	@ movhi
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1448              		.loc 1 1113 12
 1449 0010 0023     		movs	r3, #0
 1450 0012 7B61     		str	r3, [r7, #20]
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1451              		.loc 1 1116 12
 1452 0014 FB68     		ldr	r3, [r7, #12]
 1453 0016 93F83A30 		ldrb	r3, [r3, #58]
 1454 001a DBB2     		uxtb	r3, r3
 1455              		.loc 1 1116 6
 1456 001c 202B     		cmp	r3, #32
 1457 001e 40F09080 		bne	.L64
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1458              		.loc 1 1118 8
ARM GAS  /tmp/ccvnu0oO.s 			page 46


 1459 0022 BB68     		ldr	r3, [r7, #8]
 1460 0024 002B     		cmp	r3, #0
 1461 0026 02D0     		beq	.L65
 1462              		.loc 1 1118 25 discriminator 1
 1463 0028 FB88     		ldrh	r3, [r7, #6]
 1464 002a 002B     		cmp	r3, #0
 1465 002c 01D1     		bne	.L66
 1466              	.L65:
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1467              		.loc 1 1120 15
 1468 002e 0123     		movs	r3, #1
 1469 0030 88E0     		b	.L67
 1470              	.L66:
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1471              		.loc 1 1124 5
 1472 0032 FB68     		ldr	r3, [r7, #12]
 1473 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1474 0038 012B     		cmp	r3, #1
 1475 003a 01D1     		bne	.L68
 1476              		.loc 1 1124 5 is_stmt 0 discriminator 1
 1477 003c 0223     		movs	r3, #2
 1478 003e 81E0     		b	.L67
 1479              	.L68:
 1480              		.loc 1 1124 5 discriminator 2
 1481 0040 FB68     		ldr	r3, [r7, #12]
 1482 0042 0122     		movs	r2, #1
 1483 0044 83F83820 		strb	r2, [r3, #56]
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1484              		.loc 1 1126 22 is_stmt 1 discriminator 2
 1485 0048 FB68     		ldr	r3, [r7, #12]
 1486 004a 0022     		movs	r2, #0
 1487 004c DA63     		str	r2, [r3, #60]
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1488              		.loc 1 1127 20 discriminator 2
 1489 004e FB68     		ldr	r3, [r7, #12]
 1490 0050 2222     		movs	r2, #34
 1491 0052 83F83A20 		strb	r2, [r3, #58]
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1492              		.loc 1 1130 17 discriminator 2
 1493 0056 FFF7FEFF 		bl	HAL_GetTick
 1494 005a 7861     		str	r0, [r7, #20]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1495              		.loc 1 1132 23 discriminator 2
 1496 005c FB68     		ldr	r3, [r7, #12]
 1497 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1498 0060 9A85     		strh	r2, [r3, #44]	@ movhi
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1499              		.loc 1 1133 24 discriminator 2
 1500 0062 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvnu0oO.s 			page 47


 1501 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1502 0066 DA85     		strh	r2, [r3, #46]	@ movhi
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1503              		.loc 1 1136 5 discriminator 2
 1504 0068 FB68     		ldr	r3, [r7, #12]
 1505 006a 0022     		movs	r2, #0
 1506 006c 83F83820 		strb	r2, [r3, #56]
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1507              		.loc 1 1139 11 discriminator 2
 1508 0070 5CE0     		b	.L69
 1509              	.L75:
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1510              		.loc 1 1141 12
 1511 0072 FB68     		ldr	r3, [r7, #12]
 1512 0074 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1513 0076 9BB2     		uxth	r3, r3
 1514              		.loc 1 1141 25
 1515 0078 013B     		subs	r3, r3, #1
 1516 007a 9AB2     		uxth	r2, r3
 1517 007c FB68     		ldr	r3, [r7, #12]
 1518 007e DA85     		strh	r2, [r3, #46]	@ movhi
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1519              		.loc 1 1142 22
 1520 0080 FB68     		ldr	r3, [r7, #12]
 1521 0082 9B68     		ldr	r3, [r3, #8]
 1522              		.loc 1 1142 10
 1523 0084 B3F5805F 		cmp	r3, #4096
 1524 0088 2BD1     		bne	.L70
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1525              		.loc 1 1144 13
 1526 008a 3B68     		ldr	r3, [r7]
 1527 008c 0093     		str	r3, [sp]
 1528 008e 7B69     		ldr	r3, [r7, #20]
 1529 0090 0022     		movs	r2, #0
 1530 0092 2021     		movs	r1, #32
 1531 0094 F868     		ldr	r0, [r7, #12]
 1532 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1533 009a 0346     		mov	r3, r0
 1534              		.loc 1 1144 12
 1535 009c 002B     		cmp	r3, #0
 1536 009e 01D0     		beq	.L71
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1537              		.loc 1 1146 18
 1538 00a0 0323     		movs	r3, #3
 1539 00a2 4FE0     		b	.L67
 1540              	.L71:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 1541              		.loc 1 1148 13
 1542 00a4 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvnu0oO.s 			page 48


 1543 00a6 3B61     		str	r3, [r7, #16]
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1544              		.loc 1 1149 24
 1545 00a8 FB68     		ldr	r3, [r7, #12]
 1546 00aa 1B69     		ldr	r3, [r3, #16]
 1547              		.loc 1 1149 12
 1548 00ac 002B     		cmp	r3, #0
 1549 00ae 0CD1     		bne	.L72
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1550              		.loc 1 1151 34
 1551 00b0 FB68     		ldr	r3, [r7, #12]
 1552 00b2 1B68     		ldr	r3, [r3]
 1553              		.loc 1 1151 44
 1554 00b4 5B68     		ldr	r3, [r3, #4]
 1555              		.loc 1 1151 18
 1556 00b6 9BB2     		uxth	r3, r3
 1557 00b8 C3F30803 		ubfx	r3, r3, #0, #9
 1558 00bc 9AB2     		uxth	r2, r3
 1559              		.loc 1 1151 16
 1560 00be 3B69     		ldr	r3, [r7, #16]
 1561 00c0 1A80     		strh	r2, [r3]	@ movhi
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 1562              		.loc 1 1152 17
 1563 00c2 BB68     		ldr	r3, [r7, #8]
 1564 00c4 0233     		adds	r3, r3, #2
 1565 00c6 BB60     		str	r3, [r7, #8]
 1566 00c8 30E0     		b	.L69
 1567              	.L72:
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1568              		.loc 1 1156 34
 1569 00ca FB68     		ldr	r3, [r7, #12]
 1570 00cc 1B68     		ldr	r3, [r3]
 1571              		.loc 1 1156 44
 1572 00ce 5B68     		ldr	r3, [r3, #4]
 1573              		.loc 1 1156 18
 1574 00d0 9BB2     		uxth	r3, r3
 1575 00d2 DBB2     		uxtb	r3, r3
 1576 00d4 9AB2     		uxth	r2, r3
 1577              		.loc 1 1156 16
 1578 00d6 3B69     		ldr	r3, [r7, #16]
 1579 00d8 1A80     		strh	r2, [r3]	@ movhi
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 1580              		.loc 1 1157 17
 1581 00da BB68     		ldr	r3, [r7, #8]
 1582 00dc 0133     		adds	r3, r3, #1
 1583 00de BB60     		str	r3, [r7, #8]
 1584 00e0 24E0     		b	.L69
 1585              	.L70:
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccvnu0oO.s 			page 49


1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1586              		.loc 1 1163 13
 1587 00e2 3B68     		ldr	r3, [r7]
 1588 00e4 0093     		str	r3, [sp]
 1589 00e6 7B69     		ldr	r3, [r7, #20]
 1590 00e8 0022     		movs	r2, #0
 1591 00ea 2021     		movs	r1, #32
 1592 00ec F868     		ldr	r0, [r7, #12]
 1593 00ee FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1594 00f2 0346     		mov	r3, r0
 1595              		.loc 1 1163 12
 1596 00f4 002B     		cmp	r3, #0
 1597 00f6 01D0     		beq	.L73
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1598              		.loc 1 1165 18
 1599 00f8 0323     		movs	r3, #3
 1600 00fa 23E0     		b	.L67
 1601              	.L73:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1602              		.loc 1 1167 24
 1603 00fc FB68     		ldr	r3, [r7, #12]
 1604 00fe 1B69     		ldr	r3, [r3, #16]
 1605              		.loc 1 1167 12
 1606 0100 002B     		cmp	r3, #0
 1607 0102 08D1     		bne	.L74
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1608              		.loc 1 1169 37
 1609 0104 FB68     		ldr	r3, [r7, #12]
 1610 0106 1B68     		ldr	r3, [r3]
 1611              		.loc 1 1169 47
 1612 0108 5968     		ldr	r1, [r3, #4]
 1613              		.loc 1 1169 17
 1614 010a BB68     		ldr	r3, [r7, #8]
 1615 010c 5A1C     		adds	r2, r3, #1
 1616 010e BA60     		str	r2, [r7, #8]
 1617              		.loc 1 1169 22
 1618 0110 CAB2     		uxtb	r2, r1
 1619              		.loc 1 1169 20
 1620 0112 1A70     		strb	r2, [r3]
 1621 0114 0AE0     		b	.L69
 1622              	.L74:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1623              		.loc 1 1173 37
 1624 0116 FB68     		ldr	r3, [r7, #12]
 1625 0118 1B68     		ldr	r3, [r3]
 1626              		.loc 1 1173 47
 1627 011a 5B68     		ldr	r3, [r3, #4]
 1628              		.loc 1 1173 22
 1629 011c DAB2     		uxtb	r2, r3
 1630              		.loc 1 1173 17
 1631 011e BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvnu0oO.s 			page 50


 1632 0120 591C     		adds	r1, r3, #1
 1633 0122 B960     		str	r1, [r7, #8]
 1634              		.loc 1 1173 22
 1635 0124 02F07F02 		and	r2, r2, #127
 1636 0128 D2B2     		uxtb	r2, r2
 1637              		.loc 1 1173 20
 1638 012a 1A70     		strb	r2, [r3]
 1639              	.L69:
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1640              		.loc 1 1139 17
 1641 012c FB68     		ldr	r3, [r7, #12]
 1642 012e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1643 0130 9BB2     		uxth	r3, r3
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1644              		.loc 1 1139 11
 1645 0132 002B     		cmp	r3, #0
 1646 0134 9DD1     		bne	.L75
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1647              		.loc 1 1180 20
 1648 0136 FB68     		ldr	r3, [r7, #12]
 1649 0138 2022     		movs	r2, #32
 1650 013a 83F83A20 		strb	r2, [r3, #58]
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1651              		.loc 1 1182 12
 1652 013e 0023     		movs	r3, #0
 1653 0140 00E0     		b	.L67
 1654              	.L64:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1655              		.loc 1 1186 12
 1656 0142 0223     		movs	r3, #2
 1657              	.L67:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1658              		.loc 1 1188 1
 1659 0144 1846     		mov	r0, r3
 1660 0146 1837     		adds	r7, r7, #24
 1661              	.LCFI45:
 1662              		.cfi_def_cfa_offset 8
 1663 0148 BD46     		mov	sp, r7
 1664              	.LCFI46:
 1665              		.cfi_def_cfa_register 13
 1666              		@ sp needed
 1667 014a 80BD     		pop	{r7, pc}
 1668              		.cfi_endproc
 1669              	.LFE138:
 1671              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1672              		.align	1
ARM GAS  /tmp/ccvnu0oO.s 			page 51


 1673              		.global	HAL_UART_Transmit_IT
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1677              		.fpu fpv4-sp-d16
 1679              	HAL_UART_Transmit_IT:
 1680              	.LFB139:
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1681              		.loc 1 1202 1
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 16
 1684              		@ frame_needed = 1, uses_anonymous_args = 0
 1685              		@ link register save eliminated.
 1686 0000 80B4     		push	{r7}
 1687              	.LCFI47:
 1688              		.cfi_def_cfa_offset 4
 1689              		.cfi_offset 7, -4
 1690 0002 85B0     		sub	sp, sp, #20
 1691              	.LCFI48:
 1692              		.cfi_def_cfa_offset 24
 1693 0004 00AF     		add	r7, sp, #0
 1694              	.LCFI49:
 1695              		.cfi_def_cfa_register 7
 1696 0006 F860     		str	r0, [r7, #12]
 1697 0008 B960     		str	r1, [r7, #8]
 1698 000a 1346     		mov	r3, r2
 1699 000c FB80     		strh	r3, [r7, #6]	@ movhi
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1700              		.loc 1 1204 12
 1701 000e FB68     		ldr	r3, [r7, #12]
 1702 0010 93F83930 		ldrb	r3, [r3, #57]
 1703 0014 DBB2     		uxtb	r3, r3
 1704              		.loc 1 1204 6
 1705 0016 202B     		cmp	r3, #32
 1706 0018 30D1     		bne	.L77
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1707              		.loc 1 1206 8
 1708 001a BB68     		ldr	r3, [r7, #8]
 1709 001c 002B     		cmp	r3, #0
 1710 001e 02D0     		beq	.L78
 1711              		.loc 1 1206 25 discriminator 1
 1712 0020 FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccvnu0oO.s 			page 52


 1713 0022 002B     		cmp	r3, #0
 1714 0024 01D1     		bne	.L79
 1715              	.L78:
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1716              		.loc 1 1208 14
 1717 0026 0123     		movs	r3, #1
 1718 0028 29E0     		b	.L80
 1719              	.L79:
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1720              		.loc 1 1212 5
 1721 002a FB68     		ldr	r3, [r7, #12]
 1722 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1723 0030 012B     		cmp	r3, #1
 1724 0032 01D1     		bne	.L81
 1725              		.loc 1 1212 5 is_stmt 0 discriminator 1
 1726 0034 0223     		movs	r3, #2
 1727 0036 22E0     		b	.L80
 1728              	.L81:
 1729              		.loc 1 1212 5 discriminator 2
 1730 0038 FB68     		ldr	r3, [r7, #12]
 1731 003a 0122     		movs	r2, #1
 1732 003c 83F83820 		strb	r2, [r3, #56]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1733              		.loc 1 1214 23 is_stmt 1 discriminator 2
 1734 0040 FB68     		ldr	r3, [r7, #12]
 1735 0042 BA68     		ldr	r2, [r7, #8]
 1736 0044 1A62     		str	r2, [r3, #32]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1737              		.loc 1 1215 23 discriminator 2
 1738 0046 FB68     		ldr	r3, [r7, #12]
 1739 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1740 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1741              		.loc 1 1216 24 discriminator 2
 1742 004c FB68     		ldr	r3, [r7, #12]
 1743 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1744 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1745              		.loc 1 1218 22 discriminator 2
 1746 0052 FB68     		ldr	r3, [r7, #12]
 1747 0054 0022     		movs	r2, #0
 1748 0056 DA63     		str	r2, [r3, #60]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1749              		.loc 1 1219 19 discriminator 2
 1750 0058 FB68     		ldr	r3, [r7, #12]
 1751 005a 2122     		movs	r2, #33
 1752 005c 83F83920 		strb	r2, [r3, #57]
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1753              		.loc 1 1222 5 discriminator 2
ARM GAS  /tmp/ccvnu0oO.s 			page 53


 1754 0060 FB68     		ldr	r3, [r7, #12]
 1755 0062 0022     		movs	r2, #0
 1756 0064 83F83820 		strb	r2, [r3, #56]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1757              		.loc 1 1225 5 discriminator 2
 1758 0068 FB68     		ldr	r3, [r7, #12]
 1759 006a 1B68     		ldr	r3, [r3]
 1760 006c DA68     		ldr	r2, [r3, #12]
 1761 006e FB68     		ldr	r3, [r7, #12]
 1762 0070 1B68     		ldr	r3, [r3]
 1763 0072 42F08002 		orr	r2, r2, #128
 1764 0076 DA60     		str	r2, [r3, #12]
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1765              		.loc 1 1227 12 discriminator 2
 1766 0078 0023     		movs	r3, #0
 1767 007a 00E0     		b	.L80
 1768              	.L77:
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1769              		.loc 1 1231 12
 1770 007c 0223     		movs	r3, #2
 1771              	.L80:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1772              		.loc 1 1233 1
 1773 007e 1846     		mov	r0, r3
 1774 0080 1437     		adds	r7, r7, #20
 1775              	.LCFI50:
 1776              		.cfi_def_cfa_offset 4
 1777 0082 BD46     		mov	sp, r7
 1778              	.LCFI51:
 1779              		.cfi_def_cfa_register 13
 1780              		@ sp needed
 1781 0084 5DF8047B 		ldr	r7, [sp], #4
 1782              	.LCFI52:
 1783              		.cfi_restore 7
 1784              		.cfi_def_cfa_offset 0
 1785 0088 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE139:
 1789              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1790              		.align	1
 1791              		.global	HAL_UART_Receive_IT
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1795              		.fpu fpv4-sp-d16
 1797              	HAL_UART_Receive_IT:
 1798              	.LFB140:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
ARM GAS  /tmp/ccvnu0oO.s 			page 54


1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1799              		.loc 1 1247 1
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 16
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
 1804 0000 80B4     		push	{r7}
 1805              	.LCFI53:
 1806              		.cfi_def_cfa_offset 4
 1807              		.cfi_offset 7, -4
 1808 0002 85B0     		sub	sp, sp, #20
 1809              	.LCFI54:
 1810              		.cfi_def_cfa_offset 24
 1811 0004 00AF     		add	r7, sp, #0
 1812              	.LCFI55:
 1813              		.cfi_def_cfa_register 7
 1814 0006 F860     		str	r0, [r7, #12]
 1815 0008 B960     		str	r1, [r7, #8]
 1816 000a 1346     		mov	r3, r2
 1817 000c FB80     		strh	r3, [r7, #6]	@ movhi
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1818              		.loc 1 1249 12
 1819 000e FB68     		ldr	r3, [r7, #12]
 1820 0010 93F83A30 		ldrb	r3, [r3, #58]
 1821 0014 DBB2     		uxtb	r3, r3
 1822              		.loc 1 1249 6
 1823 0016 202B     		cmp	r3, #32
 1824 0018 40D1     		bne	.L83
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1825              		.loc 1 1251 8
 1826 001a BB68     		ldr	r3, [r7, #8]
 1827 001c 002B     		cmp	r3, #0
 1828 001e 02D0     		beq	.L84
 1829              		.loc 1 1251 25 discriminator 1
 1830 0020 FB88     		ldrh	r3, [r7, #6]
 1831 0022 002B     		cmp	r3, #0
 1832 0024 01D1     		bne	.L85
 1833              	.L84:
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1834              		.loc 1 1253 14
 1835 0026 0123     		movs	r3, #1
 1836 0028 39E0     		b	.L86
 1837              	.L85:
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccvnu0oO.s 			page 55


1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1838              		.loc 1 1257 5
 1839 002a FB68     		ldr	r3, [r7, #12]
 1840 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1841 0030 012B     		cmp	r3, #1
 1842 0032 01D1     		bne	.L87
 1843              		.loc 1 1257 5 is_stmt 0 discriminator 1
 1844 0034 0223     		movs	r3, #2
 1845 0036 32E0     		b	.L86
 1846              	.L87:
 1847              		.loc 1 1257 5 discriminator 2
 1848 0038 FB68     		ldr	r3, [r7, #12]
 1849 003a 0122     		movs	r2, #1
 1850 003c 83F83820 		strb	r2, [r3, #56]
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1851              		.loc 1 1259 23 is_stmt 1 discriminator 2
 1852 0040 FB68     		ldr	r3, [r7, #12]
 1853 0042 BA68     		ldr	r2, [r7, #8]
 1854 0044 9A62     		str	r2, [r3, #40]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1855              		.loc 1 1260 23 discriminator 2
 1856 0046 FB68     		ldr	r3, [r7, #12]
 1857 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1858 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1859              		.loc 1 1261 24 discriminator 2
 1860 004c FB68     		ldr	r3, [r7, #12]
 1861 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1862 0050 DA85     		strh	r2, [r3, #46]	@ movhi
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1863              		.loc 1 1263 22 discriminator 2
 1864 0052 FB68     		ldr	r3, [r7, #12]
 1865 0054 0022     		movs	r2, #0
 1866 0056 DA63     		str	r2, [r3, #60]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1867              		.loc 1 1264 20 discriminator 2
 1868 0058 FB68     		ldr	r3, [r7, #12]
 1869 005a 2222     		movs	r2, #34
 1870 005c 83F83A20 		strb	r2, [r3, #58]
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1871              		.loc 1 1267 5 discriminator 2
 1872 0060 FB68     		ldr	r3, [r7, #12]
 1873 0062 0022     		movs	r2, #0
 1874 0064 83F83820 		strb	r2, [r3, #56]
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1875              		.loc 1 1270 5 discriminator 2
 1876 0068 FB68     		ldr	r3, [r7, #12]
 1877 006a 1B68     		ldr	r3, [r3]
 1878 006c DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccvnu0oO.s 			page 56


 1879 006e FB68     		ldr	r3, [r7, #12]
 1880 0070 1B68     		ldr	r3, [r3]
 1881 0072 42F48072 		orr	r2, r2, #256
 1882 0076 DA60     		str	r2, [r3, #12]
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1883              		.loc 1 1273 5 discriminator 2
 1884 0078 FB68     		ldr	r3, [r7, #12]
 1885 007a 1B68     		ldr	r3, [r3]
 1886 007c 5A69     		ldr	r2, [r3, #20]
 1887 007e FB68     		ldr	r3, [r7, #12]
 1888 0080 1B68     		ldr	r3, [r3]
 1889 0082 42F00102 		orr	r2, r2, #1
 1890 0086 5A61     		str	r2, [r3, #20]
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1891              		.loc 1 1276 5 discriminator 2
 1892 0088 FB68     		ldr	r3, [r7, #12]
 1893 008a 1B68     		ldr	r3, [r3]
 1894 008c DA68     		ldr	r2, [r3, #12]
 1895 008e FB68     		ldr	r3, [r7, #12]
 1896 0090 1B68     		ldr	r3, [r3]
 1897 0092 42F02002 		orr	r2, r2, #32
 1898 0096 DA60     		str	r2, [r3, #12]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1899              		.loc 1 1278 12 discriminator 2
 1900 0098 0023     		movs	r3, #0
 1901 009a 00E0     		b	.L86
 1902              	.L83:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1903              		.loc 1 1282 12
 1904 009c 0223     		movs	r3, #2
 1905              	.L86:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1906              		.loc 1 1284 1
 1907 009e 1846     		mov	r0, r3
 1908 00a0 1437     		adds	r7, r7, #20
 1909              	.LCFI56:
 1910              		.cfi_def_cfa_offset 4
 1911 00a2 BD46     		mov	sp, r7
 1912              	.LCFI57:
 1913              		.cfi_def_cfa_register 13
 1914              		@ sp needed
 1915 00a4 5DF8047B 		ldr	r7, [sp], #4
 1916              	.LCFI58:
 1917              		.cfi_restore 7
 1918              		.cfi_def_cfa_offset 0
 1919 00a8 7047     		bx	lr
 1920              		.cfi_endproc
 1921              	.LFE140:
ARM GAS  /tmp/ccvnu0oO.s 			page 57


 1923              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1924              		.align	1
 1925              		.global	HAL_UART_Transmit_DMA
 1926              		.syntax unified
 1927              		.thumb
 1928              		.thumb_func
 1929              		.fpu fpv4-sp-d16
 1931              	HAL_UART_Transmit_DMA:
 1932              	.LFB141:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1933              		.loc 1 1298 1
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 24
 1936              		@ frame_needed = 1, uses_anonymous_args = 0
 1937 0000 80B5     		push	{r7, lr}
 1938              	.LCFI59:
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 7, -8
 1941              		.cfi_offset 14, -4
 1942 0002 86B0     		sub	sp, sp, #24
 1943              	.LCFI60:
 1944              		.cfi_def_cfa_offset 32
 1945 0004 00AF     		add	r7, sp, #0
 1946              	.LCFI61:
 1947              		.cfi_def_cfa_register 7
 1948 0006 F860     		str	r0, [r7, #12]
 1949 0008 B960     		str	r1, [r7, #8]
 1950 000a 1346     		mov	r3, r2
 1951 000c FB80     		strh	r3, [r7, #6]	@ movhi
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1952              		.loc 1 1302 12
 1953 000e FB68     		ldr	r3, [r7, #12]
 1954 0010 93F83930 		ldrb	r3, [r3, #57]
 1955 0014 DBB2     		uxtb	r3, r3
 1956              		.loc 1 1302 6
 1957 0016 202B     		cmp	r3, #32
 1958 0018 53D1     		bne	.L89
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1959              		.loc 1 1304 16
 1960 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvnu0oO.s 			page 58


 1961              		.loc 1 1304 8
 1962 001c 002B     		cmp	r3, #0
 1963 001e 02D0     		beq	.L90
 1964              		.loc 1 1304 25 discriminator 1
 1965 0020 FB88     		ldrh	r3, [r7, #6]
 1966 0022 002B     		cmp	r3, #0
 1967 0024 01D1     		bne	.L91
 1968              	.L90:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1969              		.loc 1 1306 14
 1970 0026 0123     		movs	r3, #1
 1971 0028 4CE0     		b	.L92
 1972              	.L91:
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1973              		.loc 1 1310 5
 1974 002a FB68     		ldr	r3, [r7, #12]
 1975 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1976 0030 012B     		cmp	r3, #1
 1977 0032 01D1     		bne	.L93
 1978              		.loc 1 1310 5 is_stmt 0 discriminator 1
 1979 0034 0223     		movs	r3, #2
 1980 0036 45E0     		b	.L92
 1981              	.L93:
 1982              		.loc 1 1310 5 discriminator 2
 1983 0038 FB68     		ldr	r3, [r7, #12]
 1984 003a 0122     		movs	r2, #1
 1985 003c 83F83820 		strb	r2, [r3, #56]
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1986              		.loc 1 1312 23 is_stmt 1 discriminator 2
 1987 0040 BA68     		ldr	r2, [r7, #8]
 1988 0042 FB68     		ldr	r3, [r7, #12]
 1989 0044 1A62     		str	r2, [r3, #32]
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1990              		.loc 1 1313 23 discriminator 2
 1991 0046 FB68     		ldr	r3, [r7, #12]
 1992 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1993 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1994              		.loc 1 1314 24 discriminator 2
 1995 004c FB68     		ldr	r3, [r7, #12]
 1996 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1997 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1998              		.loc 1 1316 22 discriminator 2
 1999 0052 FB68     		ldr	r3, [r7, #12]
 2000 0054 0022     		movs	r2, #0
 2001 0056 DA63     		str	r2, [r3, #60]
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2002              		.loc 1 1317 19 discriminator 2
 2003 0058 FB68     		ldr	r3, [r7, #12]
 2004 005a 2122     		movs	r2, #33
ARM GAS  /tmp/ccvnu0oO.s 			page 59


 2005 005c 83F83920 		strb	r2, [r3, #57]
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 2006              		.loc 1 1320 10 discriminator 2
 2007 0060 FB68     		ldr	r3, [r7, #12]
 2008 0062 1B6B     		ldr	r3, [r3, #48]
 2009              		.loc 1 1320 37 discriminator 2
 2010 0064 194A     		ldr	r2, .L94
 2011 0066 DA63     		str	r2, [r3, #60]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 2012              		.loc 1 1323 10 discriminator 2
 2013 0068 FB68     		ldr	r3, [r7, #12]
 2014 006a 1B6B     		ldr	r3, [r3, #48]
 2015              		.loc 1 1323 41 discriminator 2
 2016 006c 184A     		ldr	r2, .L94+4
 2017 006e 1A64     		str	r2, [r3, #64]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 2018              		.loc 1 1326 10 discriminator 2
 2019 0070 FB68     		ldr	r3, [r7, #12]
 2020 0072 1B6B     		ldr	r3, [r3, #48]
 2021              		.loc 1 1326 38 discriminator 2
 2022 0074 174A     		ldr	r2, .L94+8
 2023 0076 DA64     		str	r2, [r3, #76]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 2024              		.loc 1 1329 10 discriminator 2
 2025 0078 FB68     		ldr	r3, [r7, #12]
 2026 007a 1B6B     		ldr	r3, [r3, #48]
 2027              		.loc 1 1329 38 discriminator 2
 2028 007c 0022     		movs	r2, #0
 2029 007e 1A65     		str	r2, [r3, #80]
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 2030              		.loc 1 1332 9 discriminator 2
 2031 0080 07F10803 		add	r3, r7, #8
 2032 0084 7B61     		str	r3, [r7, #20]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 2033              		.loc 1 1333 5 discriminator 2
 2034 0086 FB68     		ldr	r3, [r7, #12]
 2035 0088 186B     		ldr	r0, [r3, #48]
 2036 008a 7B69     		ldr	r3, [r7, #20]
 2037 008c 1968     		ldr	r1, [r3]
 2038              		.loc 1 1333 71 discriminator 2
 2039 008e FB68     		ldr	r3, [r7, #12]
 2040 0090 1B68     		ldr	r3, [r3]
 2041              		.loc 1 1333 65 discriminator 2
 2042 0092 0433     		adds	r3, r3, #4
 2043              		.loc 1 1333 5 discriminator 2
 2044 0094 1A46     		mov	r2, r3
 2045 0096 FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccvnu0oO.s 			page 60


 2046 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 2047              		.loc 1 1336 5 discriminator 2
 2048 009c FB68     		ldr	r3, [r7, #12]
 2049 009e 1B68     		ldr	r3, [r3]
 2050 00a0 6FF04002 		mvn	r2, #64
 2051 00a4 1A60     		str	r2, [r3]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2052              		.loc 1 1339 5 discriminator 2
 2053 00a6 FB68     		ldr	r3, [r7, #12]
 2054 00a8 0022     		movs	r2, #0
 2055 00aa 83F83820 		strb	r2, [r3, #56]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2056              		.loc 1 1343 5 discriminator 2
 2057 00ae FB68     		ldr	r3, [r7, #12]
 2058 00b0 1B68     		ldr	r3, [r3]
 2059 00b2 5A69     		ldr	r2, [r3, #20]
 2060 00b4 FB68     		ldr	r3, [r7, #12]
 2061 00b6 1B68     		ldr	r3, [r3]
 2062 00b8 42F08002 		orr	r2, r2, #128
 2063 00bc 5A61     		str	r2, [r3, #20]
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2064              		.loc 1 1345 12 discriminator 2
 2065 00be 0023     		movs	r3, #0
 2066 00c0 00E0     		b	.L92
 2067              	.L89:
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2068              		.loc 1 1349 12
 2069 00c2 0223     		movs	r3, #2
 2070              	.L92:
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2071              		.loc 1 1351 1
 2072 00c4 1846     		mov	r0, r3
 2073 00c6 1837     		adds	r7, r7, #24
 2074              	.LCFI62:
 2075              		.cfi_def_cfa_offset 8
 2076 00c8 BD46     		mov	sp, r7
 2077              	.LCFI63:
 2078              		.cfi_def_cfa_register 13
 2079              		@ sp needed
 2080 00ca 80BD     		pop	{r7, pc}
 2081              	.L95:
 2082              		.align	2
 2083              	.L94:
 2084 00cc 00000000 		.word	UART_DMATransmitCplt
ARM GAS  /tmp/ccvnu0oO.s 			page 61


 2085 00d0 00000000 		.word	UART_DMATxHalfCplt
 2086 00d4 00000000 		.word	UART_DMAError
 2087              		.cfi_endproc
 2088              	.LFE141:
 2090              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2091              		.align	1
 2092              		.global	HAL_UART_Receive_DMA
 2093              		.syntax unified
 2094              		.thumb
 2095              		.thumb_func
 2096              		.fpu fpv4-sp-d16
 2098              	HAL_UART_Receive_DMA:
 2099              	.LFB142:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2100              		.loc 1 1366 1
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 24
 2103              		@ frame_needed = 1, uses_anonymous_args = 0
 2104 0000 80B5     		push	{r7, lr}
 2105              	.LCFI64:
 2106              		.cfi_def_cfa_offset 8
 2107              		.cfi_offset 7, -8
 2108              		.cfi_offset 14, -4
 2109 0002 86B0     		sub	sp, sp, #24
 2110              	.LCFI65:
 2111              		.cfi_def_cfa_offset 32
 2112 0004 00AF     		add	r7, sp, #0
 2113              	.LCFI66:
 2114              		.cfi_def_cfa_register 7
 2115 0006 F860     		str	r0, [r7, #12]
 2116 0008 B960     		str	r1, [r7, #8]
 2117 000a 1346     		mov	r3, r2
 2118 000c FB80     		strh	r3, [r7, #6]	@ movhi
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2119              		.loc 1 1370 12
 2120 000e FB68     		ldr	r3, [r7, #12]
 2121 0010 93F83A30 		ldrb	r3, [r3, #58]
 2122 0014 DBB2     		uxtb	r3, r3
 2123              		.loc 1 1370 6
 2124 0016 202B     		cmp	r3, #32
ARM GAS  /tmp/ccvnu0oO.s 			page 62


 2125 0018 66D1     		bne	.L97
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2126              		.loc 1 1372 16
 2127 001a BB68     		ldr	r3, [r7, #8]
 2128              		.loc 1 1372 8
 2129 001c 002B     		cmp	r3, #0
 2130 001e 02D0     		beq	.L98
 2131              		.loc 1 1372 25 discriminator 1
 2132 0020 FB88     		ldrh	r3, [r7, #6]
 2133 0022 002B     		cmp	r3, #0
 2134 0024 01D1     		bne	.L99
 2135              	.L98:
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2136              		.loc 1 1374 14
 2137 0026 0123     		movs	r3, #1
 2138 0028 5FE0     		b	.L100
 2139              	.L99:
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2140              		.loc 1 1378 5
 2141 002a FB68     		ldr	r3, [r7, #12]
 2142 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2143 0030 012B     		cmp	r3, #1
 2144 0032 01D1     		bne	.L101
 2145              		.loc 1 1378 5 is_stmt 0 discriminator 1
 2146 0034 0223     		movs	r3, #2
 2147 0036 58E0     		b	.L100
 2148              	.L101:
 2149              		.loc 1 1378 5 discriminator 2
 2150 0038 FB68     		ldr	r3, [r7, #12]
 2151 003a 0122     		movs	r2, #1
 2152 003c 83F83820 		strb	r2, [r3, #56]
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 2153              		.loc 1 1380 23 is_stmt 1 discriminator 2
 2154 0040 BA68     		ldr	r2, [r7, #8]
 2155 0042 FB68     		ldr	r3, [r7, #12]
 2156 0044 9A62     		str	r2, [r3, #40]
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 2157              		.loc 1 1381 23 discriminator 2
 2158 0046 FB68     		ldr	r3, [r7, #12]
 2159 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2160 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2161              		.loc 1 1383 22 discriminator 2
 2162 004c FB68     		ldr	r3, [r7, #12]
 2163 004e 0022     		movs	r2, #0
 2164 0050 DA63     		str	r2, [r3, #60]
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2165              		.loc 1 1384 20 discriminator 2
 2166 0052 FB68     		ldr	r3, [r7, #12]
 2167 0054 2222     		movs	r2, #34
ARM GAS  /tmp/ccvnu0oO.s 			page 63


 2168 0056 83F83A20 		strb	r2, [r3, #58]
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 2169              		.loc 1 1387 10 discriminator 2
 2170 005a FB68     		ldr	r3, [r7, #12]
 2171 005c 5B6B     		ldr	r3, [r3, #52]
 2172              		.loc 1 1387 37 discriminator 2
 2173 005e 254A     		ldr	r2, .L102
 2174 0060 DA63     		str	r2, [r3, #60]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 2175              		.loc 1 1390 10 discriminator 2
 2176 0062 FB68     		ldr	r3, [r7, #12]
 2177 0064 5B6B     		ldr	r3, [r3, #52]
 2178              		.loc 1 1390 41 discriminator 2
 2179 0066 244A     		ldr	r2, .L102+4
 2180 0068 1A64     		str	r2, [r3, #64]
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 2181              		.loc 1 1393 10 discriminator 2
 2182 006a FB68     		ldr	r3, [r7, #12]
 2183 006c 5B6B     		ldr	r3, [r3, #52]
 2184              		.loc 1 1393 38 discriminator 2
 2185 006e 234A     		ldr	r2, .L102+8
 2186 0070 DA64     		str	r2, [r3, #76]
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 2187              		.loc 1 1396 10 discriminator 2
 2188 0072 FB68     		ldr	r3, [r7, #12]
 2189 0074 5B6B     		ldr	r3, [r3, #52]
 2190              		.loc 1 1396 38 discriminator 2
 2191 0076 0022     		movs	r2, #0
 2192 0078 1A65     		str	r2, [r3, #80]
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA stream */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 2193              		.loc 1 1399 9 discriminator 2
 2194 007a 07F10803 		add	r3, r7, #8
 2195 007e 7B61     		str	r3, [r7, #20]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 2196              		.loc 1 1400 5 discriminator 2
 2197 0080 FB68     		ldr	r3, [r7, #12]
 2198 0082 586B     		ldr	r0, [r3, #52]
 2199              		.loc 1 1400 53 discriminator 2
 2200 0084 FB68     		ldr	r3, [r7, #12]
 2201 0086 1B68     		ldr	r3, [r3]
 2202              		.loc 1 1400 47 discriminator 2
 2203 0088 0433     		adds	r3, r3, #4
 2204              		.loc 1 1400 5 discriminator 2
 2205 008a 1946     		mov	r1, r3
 2206 008c 7B69     		ldr	r3, [r7, #20]
 2207 008e 1A68     		ldr	r2, [r3]
 2208 0090 FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccvnu0oO.s 			page 64


 2209 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2210              	.LBB2:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2211              		.loc 1 1403 5 discriminator 2
 2212 0096 0023     		movs	r3, #0
 2213 0098 3B61     		str	r3, [r7, #16]
 2214 009a FB68     		ldr	r3, [r7, #12]
 2215 009c 1B68     		ldr	r3, [r3]
 2216 009e 1B68     		ldr	r3, [r3]
 2217 00a0 3B61     		str	r3, [r7, #16]
 2218 00a2 FB68     		ldr	r3, [r7, #12]
 2219 00a4 1B68     		ldr	r3, [r3]
 2220 00a6 5B68     		ldr	r3, [r3, #4]
 2221 00a8 3B61     		str	r3, [r7, #16]
 2222 00aa 3B69     		ldr	r3, [r7, #16]
 2223              	.LBE2:
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2224              		.loc 1 1406 5 discriminator 2
 2225 00ac FB68     		ldr	r3, [r7, #12]
 2226 00ae 0022     		movs	r2, #0
 2227 00b0 83F83820 		strb	r2, [r3, #56]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2228              		.loc 1 1409 5 discriminator 2
 2229 00b4 FB68     		ldr	r3, [r7, #12]
 2230 00b6 1B68     		ldr	r3, [r3]
 2231 00b8 DA68     		ldr	r2, [r3, #12]
 2232 00ba FB68     		ldr	r3, [r7, #12]
 2233 00bc 1B68     		ldr	r3, [r3]
 2234 00be 42F48072 		orr	r2, r2, #256
 2235 00c2 DA60     		str	r2, [r3, #12]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2236              		.loc 1 1412 5 discriminator 2
 2237 00c4 FB68     		ldr	r3, [r7, #12]
 2238 00c6 1B68     		ldr	r3, [r3]
 2239 00c8 5A69     		ldr	r2, [r3, #20]
 2240 00ca FB68     		ldr	r3, [r7, #12]
 2241 00cc 1B68     		ldr	r3, [r3]
 2242 00ce 42F00102 		orr	r2, r2, #1
 2243 00d2 5A61     		str	r2, [r3, #20]
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2244              		.loc 1 1416 5 discriminator 2
 2245 00d4 FB68     		ldr	r3, [r7, #12]
 2246 00d6 1B68     		ldr	r3, [r3]
 2247 00d8 5A69     		ldr	r2, [r3, #20]
 2248 00da FB68     		ldr	r3, [r7, #12]
 2249 00dc 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvnu0oO.s 			page 65


 2250 00de 42F04002 		orr	r2, r2, #64
 2251 00e2 5A61     		str	r2, [r3, #20]
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2252              		.loc 1 1418 12 discriminator 2
 2253 00e4 0023     		movs	r3, #0
 2254 00e6 00E0     		b	.L100
 2255              	.L97:
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2256              		.loc 1 1422 12
 2257 00e8 0223     		movs	r3, #2
 2258              	.L100:
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2259              		.loc 1 1424 1
 2260 00ea 1846     		mov	r0, r3
 2261 00ec 1837     		adds	r7, r7, #24
 2262              	.LCFI67:
 2263              		.cfi_def_cfa_offset 8
 2264 00ee BD46     		mov	sp, r7
 2265              	.LCFI68:
 2266              		.cfi_def_cfa_register 13
 2267              		@ sp needed
 2268 00f0 80BD     		pop	{r7, pc}
 2269              	.L103:
 2270 00f2 00BF     		.align	2
 2271              	.L102:
 2272 00f4 00000000 		.word	UART_DMAReceiveCplt
 2273 00f8 00000000 		.word	UART_DMARxHalfCplt
 2274 00fc 00000000 		.word	UART_DMAError
 2275              		.cfi_endproc
 2276              	.LFE142:
 2278              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2279              		.align	1
 2280              		.global	HAL_UART_DMAPause
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2284              		.fpu fpv4-sp-d16
 2286              	HAL_UART_DMAPause:
 2287              	.LFB143:
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2288              		.loc 1 1433 1
 2289              		.cfi_startproc
 2290              		@ args = 0, pretend = 0, frame = 16
 2291              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccvnu0oO.s 			page 66


 2292              		@ link register save eliminated.
 2293 0000 80B4     		push	{r7}
 2294              	.LCFI69:
 2295              		.cfi_def_cfa_offset 4
 2296              		.cfi_offset 7, -4
 2297 0002 85B0     		sub	sp, sp, #20
 2298              	.LCFI70:
 2299              		.cfi_def_cfa_offset 24
 2300 0004 00AF     		add	r7, sp, #0
 2301              	.LCFI71:
 2302              		.cfi_def_cfa_register 7
 2303 0006 7860     		str	r0, [r7, #4]
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2304              		.loc 1 1434 12
 2305 0008 0023     		movs	r3, #0
 2306 000a FB60     		str	r3, [r7, #12]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2307              		.loc 1 1437 3
 2308 000c 7B68     		ldr	r3, [r7, #4]
 2309 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2310 0012 012B     		cmp	r3, #1
 2311 0014 01D1     		bne	.L105
 2312              		.loc 1 1437 3 is_stmt 0 discriminator 1
 2313 0016 0223     		movs	r3, #2
 2314 0018 50E0     		b	.L106
 2315              	.L105:
 2316              		.loc 1 1437 3 discriminator 2
 2317 001a 7B68     		ldr	r3, [r7, #4]
 2318 001c 0122     		movs	r2, #1
 2319 001e 83F83820 		strb	r2, [r3, #56]
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2320              		.loc 1 1439 16 is_stmt 1 discriminator 2
 2321 0022 7B68     		ldr	r3, [r7, #4]
 2322 0024 1B68     		ldr	r3, [r3]
 2323 0026 5B69     		ldr	r3, [r3, #20]
 2324 0028 03F08003 		and	r3, r3, #128
 2325 002c 802B     		cmp	r3, #128
 2326 002e 0CBF     		ite	eq
 2327 0030 0123     		moveq	r3, #1
 2328 0032 0023     		movne	r3, #0
 2329 0034 DBB2     		uxtb	r3, r3
 2330              		.loc 1 1439 14 discriminator 2
 2331 0036 FB60     		str	r3, [r7, #12]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2332              		.loc 1 1440 13 discriminator 2
 2333 0038 7B68     		ldr	r3, [r7, #4]
 2334 003a 93F83930 		ldrb	r3, [r3, #57]
 2335 003e DBB2     		uxtb	r3, r3
 2336              		.loc 1 1440 6 discriminator 2
 2337 0040 212B     		cmp	r3, #33
 2338 0042 0AD1     		bne	.L107
 2339              		.loc 1 1440 49 discriminator 1
 2340 0044 FB68     		ldr	r3, [r7, #12]
 2341 0046 002B     		cmp	r3, #0
ARM GAS  /tmp/ccvnu0oO.s 			page 67


 2342 0048 07D0     		beq	.L107
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2343              		.loc 1 1443 5
 2344 004a 7B68     		ldr	r3, [r7, #4]
 2345 004c 1B68     		ldr	r3, [r3]
 2346 004e 5A69     		ldr	r2, [r3, #20]
 2347 0050 7B68     		ldr	r3, [r7, #4]
 2348 0052 1B68     		ldr	r3, [r3]
 2349 0054 22F08002 		bic	r2, r2, #128
 2350 0058 5A61     		str	r2, [r3, #20]
 2351              	.L107:
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2352              		.loc 1 1446 16
 2353 005a 7B68     		ldr	r3, [r7, #4]
 2354 005c 1B68     		ldr	r3, [r3]
 2355 005e 5B69     		ldr	r3, [r3, #20]
 2356 0060 03F04003 		and	r3, r3, #64
 2357 0064 402B     		cmp	r3, #64
 2358 0066 0CBF     		ite	eq
 2359 0068 0123     		moveq	r3, #1
 2360 006a 0023     		movne	r3, #0
 2361 006c DBB2     		uxtb	r3, r3
 2362              		.loc 1 1446 14
 2363 006e FB60     		str	r3, [r7, #12]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2364              		.loc 1 1447 13
 2365 0070 7B68     		ldr	r3, [r7, #4]
 2366 0072 93F83A30 		ldrb	r3, [r3, #58]
 2367 0076 DBB2     		uxtb	r3, r3
 2368              		.loc 1 1447 6
 2369 0078 222B     		cmp	r3, #34
 2370 007a 1AD1     		bne	.L108
 2371              		.loc 1 1447 50 discriminator 1
 2372 007c FB68     		ldr	r3, [r7, #12]
 2373 007e 002B     		cmp	r3, #0
 2374 0080 17D0     		beq	.L108
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2375              		.loc 1 1450 5
 2376 0082 7B68     		ldr	r3, [r7, #4]
 2377 0084 1B68     		ldr	r3, [r3]
 2378 0086 DA68     		ldr	r2, [r3, #12]
 2379 0088 7B68     		ldr	r3, [r7, #4]
 2380 008a 1B68     		ldr	r3, [r3]
 2381 008c 22F48072 		bic	r2, r2, #256
 2382 0090 DA60     		str	r2, [r3, #12]
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2383              		.loc 1 1451 5
 2384 0092 7B68     		ldr	r3, [r7, #4]
 2385 0094 1B68     		ldr	r3, [r3]
 2386 0096 5A69     		ldr	r2, [r3, #20]
 2387 0098 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 68


 2388 009a 1B68     		ldr	r3, [r3]
 2389 009c 22F00102 		bic	r2, r2, #1
 2390 00a0 5A61     		str	r2, [r3, #20]
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2391              		.loc 1 1454 5
 2392 00a2 7B68     		ldr	r3, [r7, #4]
 2393 00a4 1B68     		ldr	r3, [r3]
 2394 00a6 5A69     		ldr	r2, [r3, #20]
 2395 00a8 7B68     		ldr	r3, [r7, #4]
 2396 00aa 1B68     		ldr	r3, [r3]
 2397 00ac 22F04002 		bic	r2, r2, #64
 2398 00b0 5A61     		str	r2, [r3, #20]
 2399              	.L108:
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2400              		.loc 1 1458 3
 2401 00b2 7B68     		ldr	r3, [r7, #4]
 2402 00b4 0022     		movs	r2, #0
 2403 00b6 83F83820 		strb	r2, [r3, #56]
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2404              		.loc 1 1460 10
 2405 00ba 0023     		movs	r3, #0
 2406              	.L106:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2407              		.loc 1 1461 1
 2408 00bc 1846     		mov	r0, r3
 2409 00be 1437     		adds	r7, r7, #20
 2410              	.LCFI72:
 2411              		.cfi_def_cfa_offset 4
 2412 00c0 BD46     		mov	sp, r7
 2413              	.LCFI73:
 2414              		.cfi_def_cfa_register 13
 2415              		@ sp needed
 2416 00c2 5DF8047B 		ldr	r7, [sp], #4
 2417              	.LCFI74:
 2418              		.cfi_restore 7
 2419              		.cfi_def_cfa_offset 0
 2420 00c6 7047     		bx	lr
 2421              		.cfi_endproc
 2422              	.LFE143:
 2424              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2425              		.align	1
 2426              		.global	HAL_UART_DMAResume
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2430              		.fpu fpv4-sp-d16
 2432              	HAL_UART_DMAResume:
 2433              	.LFB144:
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
ARM GAS  /tmp/ccvnu0oO.s 			page 69


1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2434              		.loc 1 1470 1
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 16
 2437              		@ frame_needed = 1, uses_anonymous_args = 0
 2438              		@ link register save eliminated.
 2439 0000 80B4     		push	{r7}
 2440              	.LCFI75:
 2441              		.cfi_def_cfa_offset 4
 2442              		.cfi_offset 7, -4
 2443 0002 85B0     		sub	sp, sp, #20
 2444              	.LCFI76:
 2445              		.cfi_def_cfa_offset 24
 2446 0004 00AF     		add	r7, sp, #0
 2447              	.LCFI77:
 2448              		.cfi_def_cfa_register 7
 2449 0006 7860     		str	r0, [r7, #4]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2450              		.loc 1 1472 3
 2451 0008 7B68     		ldr	r3, [r7, #4]
 2452 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2453 000e 012B     		cmp	r3, #1
 2454 0010 01D1     		bne	.L110
 2455              		.loc 1 1472 3 is_stmt 0 discriminator 1
 2456 0012 0223     		movs	r3, #2
 2457 0014 3FE0     		b	.L111
 2458              	.L110:
 2459              		.loc 1 1472 3 discriminator 2
 2460 0016 7B68     		ldr	r3, [r7, #4]
 2461 0018 0122     		movs	r2, #1
 2462 001a 83F83820 		strb	r2, [r3, #56]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2463              		.loc 1 1474 12 is_stmt 1 discriminator 2
 2464 001e 7B68     		ldr	r3, [r7, #4]
 2465 0020 93F83930 		ldrb	r3, [r3, #57]
 2466 0024 DBB2     		uxtb	r3, r3
 2467              		.loc 1 1474 6 discriminator 2
 2468 0026 212B     		cmp	r3, #33
 2469 0028 07D1     		bne	.L112
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2470              		.loc 1 1477 5
 2471 002a 7B68     		ldr	r3, [r7, #4]
 2472 002c 1B68     		ldr	r3, [r3]
 2473 002e 5A69     		ldr	r2, [r3, #20]
 2474 0030 7B68     		ldr	r3, [r7, #4]
 2475 0032 1B68     		ldr	r3, [r3]
 2476 0034 42F08002 		orr	r2, r2, #128
 2477 0038 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccvnu0oO.s 			page 70


 2478              	.L112:
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2479              		.loc 1 1480 12
 2480 003a 7B68     		ldr	r3, [r7, #4]
 2481 003c 93F83A30 		ldrb	r3, [r3, #58]
 2482 0040 DBB2     		uxtb	r3, r3
 2483              		.loc 1 1480 6
 2484 0042 222B     		cmp	r3, #34
 2485 0044 22D1     		bne	.L113
 2486              	.LBB3:
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2487              		.loc 1 1483 5
 2488 0046 0023     		movs	r3, #0
 2489 0048 FB60     		str	r3, [r7, #12]
 2490 004a 7B68     		ldr	r3, [r7, #4]
 2491 004c 1B68     		ldr	r3, [r3]
 2492 004e 1B68     		ldr	r3, [r3]
 2493 0050 FB60     		str	r3, [r7, #12]
 2494 0052 7B68     		ldr	r3, [r7, #4]
 2495 0054 1B68     		ldr	r3, [r3]
 2496 0056 5B68     		ldr	r3, [r3, #4]
 2497 0058 FB60     		str	r3, [r7, #12]
 2498 005a FB68     		ldr	r3, [r7, #12]
 2499              	.LBE3:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2500              		.loc 1 1486 5
 2501 005c 7B68     		ldr	r3, [r7, #4]
 2502 005e 1B68     		ldr	r3, [r3]
 2503 0060 DA68     		ldr	r2, [r3, #12]
 2504 0062 7B68     		ldr	r3, [r7, #4]
 2505 0064 1B68     		ldr	r3, [r3]
 2506 0066 42F48072 		orr	r2, r2, #256
 2507 006a DA60     		str	r2, [r3, #12]
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2508              		.loc 1 1487 5
 2509 006c 7B68     		ldr	r3, [r7, #4]
 2510 006e 1B68     		ldr	r3, [r3]
 2511 0070 5A69     		ldr	r2, [r3, #20]
 2512 0072 7B68     		ldr	r3, [r7, #4]
 2513 0074 1B68     		ldr	r3, [r3]
 2514 0076 42F00102 		orr	r2, r2, #1
 2515 007a 5A61     		str	r2, [r3, #20]
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2516              		.loc 1 1490 5
 2517 007c 7B68     		ldr	r3, [r7, #4]
 2518 007e 1B68     		ldr	r3, [r3]
 2519 0080 5A69     		ldr	r2, [r3, #20]
 2520 0082 7B68     		ldr	r3, [r7, #4]
 2521 0084 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvnu0oO.s 			page 71


 2522 0086 42F04002 		orr	r2, r2, #64
 2523 008a 5A61     		str	r2, [r3, #20]
 2524              	.L113:
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2525              		.loc 1 1494 3
 2526 008c 7B68     		ldr	r3, [r7, #4]
 2527 008e 0022     		movs	r2, #0
 2528 0090 83F83820 		strb	r2, [r3, #56]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2529              		.loc 1 1496 10
 2530 0094 0023     		movs	r3, #0
 2531              	.L111:
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2532              		.loc 1 1497 1
 2533 0096 1846     		mov	r0, r3
 2534 0098 1437     		adds	r7, r7, #20
 2535              	.LCFI78:
 2536              		.cfi_def_cfa_offset 4
 2537 009a BD46     		mov	sp, r7
 2538              	.LCFI79:
 2539              		.cfi_def_cfa_register 13
 2540              		@ sp needed
 2541 009c 5DF8047B 		ldr	r7, [sp], #4
 2542              	.LCFI80:
 2543              		.cfi_restore 7
 2544              		.cfi_def_cfa_offset 0
 2545 00a0 7047     		bx	lr
 2546              		.cfi_endproc
 2547              	.LFE144:
 2549              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2550              		.align	1
 2551              		.global	HAL_UART_DMAStop
 2552              		.syntax unified
 2553              		.thumb
 2554              		.thumb_func
 2555              		.fpu fpv4-sp-d16
 2557              	HAL_UART_DMAStop:
 2558              	.LFB145:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2559              		.loc 1 1506 1
 2560              		.cfi_startproc
 2561              		@ args = 0, pretend = 0, frame = 16
 2562              		@ frame_needed = 1, uses_anonymous_args = 0
 2563 0000 80B5     		push	{r7, lr}
 2564              	.LCFI81:
ARM GAS  /tmp/ccvnu0oO.s 			page 72


 2565              		.cfi_def_cfa_offset 8
 2566              		.cfi_offset 7, -8
 2567              		.cfi_offset 14, -4
 2568 0002 84B0     		sub	sp, sp, #16
 2569              	.LCFI82:
 2570              		.cfi_def_cfa_offset 24
 2571 0004 00AF     		add	r7, sp, #0
 2572              	.LCFI83:
 2573              		.cfi_def_cfa_register 7
 2574 0006 7860     		str	r0, [r7, #4]
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2575              		.loc 1 1507 12
 2576 0008 0023     		movs	r3, #0
 2577 000a FB60     		str	r3, [r7, #12]
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2578              		.loc 1 1515 16
 2579 000c 7B68     		ldr	r3, [r7, #4]
 2580 000e 1B68     		ldr	r3, [r3]
 2581 0010 5B69     		ldr	r3, [r3, #20]
 2582 0012 03F08003 		and	r3, r3, #128
 2583 0016 802B     		cmp	r3, #128
 2584 0018 0CBF     		ite	eq
 2585 001a 0123     		moveq	r3, #1
 2586 001c 0023     		movne	r3, #0
 2587 001e DBB2     		uxtb	r3, r3
 2588              		.loc 1 1515 14
 2589 0020 FB60     		str	r3, [r7, #12]
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2590              		.loc 1 1516 13
 2591 0022 7B68     		ldr	r3, [r7, #4]
 2592 0024 93F83930 		ldrb	r3, [r3, #57]
 2593 0028 DBB2     		uxtb	r3, r3
 2594              		.loc 1 1516 6
 2595 002a 212B     		cmp	r3, #33
 2596 002c 16D1     		bne	.L115
 2597              		.loc 1 1516 49 discriminator 1
 2598 002e FB68     		ldr	r3, [r7, #12]
 2599 0030 002B     		cmp	r3, #0
 2600 0032 13D0     		beq	.L115
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2601              		.loc 1 1518 5
 2602 0034 7B68     		ldr	r3, [r7, #4]
 2603 0036 1B68     		ldr	r3, [r3]
 2604 0038 5A69     		ldr	r2, [r3, #20]
 2605 003a 7B68     		ldr	r3, [r7, #4]
 2606 003c 1B68     		ldr	r3, [r3]
 2607 003e 22F08002 		bic	r2, r2, #128
 2608 0042 5A61     		str	r2, [r3, #20]
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 73


1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2609              		.loc 1 1521 14
 2610 0044 7B68     		ldr	r3, [r7, #4]
 2611 0046 1B6B     		ldr	r3, [r3, #48]
 2612              		.loc 1 1521 8
 2613 0048 002B     		cmp	r3, #0
 2614 004a 04D0     		beq	.L116
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2615              		.loc 1 1523 7
 2616 004c 7B68     		ldr	r3, [r7, #4]
 2617 004e 1B6B     		ldr	r3, [r3, #48]
 2618 0050 1846     		mov	r0, r3
 2619 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2620              	.L116:
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2621              		.loc 1 1525 5
 2622 0056 7868     		ldr	r0, [r7, #4]
 2623 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2624              	.L115:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2625              		.loc 1 1529 16
 2626 005c 7B68     		ldr	r3, [r7, #4]
 2627 005e 1B68     		ldr	r3, [r3]
 2628 0060 5B69     		ldr	r3, [r3, #20]
 2629 0062 03F04003 		and	r3, r3, #64
 2630 0066 402B     		cmp	r3, #64
 2631 0068 0CBF     		ite	eq
 2632 006a 0123     		moveq	r3, #1
 2633 006c 0023     		movne	r3, #0
 2634 006e DBB2     		uxtb	r3, r3
 2635              		.loc 1 1529 14
 2636 0070 FB60     		str	r3, [r7, #12]
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2637              		.loc 1 1530 13
 2638 0072 7B68     		ldr	r3, [r7, #4]
 2639 0074 93F83A30 		ldrb	r3, [r3, #58]
 2640 0078 DBB2     		uxtb	r3, r3
 2641              		.loc 1 1530 6
 2642 007a 222B     		cmp	r3, #34
 2643 007c 16D1     		bne	.L117
 2644              		.loc 1 1530 50 discriminator 1
 2645 007e FB68     		ldr	r3, [r7, #12]
 2646 0080 002B     		cmp	r3, #0
 2647 0082 13D0     		beq	.L117
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2648              		.loc 1 1532 5
 2649 0084 7B68     		ldr	r3, [r7, #4]
 2650 0086 1B68     		ldr	r3, [r3]
 2651 0088 5A69     		ldr	r2, [r3, #20]
 2652 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 74


 2653 008c 1B68     		ldr	r3, [r3]
 2654 008e 22F04002 		bic	r2, r2, #64
 2655 0092 5A61     		str	r2, [r3, #20]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2656              		.loc 1 1535 14
 2657 0094 7B68     		ldr	r3, [r7, #4]
 2658 0096 5B6B     		ldr	r3, [r3, #52]
 2659              		.loc 1 1535 8
 2660 0098 002B     		cmp	r3, #0
 2661 009a 04D0     		beq	.L118
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2662              		.loc 1 1537 7
 2663 009c 7B68     		ldr	r3, [r7, #4]
 2664 009e 5B6B     		ldr	r3, [r3, #52]
 2665 00a0 1846     		mov	r0, r3
 2666 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2667              	.L118:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2668              		.loc 1 1539 5
 2669 00a6 7868     		ldr	r0, [r7, #4]
 2670 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2671              	.L117:
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2672              		.loc 1 1542 10
 2673 00ac 0023     		movs	r3, #0
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2674              		.loc 1 1543 1
 2675 00ae 1846     		mov	r0, r3
 2676 00b0 1037     		adds	r7, r7, #16
 2677              	.LCFI84:
 2678              		.cfi_def_cfa_offset 8
 2679 00b2 BD46     		mov	sp, r7
 2680              	.LCFI85:
 2681              		.cfi_def_cfa_register 13
 2682              		@ sp needed
 2683 00b4 80BD     		pop	{r7, pc}
 2684              		.cfi_endproc
 2685              	.LFE145:
 2687              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2688              		.align	1
 2689              		.global	HAL_UART_Abort
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2693              		.fpu fpv4-sp-d16
 2695              	HAL_UART_Abort:
 2696              	.LFB146:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccvnu0oO.s 			page 75


1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2697              		.loc 1 1558 1
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 8
 2700              		@ frame_needed = 1, uses_anonymous_args = 0
 2701 0000 80B5     		push	{r7, lr}
 2702              	.LCFI86:
 2703              		.cfi_def_cfa_offset 8
 2704              		.cfi_offset 7, -8
 2705              		.cfi_offset 14, -4
 2706 0002 82B0     		sub	sp, sp, #8
 2707              	.LCFI87:
 2708              		.cfi_def_cfa_offset 16
 2709 0004 00AF     		add	r7, sp, #0
 2710              	.LCFI88:
 2711              		.cfi_def_cfa_register 7
 2712 0006 7860     		str	r0, [r7, #4]
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2713              		.loc 1 1560 3
 2714 0008 7B68     		ldr	r3, [r7, #4]
 2715 000a 1B68     		ldr	r3, [r3]
 2716 000c DA68     		ldr	r2, [r3, #12]
 2717 000e 7B68     		ldr	r3, [r7, #4]
 2718 0010 1B68     		ldr	r3, [r3]
 2719 0012 22F4F072 		bic	r2, r2, #480
 2720 0016 DA60     		str	r2, [r3, #12]
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2721              		.loc 1 1561 3
 2722 0018 7B68     		ldr	r3, [r7, #4]
 2723 001a 1B68     		ldr	r3, [r3]
 2724 001c 5A69     		ldr	r2, [r3, #20]
 2725 001e 7B68     		ldr	r3, [r7, #4]
 2726 0020 1B68     		ldr	r3, [r3]
 2727 0022 22F00102 		bic	r2, r2, #1
 2728 0026 5A61     		str	r2, [r3, #20]
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2729              		.loc 1 1564 7
 2730 0028 7B68     		ldr	r3, [r7, #4]
 2731 002a 1B68     		ldr	r3, [r3]
 2732 002c 5B69     		ldr	r3, [r3, #20]
 2733 002e 03F08003 		and	r3, r3, #128
 2734              		.loc 1 1564 6
 2735 0032 802B     		cmp	r3, #128
 2736 0034 24D1     		bne	.L121
ARM GAS  /tmp/ccvnu0oO.s 			page 76


1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2737              		.loc 1 1566 5
 2738 0036 7B68     		ldr	r3, [r7, #4]
 2739 0038 1B68     		ldr	r3, [r3]
 2740 003a 5A69     		ldr	r2, [r3, #20]
 2741 003c 7B68     		ldr	r3, [r7, #4]
 2742 003e 1B68     		ldr	r3, [r3]
 2743 0040 22F08002 		bic	r2, r2, #128
 2744 0044 5A61     		str	r2, [r3, #20]
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2745              		.loc 1 1569 14
 2746 0046 7B68     		ldr	r3, [r7, #4]
 2747 0048 1B6B     		ldr	r3, [r3, #48]
 2748              		.loc 1 1569 8
 2749 004a 002B     		cmp	r3, #0
 2750 004c 18D0     		beq	.L121
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2751              		.loc 1 1573 12
 2752 004e 7B68     		ldr	r3, [r7, #4]
 2753 0050 1B6B     		ldr	r3, [r3, #48]
 2754              		.loc 1 1573 40
 2755 0052 0022     		movs	r2, #0
 2756 0054 1A65     		str	r2, [r3, #80]
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2757              		.loc 1 1575 11
 2758 0056 7B68     		ldr	r3, [r7, #4]
 2759 0058 1B6B     		ldr	r3, [r3, #48]
 2760 005a 1846     		mov	r0, r3
 2761 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2762 0060 0346     		mov	r3, r0
 2763              		.loc 1 1575 10
 2764 0062 002B     		cmp	r3, #0
 2765 0064 0CD0     		beq	.L121
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2766              		.loc 1 1577 13
 2767 0066 7B68     		ldr	r3, [r7, #4]
 2768 0068 1B6B     		ldr	r3, [r3, #48]
 2769 006a 1846     		mov	r0, r3
 2770 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2771 0070 0346     		mov	r3, r0
 2772              		.loc 1 1577 12
 2773 0072 202B     		cmp	r3, #32
 2774 0074 04D1     		bne	.L121
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2775              		.loc 1 1580 28
 2776 0076 7B68     		ldr	r3, [r7, #4]
 2777 0078 1022     		movs	r2, #16
ARM GAS  /tmp/ccvnu0oO.s 			page 77


 2778 007a DA63     		str	r2, [r3, #60]
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2779              		.loc 1 1582 18
 2780 007c 0323     		movs	r3, #3
 2781 007e 3DE0     		b	.L122
 2782              	.L121:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2783              		.loc 1 1589 7
 2784 0080 7B68     		ldr	r3, [r7, #4]
 2785 0082 1B68     		ldr	r3, [r3]
 2786 0084 5B69     		ldr	r3, [r3, #20]
 2787 0086 03F04003 		and	r3, r3, #64
 2788              		.loc 1 1589 6
 2789 008a 402B     		cmp	r3, #64
 2790 008c 24D1     		bne	.L123
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2791              		.loc 1 1591 5
 2792 008e 7B68     		ldr	r3, [r7, #4]
 2793 0090 1B68     		ldr	r3, [r3]
 2794 0092 5A69     		ldr	r2, [r3, #20]
 2795 0094 7B68     		ldr	r3, [r7, #4]
 2796 0096 1B68     		ldr	r3, [r3]
 2797 0098 22F04002 		bic	r2, r2, #64
 2798 009c 5A61     		str	r2, [r3, #20]
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2799              		.loc 1 1594 14
 2800 009e 7B68     		ldr	r3, [r7, #4]
 2801 00a0 5B6B     		ldr	r3, [r3, #52]
 2802              		.loc 1 1594 8
 2803 00a2 002B     		cmp	r3, #0
 2804 00a4 18D0     		beq	.L123
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2805              		.loc 1 1598 12
 2806 00a6 7B68     		ldr	r3, [r7, #4]
 2807 00a8 5B6B     		ldr	r3, [r3, #52]
 2808              		.loc 1 1598 40
 2809 00aa 0022     		movs	r2, #0
 2810 00ac 1A65     		str	r2, [r3, #80]
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2811              		.loc 1 1600 11
 2812 00ae 7B68     		ldr	r3, [r7, #4]
 2813 00b0 5B6B     		ldr	r3, [r3, #52]
 2814 00b2 1846     		mov	r0, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 78


 2815 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2816 00b8 0346     		mov	r3, r0
 2817              		.loc 1 1600 10
 2818 00ba 002B     		cmp	r3, #0
 2819 00bc 0CD0     		beq	.L123
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2820              		.loc 1 1602 13
 2821 00be 7B68     		ldr	r3, [r7, #4]
 2822 00c0 5B6B     		ldr	r3, [r3, #52]
 2823 00c2 1846     		mov	r0, r3
 2824 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2825 00c8 0346     		mov	r3, r0
 2826              		.loc 1 1602 12
 2827 00ca 202B     		cmp	r3, #32
 2828 00cc 04D1     		bne	.L123
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2829              		.loc 1 1605 28
 2830 00ce 7B68     		ldr	r3, [r7, #4]
 2831 00d0 1022     		movs	r2, #16
 2832 00d2 DA63     		str	r2, [r3, #60]
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2833              		.loc 1 1607 18
 2834 00d4 0323     		movs	r3, #3
 2835 00d6 11E0     		b	.L122
 2836              	.L123:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2837              		.loc 1 1614 22
 2838 00d8 7B68     		ldr	r3, [r7, #4]
 2839 00da 0022     		movs	r2, #0
 2840 00dc DA84     		strh	r2, [r3, #38]	@ movhi
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2841              		.loc 1 1615 22
 2842 00de 7B68     		ldr	r3, [r7, #4]
 2843 00e0 0022     		movs	r2, #0
 2844 00e2 DA85     		strh	r2, [r3, #46]	@ movhi
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2845              		.loc 1 1618 20
 2846 00e4 7B68     		ldr	r3, [r7, #4]
 2847 00e6 0022     		movs	r2, #0
 2848 00e8 DA63     		str	r2, [r3, #60]
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2849              		.loc 1 1621 18
 2850 00ea 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 79


 2851 00ec 2022     		movs	r2, #32
 2852 00ee 83F83A20 		strb	r2, [r3, #58]
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2853              		.loc 1 1622 17
 2854 00f2 7B68     		ldr	r3, [r7, #4]
 2855 00f4 2022     		movs	r2, #32
 2856 00f6 83F83920 		strb	r2, [r3, #57]
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2857              		.loc 1 1624 10
 2858 00fa 0023     		movs	r3, #0
 2859              	.L122:
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2860              		.loc 1 1625 1
 2861 00fc 1846     		mov	r0, r3
 2862 00fe 0837     		adds	r7, r7, #8
 2863              	.LCFI89:
 2864              		.cfi_def_cfa_offset 8
 2865 0100 BD46     		mov	sp, r7
 2866              	.LCFI90:
 2867              		.cfi_def_cfa_register 13
 2868              		@ sp needed
 2869 0102 80BD     		pop	{r7, pc}
 2870              		.cfi_endproc
 2871              	.LFE146:
 2873              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2874              		.align	1
 2875              		.global	HAL_UART_AbortTransmit
 2876              		.syntax unified
 2877              		.thumb
 2878              		.thumb_func
 2879              		.fpu fpv4-sp-d16
 2881              	HAL_UART_AbortTransmit:
 2882              	.LFB147:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2883              		.loc 1 1640 1
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 8
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887 0000 80B5     		push	{r7, lr}
 2888              	.LCFI91:
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 7, -8
ARM GAS  /tmp/ccvnu0oO.s 			page 80


 2891              		.cfi_offset 14, -4
 2892 0002 82B0     		sub	sp, sp, #8
 2893              	.LCFI92:
 2894              		.cfi_def_cfa_offset 16
 2895 0004 00AF     		add	r7, sp, #0
 2896              	.LCFI93:
 2897              		.cfi_def_cfa_register 7
 2898 0006 7860     		str	r0, [r7, #4]
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2899              		.loc 1 1642 3
 2900 0008 7B68     		ldr	r3, [r7, #4]
 2901 000a 1B68     		ldr	r3, [r3]
 2902 000c DA68     		ldr	r2, [r3, #12]
 2903 000e 7B68     		ldr	r3, [r7, #4]
 2904 0010 1B68     		ldr	r3, [r3]
 2905 0012 22F0C002 		bic	r2, r2, #192
 2906 0016 DA60     		str	r2, [r3, #12]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2907              		.loc 1 1645 7
 2908 0018 7B68     		ldr	r3, [r7, #4]
 2909 001a 1B68     		ldr	r3, [r3]
 2910 001c 5B69     		ldr	r3, [r3, #20]
 2911 001e 03F08003 		and	r3, r3, #128
 2912              		.loc 1 1645 6
 2913 0022 802B     		cmp	r3, #128
 2914 0024 24D1     		bne	.L125
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2915              		.loc 1 1647 5
 2916 0026 7B68     		ldr	r3, [r7, #4]
 2917 0028 1B68     		ldr	r3, [r3]
 2918 002a 5A69     		ldr	r2, [r3, #20]
 2919 002c 7B68     		ldr	r3, [r7, #4]
 2920 002e 1B68     		ldr	r3, [r3]
 2921 0030 22F08002 		bic	r2, r2, #128
 2922 0034 5A61     		str	r2, [r3, #20]
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2923              		.loc 1 1650 14
 2924 0036 7B68     		ldr	r3, [r7, #4]
 2925 0038 1B6B     		ldr	r3, [r3, #48]
 2926              		.loc 1 1650 8
 2927 003a 002B     		cmp	r3, #0
 2928 003c 18D0     		beq	.L125
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2929              		.loc 1 1654 12
 2930 003e 7B68     		ldr	r3, [r7, #4]
 2931 0040 1B6B     		ldr	r3, [r3, #48]
 2932              		.loc 1 1654 40
 2933 0042 0022     		movs	r2, #0
ARM GAS  /tmp/ccvnu0oO.s 			page 81


 2934 0044 1A65     		str	r2, [r3, #80]
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2935              		.loc 1 1656 11
 2936 0046 7B68     		ldr	r3, [r7, #4]
 2937 0048 1B6B     		ldr	r3, [r3, #48]
 2938 004a 1846     		mov	r0, r3
 2939 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2940 0050 0346     		mov	r3, r0
 2941              		.loc 1 1656 10
 2942 0052 002B     		cmp	r3, #0
 2943 0054 0CD0     		beq	.L125
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2944              		.loc 1 1658 13
 2945 0056 7B68     		ldr	r3, [r7, #4]
 2946 0058 1B6B     		ldr	r3, [r3, #48]
 2947 005a 1846     		mov	r0, r3
 2948 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2949 0060 0346     		mov	r3, r0
 2950              		.loc 1 1658 12
 2951 0062 202B     		cmp	r3, #32
 2952 0064 04D1     		bne	.L125
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2953              		.loc 1 1661 28
 2954 0066 7B68     		ldr	r3, [r7, #4]
 2955 0068 1022     		movs	r2, #16
 2956 006a DA63     		str	r2, [r3, #60]
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2957              		.loc 1 1663 18
 2958 006c 0323     		movs	r3, #3
 2959 006e 07E0     		b	.L126
 2960              	.L125:
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2961              		.loc 1 1670 22
 2962 0070 7B68     		ldr	r3, [r7, #4]
 2963 0072 0022     		movs	r2, #0
 2964 0074 DA84     		strh	r2, [r3, #38]	@ movhi
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2965              		.loc 1 1673 17
 2966 0076 7B68     		ldr	r3, [r7, #4]
 2967 0078 2022     		movs	r2, #32
 2968 007a 83F83920 		strb	r2, [r3, #57]
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2969              		.loc 1 1675 10
ARM GAS  /tmp/ccvnu0oO.s 			page 82


 2970 007e 0023     		movs	r3, #0
 2971              	.L126:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2972              		.loc 1 1676 1
 2973 0080 1846     		mov	r0, r3
 2974 0082 0837     		adds	r7, r7, #8
 2975              	.LCFI94:
 2976              		.cfi_def_cfa_offset 8
 2977 0084 BD46     		mov	sp, r7
 2978              	.LCFI95:
 2979              		.cfi_def_cfa_register 13
 2980              		@ sp needed
 2981 0086 80BD     		pop	{r7, pc}
 2982              		.cfi_endproc
 2983              	.LFE147:
 2985              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2986              		.align	1
 2987              		.global	HAL_UART_AbortReceive
 2988              		.syntax unified
 2989              		.thumb
 2990              		.thumb_func
 2991              		.fpu fpv4-sp-d16
 2993              	HAL_UART_AbortReceive:
 2994              	.LFB148:
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2995              		.loc 1 1691 1
 2996              		.cfi_startproc
 2997              		@ args = 0, pretend = 0, frame = 8
 2998              		@ frame_needed = 1, uses_anonymous_args = 0
 2999 0000 80B5     		push	{r7, lr}
 3000              	.LCFI96:
 3001              		.cfi_def_cfa_offset 8
 3002              		.cfi_offset 7, -8
 3003              		.cfi_offset 14, -4
 3004 0002 82B0     		sub	sp, sp, #8
 3005              	.LCFI97:
 3006              		.cfi_def_cfa_offset 16
 3007 0004 00AF     		add	r7, sp, #0
 3008              	.LCFI98:
 3009              		.cfi_def_cfa_register 7
 3010 0006 7860     		str	r0, [r7, #4]
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/ccvnu0oO.s 			page 83


 3011              		.loc 1 1693 3
 3012 0008 7B68     		ldr	r3, [r7, #4]
 3013 000a 1B68     		ldr	r3, [r3]
 3014 000c DA68     		ldr	r2, [r3, #12]
 3015 000e 7B68     		ldr	r3, [r7, #4]
 3016 0010 1B68     		ldr	r3, [r3]
 3017 0012 22F49072 		bic	r2, r2, #288
 3018 0016 DA60     		str	r2, [r3, #12]
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3019              		.loc 1 1694 3
 3020 0018 7B68     		ldr	r3, [r7, #4]
 3021 001a 1B68     		ldr	r3, [r3]
 3022 001c 5A69     		ldr	r2, [r3, #20]
 3023 001e 7B68     		ldr	r3, [r7, #4]
 3024 0020 1B68     		ldr	r3, [r3]
 3025 0022 22F00102 		bic	r2, r2, #1
 3026 0026 5A61     		str	r2, [r3, #20]
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3027              		.loc 1 1697 7
 3028 0028 7B68     		ldr	r3, [r7, #4]
 3029 002a 1B68     		ldr	r3, [r3]
 3030 002c 5B69     		ldr	r3, [r3, #20]
 3031 002e 03F04003 		and	r3, r3, #64
 3032              		.loc 1 1697 6
 3033 0032 402B     		cmp	r3, #64
 3034 0034 24D1     		bne	.L128
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3035              		.loc 1 1699 5
 3036 0036 7B68     		ldr	r3, [r7, #4]
 3037 0038 1B68     		ldr	r3, [r3]
 3038 003a 5A69     		ldr	r2, [r3, #20]
 3039 003c 7B68     		ldr	r3, [r7, #4]
 3040 003e 1B68     		ldr	r3, [r3]
 3041 0040 22F04002 		bic	r2, r2, #64
 3042 0044 5A61     		str	r2, [r3, #20]
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3043              		.loc 1 1702 14
 3044 0046 7B68     		ldr	r3, [r7, #4]
 3045 0048 5B6B     		ldr	r3, [r3, #52]
 3046              		.loc 1 1702 8
 3047 004a 002B     		cmp	r3, #0
 3048 004c 18D0     		beq	.L128
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3049              		.loc 1 1706 12
 3050 004e 7B68     		ldr	r3, [r7, #4]
 3051 0050 5B6B     		ldr	r3, [r3, #52]
 3052              		.loc 1 1706 40
 3053 0052 0022     		movs	r2, #0
 3054 0054 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccvnu0oO.s 			page 84


1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3055              		.loc 1 1708 11
 3056 0056 7B68     		ldr	r3, [r7, #4]
 3057 0058 5B6B     		ldr	r3, [r3, #52]
 3058 005a 1846     		mov	r0, r3
 3059 005c FFF7FEFF 		bl	HAL_DMA_Abort
 3060 0060 0346     		mov	r3, r0
 3061              		.loc 1 1708 10
 3062 0062 002B     		cmp	r3, #0
 3063 0064 0CD0     		beq	.L128
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3064              		.loc 1 1710 13
 3065 0066 7B68     		ldr	r3, [r7, #4]
 3066 0068 5B6B     		ldr	r3, [r3, #52]
 3067 006a 1846     		mov	r0, r3
 3068 006c FFF7FEFF 		bl	HAL_DMA_GetError
 3069 0070 0346     		mov	r3, r0
 3070              		.loc 1 1710 12
 3071 0072 202B     		cmp	r3, #32
 3072 0074 04D1     		bne	.L128
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3073              		.loc 1 1713 28
 3074 0076 7B68     		ldr	r3, [r7, #4]
 3075 0078 1022     		movs	r2, #16
 3076 007a DA63     		str	r2, [r3, #60]
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3077              		.loc 1 1715 18
 3078 007c 0323     		movs	r3, #3
 3079 007e 07E0     		b	.L129
 3080              	.L128:
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3081              		.loc 1 1722 22
 3082 0080 7B68     		ldr	r3, [r7, #4]
 3083 0082 0022     		movs	r2, #0
 3084 0084 DA85     		strh	r2, [r3, #46]	@ movhi
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3085              		.loc 1 1725 18
 3086 0086 7B68     		ldr	r3, [r7, #4]
 3087 0088 2022     		movs	r2, #32
 3088 008a 83F83A20 		strb	r2, [r3, #58]
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3089              		.loc 1 1727 10
 3090 008e 0023     		movs	r3, #0
ARM GAS  /tmp/ccvnu0oO.s 			page 85


 3091              	.L129:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3092              		.loc 1 1728 1
 3093 0090 1846     		mov	r0, r3
 3094 0092 0837     		adds	r7, r7, #8
 3095              	.LCFI99:
 3096              		.cfi_def_cfa_offset 8
 3097 0094 BD46     		mov	sp, r7
 3098              	.LCFI100:
 3099              		.cfi_def_cfa_register 13
 3100              		@ sp needed
 3101 0096 80BD     		pop	{r7, pc}
 3102              		.cfi_endproc
 3103              	.LFE148:
 3105              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3106              		.align	1
 3107              		.global	HAL_UART_Abort_IT
 3108              		.syntax unified
 3109              		.thumb
 3110              		.thumb_func
 3111              		.fpu fpv4-sp-d16
 3113              	HAL_UART_Abort_IT:
 3114              	.LFB149:
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3115              		.loc 1 1745 1
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 16
 3118              		@ frame_needed = 1, uses_anonymous_args = 0
 3119 0000 80B5     		push	{r7, lr}
 3120              	.LCFI101:
 3121              		.cfi_def_cfa_offset 8
 3122              		.cfi_offset 7, -8
 3123              		.cfi_offset 14, -4
 3124 0002 84B0     		sub	sp, sp, #16
 3125              	.LCFI102:
 3126              		.cfi_def_cfa_offset 24
 3127 0004 00AF     		add	r7, sp, #0
 3128              	.LCFI103:
 3129              		.cfi_def_cfa_register 7
 3130 0006 7860     		str	r0, [r7, #4]
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
ARM GAS  /tmp/ccvnu0oO.s 			page 86


 3131              		.loc 1 1746 12
 3132 0008 0123     		movs	r3, #1
 3133 000a FB60     		str	r3, [r7, #12]
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 3134              		.loc 1 1749 3
 3135 000c 7B68     		ldr	r3, [r7, #4]
 3136 000e 1B68     		ldr	r3, [r3]
 3137 0010 DA68     		ldr	r2, [r3, #12]
 3138 0012 7B68     		ldr	r3, [r7, #4]
 3139 0014 1B68     		ldr	r3, [r3]
 3140 0016 22F4F072 		bic	r2, r2, #480
 3141 001a DA60     		str	r2, [r3, #12]
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3142              		.loc 1 1750 3
 3143 001c 7B68     		ldr	r3, [r7, #4]
 3144 001e 1B68     		ldr	r3, [r3]
 3145 0020 5A69     		ldr	r2, [r3, #20]
 3146 0022 7B68     		ldr	r3, [r7, #4]
 3147 0024 1B68     		ldr	r3, [r3]
 3148 0026 22F00102 		bic	r2, r2, #1
 3149 002a 5A61     		str	r2, [r3, #20]
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 3150              		.loc 1 1755 12
 3151 002c 7B68     		ldr	r3, [r7, #4]
 3152 002e 1B6B     		ldr	r3, [r3, #48]
 3153              		.loc 1 1755 6
 3154 0030 002B     		cmp	r3, #0
 3155 0032 0FD0     		beq	.L131
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3156              		.loc 1 1759 9
 3157 0034 7B68     		ldr	r3, [r7, #4]
 3158 0036 1B68     		ldr	r3, [r3]
 3159 0038 5B69     		ldr	r3, [r3, #20]
 3160 003a 03F08003 		and	r3, r3, #128
 3161              		.loc 1 1759 8
 3162 003e 802B     		cmp	r3, #128
 3163 0040 04D1     		bne	.L132
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 3164              		.loc 1 1761 12
 3165 0042 7B68     		ldr	r3, [r7, #4]
 3166 0044 1B6B     		ldr	r3, [r3, #48]
 3167              		.loc 1 1761 40
 3168 0046 3E4A     		ldr	r2, .L141
 3169 0048 1A65     		str	r2, [r3, #80]
 3170 004a 03E0     		b	.L131
 3171              	.L132:
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccvnu0oO.s 			page 87


1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3172              		.loc 1 1765 12
 3173 004c 7B68     		ldr	r3, [r7, #4]
 3174 004e 1B6B     		ldr	r3, [r3, #48]
 3175              		.loc 1 1765 40
 3176 0050 0022     		movs	r2, #0
 3177 0052 1A65     		str	r2, [r3, #80]
 3178              	.L131:
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 3179              		.loc 1 1769 12
 3180 0054 7B68     		ldr	r3, [r7, #4]
 3181 0056 5B6B     		ldr	r3, [r3, #52]
 3182              		.loc 1 1769 6
 3183 0058 002B     		cmp	r3, #0
 3184 005a 0FD0     		beq	.L133
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3185              		.loc 1 1773 9
 3186 005c 7B68     		ldr	r3, [r7, #4]
 3187 005e 1B68     		ldr	r3, [r3]
 3188 0060 5B69     		ldr	r3, [r3, #20]
 3189 0062 03F04003 		and	r3, r3, #64
 3190              		.loc 1 1773 8
 3191 0066 402B     		cmp	r3, #64
 3192 0068 04D1     		bne	.L134
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 3193              		.loc 1 1775 12
 3194 006a 7B68     		ldr	r3, [r7, #4]
 3195 006c 5B6B     		ldr	r3, [r3, #52]
 3196              		.loc 1 1775 40
 3197 006e 354A     		ldr	r2, .L141+4
 3198 0070 1A65     		str	r2, [r3, #80]
 3199 0072 03E0     		b	.L133
 3200              	.L134:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3201              		.loc 1 1779 12
 3202 0074 7B68     		ldr	r3, [r7, #4]
 3203 0076 5B6B     		ldr	r3, [r3, #52]
 3204              		.loc 1 1779 40
 3205 0078 0022     		movs	r2, #0
 3206 007a 1A65     		str	r2, [r3, #80]
 3207              	.L133:
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
ARM GAS  /tmp/ccvnu0oO.s 			page 88


1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3208              		.loc 1 1784 7
 3209 007c 7B68     		ldr	r3, [r7, #4]
 3210 007e 1B68     		ldr	r3, [r3]
 3211 0080 5B69     		ldr	r3, [r3, #20]
 3212 0082 03F08003 		and	r3, r3, #128
 3213              		.loc 1 1784 6
 3214 0086 802B     		cmp	r3, #128
 3215 0088 1AD1     		bne	.L135
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3216              		.loc 1 1787 5
 3217 008a 7B68     		ldr	r3, [r7, #4]
 3218 008c 1B68     		ldr	r3, [r3]
 3219 008e 5A69     		ldr	r2, [r3, #20]
 3220 0090 7B68     		ldr	r3, [r7, #4]
 3221 0092 1B68     		ldr	r3, [r3]
 3222 0094 22F08002 		bic	r2, r2, #128
 3223 0098 5A61     		str	r2, [r3, #20]
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3224              		.loc 1 1790 14
 3225 009a 7B68     		ldr	r3, [r7, #4]
 3226 009c 1B6B     		ldr	r3, [r3, #48]
 3227              		.loc 1 1790 8
 3228 009e 002B     		cmp	r3, #0
 3229 00a0 0ED0     		beq	.L135
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3230              		.loc 1 1796 11
 3231 00a2 7B68     		ldr	r3, [r7, #4]
 3232 00a4 1B6B     		ldr	r3, [r3, #48]
 3233 00a6 1846     		mov	r0, r3
 3234 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3235 00ac 0346     		mov	r3, r0
 3236              		.loc 1 1796 10
 3237 00ae 002B     		cmp	r3, #0
 3238 00b0 04D0     		beq	.L136
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3239              		.loc 1 1798 14
 3240 00b2 7B68     		ldr	r3, [r7, #4]
 3241 00b4 1B6B     		ldr	r3, [r3, #48]
 3242              		.loc 1 1798 42
 3243 00b6 0022     		movs	r2, #0
 3244 00b8 1A65     		str	r2, [r3, #80]
 3245 00ba 01E0     		b	.L135
 3246              	.L136:
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccvnu0oO.s 			page 89


1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 3247              		.loc 1 1802 19
 3248 00bc 0023     		movs	r3, #0
 3249 00be FB60     		str	r3, [r7, #12]
 3250              	.L135:
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3251              		.loc 1 1808 7
 3252 00c0 7B68     		ldr	r3, [r7, #4]
 3253 00c2 1B68     		ldr	r3, [r3]
 3254 00c4 5B69     		ldr	r3, [r3, #20]
 3255 00c6 03F04003 		and	r3, r3, #64
 3256              		.loc 1 1808 6
 3257 00ca 402B     		cmp	r3, #64
 3258 00cc 1CD1     		bne	.L137
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3259              		.loc 1 1810 5
 3260 00ce 7B68     		ldr	r3, [r7, #4]
 3261 00d0 1B68     		ldr	r3, [r3]
 3262 00d2 5A69     		ldr	r2, [r3, #20]
 3263 00d4 7B68     		ldr	r3, [r7, #4]
 3264 00d6 1B68     		ldr	r3, [r3]
 3265 00d8 22F04002 		bic	r2, r2, #64
 3266 00dc 5A61     		str	r2, [r3, #20]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3267              		.loc 1 1813 14
 3268 00de 7B68     		ldr	r3, [r7, #4]
 3269 00e0 5B6B     		ldr	r3, [r3, #52]
 3270              		.loc 1 1813 8
 3271 00e2 002B     		cmp	r3, #0
 3272 00e4 10D0     		beq	.L137
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3273              		.loc 1 1819 11
 3274 00e6 7B68     		ldr	r3, [r7, #4]
 3275 00e8 5B6B     		ldr	r3, [r3, #52]
 3276 00ea 1846     		mov	r0, r3
 3277 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3278 00f0 0346     		mov	r3, r0
 3279              		.loc 1 1819 10
 3280 00f2 002B     		cmp	r3, #0
 3281 00f4 06D0     		beq	.L138
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3282              		.loc 1 1821 14
 3283 00f6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 90


 3284 00f8 5B6B     		ldr	r3, [r3, #52]
 3285              		.loc 1 1821 42
 3286 00fa 0022     		movs	r2, #0
 3287 00fc 1A65     		str	r2, [r3, #80]
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3288              		.loc 1 1822 19
 3289 00fe 0123     		movs	r3, #1
 3290 0100 FB60     		str	r3, [r7, #12]
 3291 0102 01E0     		b	.L137
 3292              	.L138:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 3293              		.loc 1 1826 19
 3294 0104 0023     		movs	r3, #0
 3295 0106 FB60     		str	r3, [r7, #12]
 3296              	.L137:
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 3297              		.loc 1 1832 6
 3298 0108 FB68     		ldr	r3, [r7, #12]
 3299 010a 012B     		cmp	r3, #1
 3300 010c 13D1     		bne	.L139
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 3301              		.loc 1 1835 24
 3302 010e 7B68     		ldr	r3, [r7, #4]
 3303 0110 0022     		movs	r2, #0
 3304 0112 DA84     		strh	r2, [r3, #38]	@ movhi
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3305              		.loc 1 1836 24
 3306 0114 7B68     		ldr	r3, [r7, #4]
 3307 0116 0022     		movs	r2, #0
 3308 0118 DA85     		strh	r2, [r3, #46]	@ movhi
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3309              		.loc 1 1839 22
 3310 011a 7B68     		ldr	r3, [r7, #4]
 3311 011c 0022     		movs	r2, #0
 3312 011e DA63     		str	r2, [r3, #60]
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3313              		.loc 1 1842 20
 3314 0120 7B68     		ldr	r3, [r7, #4]
 3315 0122 2022     		movs	r2, #32
 3316 0124 83F83920 		strb	r2, [r3, #57]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3317              		.loc 1 1843 20
 3318 0128 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 91


 3319 012a 2022     		movs	r2, #32
 3320 012c 83F83A20 		strb	r2, [r3, #58]
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3321              		.loc 1 1851 5
 3322 0130 7868     		ldr	r0, [r7, #4]
 3323 0132 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3324              	.L139:
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3325              		.loc 1 1855 10
 3326 0136 0023     		movs	r3, #0
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3327              		.loc 1 1856 1
 3328 0138 1846     		mov	r0, r3
 3329 013a 1037     		adds	r7, r7, #16
 3330              	.LCFI104:
 3331              		.cfi_def_cfa_offset 8
 3332 013c BD46     		mov	sp, r7
 3333              	.LCFI105:
 3334              		.cfi_def_cfa_register 13
 3335              		@ sp needed
 3336 013e 80BD     		pop	{r7, pc}
 3337              	.L142:
 3338              		.align	2
 3339              	.L141:
 3340 0140 00000000 		.word	UART_DMATxAbortCallback
 3341 0144 00000000 		.word	UART_DMARxAbortCallback
 3342              		.cfi_endproc
 3343              	.LFE149:
 3345              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3346              		.align	1
 3347              		.global	HAL_UART_AbortTransmit_IT
 3348              		.syntax unified
 3349              		.thumb
 3350              		.thumb_func
 3351              		.fpu fpv4-sp-d16
 3353              	HAL_UART_AbortTransmit_IT:
 3354              	.LFB150:
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccvnu0oO.s 			page 92


1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3355              		.loc 1 1873 1
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 8
 3358              		@ frame_needed = 1, uses_anonymous_args = 0
 3359 0000 80B5     		push	{r7, lr}
 3360              	.LCFI106:
 3361              		.cfi_def_cfa_offset 8
 3362              		.cfi_offset 7, -8
 3363              		.cfi_offset 14, -4
 3364 0002 82B0     		sub	sp, sp, #8
 3365              	.LCFI107:
 3366              		.cfi_def_cfa_offset 16
 3367 0004 00AF     		add	r7, sp, #0
 3368              	.LCFI108:
 3369              		.cfi_def_cfa_register 7
 3370 0006 7860     		str	r0, [r7, #4]
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3371              		.loc 1 1875 3
 3372 0008 7B68     		ldr	r3, [r7, #4]
 3373 000a 1B68     		ldr	r3, [r3]
 3374 000c DA68     		ldr	r2, [r3, #12]
 3375 000e 7B68     		ldr	r3, [r7, #4]
 3376 0010 1B68     		ldr	r3, [r3]
 3377 0012 22F0C002 		bic	r2, r2, #192
 3378 0016 DA60     		str	r2, [r3, #12]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3379              		.loc 1 1878 7
 3380 0018 7B68     		ldr	r3, [r7, #4]
 3381 001a 1B68     		ldr	r3, [r3]
 3382 001c 5B69     		ldr	r3, [r3, #20]
 3383 001e 03F08003 		and	r3, r3, #128
 3384              		.loc 1 1878 6
 3385 0022 802B     		cmp	r3, #128
 3386 0024 2AD1     		bne	.L144
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3387              		.loc 1 1880 5
 3388 0026 7B68     		ldr	r3, [r7, #4]
 3389 0028 1B68     		ldr	r3, [r3]
 3390 002a 5A69     		ldr	r2, [r3, #20]
 3391 002c 7B68     		ldr	r3, [r7, #4]
 3392 002e 1B68     		ldr	r3, [r3]
 3393 0030 22F08002 		bic	r2, r2, #128
 3394 0034 5A61     		str	r2, [r3, #20]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
ARM GAS  /tmp/ccvnu0oO.s 			page 93


 3395              		.loc 1 1883 14
 3396 0036 7B68     		ldr	r3, [r7, #4]
 3397 0038 1B6B     		ldr	r3, [r3, #48]
 3398              		.loc 1 1883 8
 3399 003a 002B     		cmp	r3, #0
 3400 003c 13D0     		beq	.L145
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3401              		.loc 1 1887 12
 3402 003e 7B68     		ldr	r3, [r7, #4]
 3403 0040 1B6B     		ldr	r3, [r3, #48]
 3404              		.loc 1 1887 40
 3405 0042 164A     		ldr	r2, .L148
 3406 0044 1A65     		str	r2, [r3, #80]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3407              		.loc 1 1890 11
 3408 0046 7B68     		ldr	r3, [r7, #4]
 3409 0048 1B6B     		ldr	r3, [r3, #48]
 3410 004a 1846     		mov	r0, r3
 3411 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3412 0050 0346     		mov	r3, r0
 3413              		.loc 1 1890 10
 3414 0052 002B     		cmp	r3, #0
 3415 0054 1CD0     		beq	.L146
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3416              		.loc 1 1893 14
 3417 0056 7B68     		ldr	r3, [r7, #4]
 3418 0058 1B6B     		ldr	r3, [r3, #48]
 3419              		.loc 1 1893 22
 3420 005a 1B6D     		ldr	r3, [r3, #80]
 3421              		.loc 1 1893 47
 3422 005c 7A68     		ldr	r2, [r7, #4]
 3423 005e 126B     		ldr	r2, [r2, #48]
 3424              		.loc 1 1893 9
 3425 0060 1046     		mov	r0, r2
 3426 0062 9847     		blx	r3
 3427              	.LVL0:
 3428 0064 14E0     		b	.L146
 3429              	.L145:
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 3430              		.loc 1 1899 26
 3431 0066 7B68     		ldr	r3, [r7, #4]
 3432 0068 0022     		movs	r2, #0
 3433 006a DA84     		strh	r2, [r3, #38]	@ movhi
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
ARM GAS  /tmp/ccvnu0oO.s 			page 94


1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3434              		.loc 1 1902 21
 3435 006c 7B68     		ldr	r3, [r7, #4]
 3436 006e 2022     		movs	r2, #32
 3437 0070 83F83920 		strb	r2, [r3, #57]
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3438              		.loc 1 1910 7
 3439 0074 7868     		ldr	r0, [r7, #4]
 3440 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3441 007a 09E0     		b	.L146
 3442              	.L144:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 3443              		.loc 1 1917 24
 3444 007c 7B68     		ldr	r3, [r7, #4]
 3445 007e 0022     		movs	r2, #0
 3446 0080 DA84     		strh	r2, [r3, #38]	@ movhi
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3447              		.loc 1 1920 19
 3448 0082 7B68     		ldr	r3, [r7, #4]
 3449 0084 2022     		movs	r2, #32
 3450 0086 83F83920 		strb	r2, [r3, #57]
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3451              		.loc 1 1928 5
 3452 008a 7868     		ldr	r0, [r7, #4]
 3453 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3454              	.L146:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3455              		.loc 1 1932 10
 3456 0090 0023     		movs	r3, #0
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3457              		.loc 1 1933 1
 3458 0092 1846     		mov	r0, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 95


 3459 0094 0837     		adds	r7, r7, #8
 3460              	.LCFI109:
 3461              		.cfi_def_cfa_offset 8
 3462 0096 BD46     		mov	sp, r7
 3463              	.LCFI110:
 3464              		.cfi_def_cfa_register 13
 3465              		@ sp needed
 3466 0098 80BD     		pop	{r7, pc}
 3467              	.L149:
 3468 009a 00BF     		.align	2
 3469              	.L148:
 3470 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3471              		.cfi_endproc
 3472              	.LFE150:
 3474              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3475              		.align	1
 3476              		.global	HAL_UART_AbortReceive_IT
 3477              		.syntax unified
 3478              		.thumb
 3479              		.thumb_func
 3480              		.fpu fpv4-sp-d16
 3482              	HAL_UART_AbortReceive_IT:
 3483              	.LFB151:
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3484              		.loc 1 1950 1
 3485              		.cfi_startproc
 3486              		@ args = 0, pretend = 0, frame = 8
 3487              		@ frame_needed = 1, uses_anonymous_args = 0
 3488 0000 80B5     		push	{r7, lr}
 3489              	.LCFI111:
 3490              		.cfi_def_cfa_offset 8
 3491              		.cfi_offset 7, -8
 3492              		.cfi_offset 14, -4
 3493 0002 82B0     		sub	sp, sp, #8
 3494              	.LCFI112:
 3495              		.cfi_def_cfa_offset 16
 3496 0004 00AF     		add	r7, sp, #0
 3497              	.LCFI113:
 3498              		.cfi_def_cfa_register 7
 3499 0006 7860     		str	r0, [r7, #4]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  /tmp/ccvnu0oO.s 			page 96


1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3500              		.loc 1 1952 3
 3501 0008 7B68     		ldr	r3, [r7, #4]
 3502 000a 1B68     		ldr	r3, [r3]
 3503 000c DA68     		ldr	r2, [r3, #12]
 3504 000e 7B68     		ldr	r3, [r7, #4]
 3505 0010 1B68     		ldr	r3, [r3]
 3506 0012 22F49072 		bic	r2, r2, #288
 3507 0016 DA60     		str	r2, [r3, #12]
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3508              		.loc 1 1953 3
 3509 0018 7B68     		ldr	r3, [r7, #4]
 3510 001a 1B68     		ldr	r3, [r3]
 3511 001c 5A69     		ldr	r2, [r3, #20]
 3512 001e 7B68     		ldr	r3, [r7, #4]
 3513 0020 1B68     		ldr	r3, [r3]
 3514 0022 22F00102 		bic	r2, r2, #1
 3515 0026 5A61     		str	r2, [r3, #20]
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3516              		.loc 1 1956 7
 3517 0028 7B68     		ldr	r3, [r7, #4]
 3518 002a 1B68     		ldr	r3, [r3]
 3519 002c 5B69     		ldr	r3, [r3, #20]
 3520 002e 03F04003 		and	r3, r3, #64
 3521              		.loc 1 1956 6
 3522 0032 402B     		cmp	r3, #64
 3523 0034 2AD1     		bne	.L151
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3524              		.loc 1 1958 5
 3525 0036 7B68     		ldr	r3, [r7, #4]
 3526 0038 1B68     		ldr	r3, [r3]
 3527 003a 5A69     		ldr	r2, [r3, #20]
 3528 003c 7B68     		ldr	r3, [r7, #4]
 3529 003e 1B68     		ldr	r3, [r3]
 3530 0040 22F04002 		bic	r2, r2, #64
 3531 0044 5A61     		str	r2, [r3, #20]
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3532              		.loc 1 1961 14
 3533 0046 7B68     		ldr	r3, [r7, #4]
 3534 0048 5B6B     		ldr	r3, [r3, #52]
 3535              		.loc 1 1961 8
 3536 004a 002B     		cmp	r3, #0
 3537 004c 13D0     		beq	.L152
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3538              		.loc 1 1965 12
 3539 004e 7B68     		ldr	r3, [r7, #4]
 3540 0050 5B6B     		ldr	r3, [r3, #52]
 3541              		.loc 1 1965 40
 3542 0052 164A     		ldr	r2, .L155
ARM GAS  /tmp/ccvnu0oO.s 			page 97


 3543 0054 1A65     		str	r2, [r3, #80]
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3544              		.loc 1 1968 11
 3545 0056 7B68     		ldr	r3, [r7, #4]
 3546 0058 5B6B     		ldr	r3, [r3, #52]
 3547 005a 1846     		mov	r0, r3
 3548 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3549 0060 0346     		mov	r3, r0
 3550              		.loc 1 1968 10
 3551 0062 002B     		cmp	r3, #0
 3552 0064 1CD0     		beq	.L153
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3553              		.loc 1 1971 14
 3554 0066 7B68     		ldr	r3, [r7, #4]
 3555 0068 5B6B     		ldr	r3, [r3, #52]
 3556              		.loc 1 1971 22
 3557 006a 1B6D     		ldr	r3, [r3, #80]
 3558              		.loc 1 1971 47
 3559 006c 7A68     		ldr	r2, [r7, #4]
 3560 006e 526B     		ldr	r2, [r2, #52]
 3561              		.loc 1 1971 9
 3562 0070 1046     		mov	r0, r2
 3563 0072 9847     		blx	r3
 3564              	.LVL1:
 3565 0074 14E0     		b	.L153
 3566              	.L152:
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 3567              		.loc 1 1977 26
 3568 0076 7B68     		ldr	r3, [r7, #4]
 3569 0078 0022     		movs	r2, #0
 3570 007a DA85     		strh	r2, [r3, #46]	@ movhi
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3571              		.loc 1 1980 22
 3572 007c 7B68     		ldr	r3, [r7, #4]
 3573 007e 2022     		movs	r2, #32
 3574 0080 83F83A20 		strb	r2, [r3, #58]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3575              		.loc 1 1988 7
 3576 0084 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 98


 3577 0086 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3578 008a 09E0     		b	.L153
 3579              	.L151:
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3580              		.loc 1 1995 24
 3581 008c 7B68     		ldr	r3, [r7, #4]
 3582 008e 0022     		movs	r2, #0
 3583 0090 DA85     		strh	r2, [r3, #46]	@ movhi
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3584              		.loc 1 1998 20
 3585 0092 7B68     		ldr	r3, [r7, #4]
 3586 0094 2022     		movs	r2, #32
 3587 0096 83F83A20 		strb	r2, [r3, #58]
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3588              		.loc 1 2006 5
 3589 009a 7868     		ldr	r0, [r7, #4]
 3590 009c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3591              	.L153:
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3592              		.loc 1 2010 10
 3593 00a0 0023     		movs	r3, #0
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3594              		.loc 1 2011 1
 3595 00a2 1846     		mov	r0, r3
 3596 00a4 0837     		adds	r7, r7, #8
 3597              	.LCFI114:
 3598              		.cfi_def_cfa_offset 8
 3599 00a6 BD46     		mov	sp, r7
 3600              	.LCFI115:
 3601              		.cfi_def_cfa_register 13
 3602              		@ sp needed
 3603 00a8 80BD     		pop	{r7, pc}
 3604              	.L156:
 3605 00aa 00BF     		.align	2
 3606              	.L155:
 3607 00ac 00000000 		.word	UART_DMARxOnlyAbortCallback
 3608              		.cfi_endproc
 3609              	.LFE151:
 3611              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccvnu0oO.s 			page 99


 3612              		.align	1
 3613              		.global	HAL_UART_IRQHandler
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3617              		.fpu fpv4-sp-d16
 3619              	HAL_UART_IRQHandler:
 3620              	.LFB152:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3621              		.loc 1 2020 1
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 32
 3624              		@ frame_needed = 1, uses_anonymous_args = 0
 3625 0000 80B5     		push	{r7, lr}
 3626              	.LCFI116:
 3627              		.cfi_def_cfa_offset 8
 3628              		.cfi_offset 7, -8
 3629              		.cfi_offset 14, -4
 3630 0002 88B0     		sub	sp, sp, #32
 3631              	.LCFI117:
 3632              		.cfi_def_cfa_offset 40
 3633 0004 00AF     		add	r7, sp, #0
 3634              	.LCFI118:
 3635              		.cfi_def_cfa_register 7
 3636 0006 7860     		str	r0, [r7, #4]
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3637              		.loc 1 2021 25
 3638 0008 7B68     		ldr	r3, [r7, #4]
 3639 000a 1B68     		ldr	r3, [r3]
 3640              		.loc 1 2021 12
 3641 000c 1B68     		ldr	r3, [r3]
 3642 000e FB61     		str	r3, [r7, #28]
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3643              		.loc 1 2022 25
 3644 0010 7B68     		ldr	r3, [r7, #4]
 3645 0012 1B68     		ldr	r3, [r3]
 3646              		.loc 1 2022 12
 3647 0014 DB68     		ldr	r3, [r3, #12]
 3648 0016 BB61     		str	r3, [r7, #24]
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3649              		.loc 1 2023 25
 3650 0018 7B68     		ldr	r3, [r7, #4]
 3651 001a 1B68     		ldr	r3, [r3]
 3652              		.loc 1 2023 12
 3653 001c 5B69     		ldr	r3, [r3, #20]
 3654 001e 7B61     		str	r3, [r7, #20]
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 3655              		.loc 1 2024 12
 3656 0020 0023     		movs	r3, #0
ARM GAS  /tmp/ccvnu0oO.s 			page 100


 3657 0022 3B61     		str	r3, [r7, #16]
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3658              		.loc 1 2025 12
 3659 0024 0023     		movs	r3, #0
 3660 0026 FB60     		str	r3, [r7, #12]
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 3661              		.loc 1 2028 14
 3662 0028 FB69     		ldr	r3, [r7, #28]
 3663 002a 03F00F03 		and	r3, r3, #15
 3664 002e 3B61     		str	r3, [r7, #16]
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 3665              		.loc 1 2029 6
 3666 0030 3B69     		ldr	r3, [r7, #16]
 3667 0032 002B     		cmp	r3, #0
 3668 0034 0DD1     		bne	.L158
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3669              		.loc 1 2032 20
 3670 0036 FB69     		ldr	r3, [r7, #28]
 3671 0038 03F02003 		and	r3, r3, #32
 3672              		.loc 1 2032 8
 3673 003c 002B     		cmp	r3, #0
 3674 003e 08D0     		beq	.L158
 3675              		.loc 1 2032 59 discriminator 1
 3676 0040 BB69     		ldr	r3, [r7, #24]
 3677 0042 03F02003 		and	r3, r3, #32
 3678              		.loc 1 2032 47 discriminator 1
 3679 0046 002B     		cmp	r3, #0
 3680 0048 03D0     		beq	.L158
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 3681              		.loc 1 2034 7
 3682 004a 7868     		ldr	r0, [r7, #4]
 3683 004c FFF7FEFF 		bl	UART_Receive_IT
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3684              		.loc 1 2035 7
 3685 0050 D0E0     		b	.L157
 3686              	.L158:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
 3687              		.loc 1 2040 6
 3688 0052 3B69     		ldr	r3, [r7, #16]
 3689 0054 002B     		cmp	r3, #0
 3690 0056 00F0B080 		beq	.L160
 3691              		.loc 1 2040 42 discriminator 1
 3692 005a 7B69     		ldr	r3, [r7, #20]
 3693 005c 03F00103 		and	r3, r3, #1
 3694              		.loc 1 2040 29 discriminator 1
 3695 0060 002B     		cmp	r3, #0
 3696 0062 05D1     		bne	.L161
 3697              		.loc 1 2040 81 discriminator 2
ARM GAS  /tmp/ccvnu0oO.s 			page 101


 3698 0064 BB69     		ldr	r3, [r7, #24]
 3699 0066 03F49073 		and	r3, r3, #288
 3700              		.loc 1 2040 69 discriminator 2
 3701 006a 002B     		cmp	r3, #0
 3702 006c 00F0A580 		beq	.L160
 3703              	.L161:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3704              		.loc 1 2043 20
 3705 0070 FB69     		ldr	r3, [r7, #28]
 3706 0072 03F00103 		and	r3, r3, #1
 3707              		.loc 1 2043 8
 3708 0076 002B     		cmp	r3, #0
 3709 0078 0AD0     		beq	.L162
 3710              		.loc 1 2043 57 discriminator 1
 3711 007a BB69     		ldr	r3, [r7, #24]
 3712 007c 03F48073 		and	r3, r3, #256
 3713              		.loc 1 2043 45 discriminator 1
 3714 0080 002B     		cmp	r3, #0
 3715 0082 05D0     		beq	.L162
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3716              		.loc 1 2045 24
 3717 0084 7B68     		ldr	r3, [r7, #4]
 3718 0086 DB6B     		ldr	r3, [r3, #60]
 3719 0088 43F00102 		orr	r2, r3, #1
 3720 008c 7B68     		ldr	r3, [r7, #4]
 3721 008e DA63     		str	r2, [r3, #60]
 3722              	.L162:
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3723              		.loc 1 2049 20
 3724 0090 FB69     		ldr	r3, [r7, #28]
 3725 0092 03F00403 		and	r3, r3, #4
 3726              		.loc 1 2049 8
 3727 0096 002B     		cmp	r3, #0
 3728 0098 0AD0     		beq	.L163
 3729              		.loc 1 2049 57 discriminator 1
 3730 009a 7B69     		ldr	r3, [r7, #20]
 3731 009c 03F00103 		and	r3, r3, #1
 3732              		.loc 1 2049 45 discriminator 1
 3733 00a0 002B     		cmp	r3, #0
 3734 00a2 05D0     		beq	.L163
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3735              		.loc 1 2051 24
 3736 00a4 7B68     		ldr	r3, [r7, #4]
 3737 00a6 DB6B     		ldr	r3, [r3, #60]
 3738 00a8 43F00202 		orr	r2, r3, #2
 3739 00ac 7B68     		ldr	r3, [r7, #4]
 3740 00ae DA63     		str	r2, [r3, #60]
 3741              	.L163:
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 102


2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3742              		.loc 1 2055 20
 3743 00b0 FB69     		ldr	r3, [r7, #28]
 3744 00b2 03F00203 		and	r3, r3, #2
 3745              		.loc 1 2055 8
 3746 00b6 002B     		cmp	r3, #0
 3747 00b8 0AD0     		beq	.L164
 3748              		.loc 1 2055 57 discriminator 1
 3749 00ba 7B69     		ldr	r3, [r7, #20]
 3750 00bc 03F00103 		and	r3, r3, #1
 3751              		.loc 1 2055 45 discriminator 1
 3752 00c0 002B     		cmp	r3, #0
 3753 00c2 05D0     		beq	.L164
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3754              		.loc 1 2057 24
 3755 00c4 7B68     		ldr	r3, [r7, #4]
 3756 00c6 DB6B     		ldr	r3, [r3, #60]
 3757 00c8 43F00402 		orr	r2, r3, #4
 3758 00cc 7B68     		ldr	r3, [r7, #4]
 3759 00ce DA63     		str	r2, [r3, #60]
 3760              	.L164:
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
 3761              		.loc 1 2061 20
 3762 00d0 FB69     		ldr	r3, [r7, #28]
 3763 00d2 03F00803 		and	r3, r3, #8
 3764              		.loc 1 2061 8
 3765 00d6 002B     		cmp	r3, #0
 3766 00d8 0FD0     		beq	.L165
 3767              		.loc 1 2061 59 discriminator 1
 3768 00da BB69     		ldr	r3, [r7, #24]
 3769 00dc 03F02003 		and	r3, r3, #32
 3770              		.loc 1 2061 46 discriminator 1
 3771 00e0 002B     		cmp	r3, #0
 3772 00e2 04D1     		bne	.L166
 3773              		.loc 1 2061 101 discriminator 2
 3774 00e4 7B69     		ldr	r3, [r7, #20]
 3775 00e6 03F00103 		and	r3, r3, #1
 3776              		.loc 1 2061 89 discriminator 2
 3777 00ea 002B     		cmp	r3, #0
 3778 00ec 05D0     		beq	.L165
 3779              	.L166:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3780              		.loc 1 2063 24
 3781 00ee 7B68     		ldr	r3, [r7, #4]
 3782 00f0 DB6B     		ldr	r3, [r3, #60]
 3783 00f2 43F00802 		orr	r2, r3, #8
 3784 00f6 7B68     		ldr	r3, [r7, #4]
 3785 00f8 DA63     		str	r2, [r3, #60]
 3786              	.L165:
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 103


2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3787              		.loc 1 2067 14
 3788 00fa 7B68     		ldr	r3, [r7, #4]
 3789 00fc DB6B     		ldr	r3, [r3, #60]
 3790              		.loc 1 2067 8
 3791 00fe 002B     		cmp	r3, #0
 3792 0100 77D0     		beq	.L175
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3793              		.loc 1 2070 22
 3794 0102 FB69     		ldr	r3, [r7, #28]
 3795 0104 03F02003 		and	r3, r3, #32
 3796              		.loc 1 2070 10
 3797 0108 002B     		cmp	r3, #0
 3798 010a 07D0     		beq	.L168
 3799              		.loc 1 2070 61 discriminator 1
 3800 010c BB69     		ldr	r3, [r7, #24]
 3801 010e 03F02003 		and	r3, r3, #32
 3802              		.loc 1 2070 49 discriminator 1
 3803 0112 002B     		cmp	r3, #0
 3804 0114 02D0     		beq	.L168
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 3805              		.loc 1 2072 9
 3806 0116 7868     		ldr	r0, [r7, #4]
 3807 0118 FFF7FEFF 		bl	UART_Receive_IT
 3808              	.L168:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3809              		.loc 1 2077 20
 3810 011c 7B68     		ldr	r3, [r7, #4]
 3811 011e 1B68     		ldr	r3, [r3]
 3812 0120 5B69     		ldr	r3, [r3, #20]
 3813 0122 03F04003 		and	r3, r3, #64
 3814 0126 402B     		cmp	r3, #64
 3815 0128 0CBF     		ite	eq
 3816 012a 0123     		moveq	r3, #1
 3817 012c 0023     		movne	r3, #0
 3818 012e DBB2     		uxtb	r3, r3
 3819              		.loc 1 2077 18
 3820 0130 FB60     		str	r3, [r7, #12]
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3821              		.loc 1 2078 18
 3822 0132 7B68     		ldr	r3, [r7, #4]
 3823 0134 DB6B     		ldr	r3, [r3, #60]
 3824              		.loc 1 2078 30
 3825 0136 03F00803 		and	r3, r3, #8
 3826              		.loc 1 2078 10
 3827 013a 002B     		cmp	r3, #0
 3828 013c 02D1     		bne	.L169
 3829              		.loc 1 2078 62 discriminator 1
 3830 013e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvnu0oO.s 			page 104


 3831 0140 002B     		cmp	r3, #0
 3832 0142 31D0     		beq	.L170
 3833              	.L169:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3834              		.loc 1 2083 9
 3835 0144 7868     		ldr	r0, [r7, #4]
 3836 0146 FFF7FEFF 		bl	UART_EndRxTransfer
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3837              		.loc 1 2086 13
 3838 014a 7B68     		ldr	r3, [r7, #4]
 3839 014c 1B68     		ldr	r3, [r3]
 3840 014e 5B69     		ldr	r3, [r3, #20]
 3841 0150 03F04003 		and	r3, r3, #64
 3842              		.loc 1 2086 12
 3843 0154 402B     		cmp	r3, #64
 3844 0156 23D1     		bne	.L171
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3845              		.loc 1 2088 11
 3846 0158 7B68     		ldr	r3, [r7, #4]
 3847 015a 1B68     		ldr	r3, [r3]
 3848 015c 5A69     		ldr	r2, [r3, #20]
 3849 015e 7B68     		ldr	r3, [r7, #4]
 3850 0160 1B68     		ldr	r3, [r3]
 3851 0162 22F04002 		bic	r2, r2, #64
 3852 0166 5A61     		str	r2, [r3, #20]
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3853              		.loc 1 2091 20
 3854 0168 7B68     		ldr	r3, [r7, #4]
 3855 016a 5B6B     		ldr	r3, [r3, #52]
 3856              		.loc 1 2091 14
 3857 016c 002B     		cmp	r3, #0
 3858 016e 13D0     		beq	.L172
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3859              		.loc 1 2095 18
 3860 0170 7B68     		ldr	r3, [r7, #4]
 3861 0172 5B6B     		ldr	r3, [r3, #52]
 3862              		.loc 1 2095 46
 3863 0174 214A     		ldr	r2, .L177
 3864 0176 1A65     		str	r2, [r3, #80]
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3865              		.loc 1 2096 17
 3866 0178 7B68     		ldr	r3, [r7, #4]
 3867 017a 5B6B     		ldr	r3, [r3, #52]
 3868 017c 1846     		mov	r0, r3
 3869 017e FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccvnu0oO.s 			page 105


 3870 0182 0346     		mov	r3, r0
 3871              		.loc 1 2096 16
 3872 0184 002B     		cmp	r3, #0
 3873 0186 16D0     		beq	.L176
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3874              		.loc 1 2099 20
 3875 0188 7B68     		ldr	r3, [r7, #4]
 3876 018a 5B6B     		ldr	r3, [r3, #52]
 3877              		.loc 1 2099 28
 3878 018c 1B6D     		ldr	r3, [r3, #80]
 3879              		.loc 1 2099 53
 3880 018e 7A68     		ldr	r2, [r7, #4]
 3881 0190 526B     		ldr	r2, [r2, #52]
 3882              		.loc 1 2099 15
 3883 0192 1046     		mov	r0, r2
 3884 0194 9847     		blx	r3
 3885              	.LVL2:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3886              		.loc 1 2086 12
 3887 0196 0EE0     		b	.L176
 3888              	.L172:
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3889              		.loc 1 2110 13
 3890 0198 7868     		ldr	r0, [r7, #4]
 3891 019a FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3892              		.loc 1 2086 12
 3893 019e 0AE0     		b	.L176
 3894              	.L171:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3895              		.loc 1 2122 11
 3896 01a0 7868     		ldr	r0, [r7, #4]
 3897 01a2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  /tmp/ccvnu0oO.s 			page 106


 3898              		.loc 1 2086 12
 3899 01a6 06E0     		b	.L176
 3900              	.L170:
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3901              		.loc 1 2135 9
 3902 01a8 7868     		ldr	r0, [r7, #4]
 3903 01aa FFF7FEFF 		bl	HAL_UART_ErrorCallback
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3904              		.loc 1 2138 26
 3905 01ae 7B68     		ldr	r3, [r7, #4]
 3906 01b0 0022     		movs	r2, #0
 3907 01b2 DA63     		str	r2, [r3, #60]
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3908              		.loc 1 2141 5
 3909 01b4 1DE0     		b	.L175
 3910              	.L176:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3911              		.loc 1 2086 12
 3912 01b6 00BF     		nop
 3913              		.loc 1 2141 5
 3914 01b8 1BE0     		b	.L175
 3915              	.L160:
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3916              		.loc 1 2145 18
 3917 01ba FB69     		ldr	r3, [r7, #28]
 3918 01bc 03F08003 		and	r3, r3, #128
 3919              		.loc 1 2145 6
 3920 01c0 002B     		cmp	r3, #0
 3921 01c2 08D0     		beq	.L174
 3922              		.loc 1 2145 56 discriminator 1
 3923 01c4 BB69     		ldr	r3, [r7, #24]
 3924 01c6 03F08003 		and	r3, r3, #128
 3925              		.loc 1 2145 44 discriminator 1
 3926 01ca 002B     		cmp	r3, #0
 3927 01cc 03D0     		beq	.L174
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3928              		.loc 1 2147 5
ARM GAS  /tmp/ccvnu0oO.s 			page 107


 3929 01ce 7868     		ldr	r0, [r7, #4]
 3930 01d0 FFF7FEFF 		bl	UART_Transmit_IT
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3931              		.loc 1 2148 5
 3932 01d4 0EE0     		b	.L157
 3933              	.L174:
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3934              		.loc 1 2152 18
 3935 01d6 FB69     		ldr	r3, [r7, #28]
 3936 01d8 03F04003 		and	r3, r3, #64
 3937              		.loc 1 2152 6
 3938 01dc 002B     		cmp	r3, #0
 3939 01de 09D0     		beq	.L157
 3940              		.loc 1 2152 55 discriminator 1
 3941 01e0 BB69     		ldr	r3, [r7, #24]
 3942 01e2 03F04003 		and	r3, r3, #64
 3943              		.loc 1 2152 43 discriminator 1
 3944 01e6 002B     		cmp	r3, #0
 3945 01e8 04D0     		beq	.L157
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3946              		.loc 1 2154 5
 3947 01ea 7868     		ldr	r0, [r7, #4]
 3948 01ec FFF7FEFF 		bl	UART_EndTransmit_IT
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3949              		.loc 1 2155 5
 3950 01f0 00E0     		b	.L157
 3951              	.L175:
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 3952              		.loc 1 2141 5
 3953 01f2 00BF     		nop
 3954              	.L157:
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3955              		.loc 1 2157 1
 3956 01f4 2037     		adds	r7, r7, #32
 3957              	.LCFI119:
 3958              		.cfi_def_cfa_offset 8
 3959 01f6 BD46     		mov	sp, r7
 3960              	.LCFI120:
 3961              		.cfi_def_cfa_register 13
 3962              		@ sp needed
 3963 01f8 80BD     		pop	{r7, pc}
 3964              	.L178:
 3965 01fa 00BF     		.align	2
 3966              	.L177:
 3967 01fc 00000000 		.word	UART_DMAAbortOnError
 3968              		.cfi_endproc
 3969              	.LFE152:
 3971              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3972              		.align	1
 3973              		.weak	HAL_UART_TxCpltCallback
 3974              		.syntax unified
 3975              		.thumb
ARM GAS  /tmp/ccvnu0oO.s 			page 108


 3976              		.thumb_func
 3977              		.fpu fpv4-sp-d16
 3979              	HAL_UART_TxCpltCallback:
 3980              	.LFB153:
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3981              		.loc 1 2166 1
 3982              		.cfi_startproc
 3983              		@ args = 0, pretend = 0, frame = 8
 3984              		@ frame_needed = 1, uses_anonymous_args = 0
 3985              		@ link register save eliminated.
 3986 0000 80B4     		push	{r7}
 3987              	.LCFI121:
 3988              		.cfi_def_cfa_offset 4
 3989              		.cfi_offset 7, -4
 3990 0002 83B0     		sub	sp, sp, #12
 3991              	.LCFI122:
 3992              		.cfi_def_cfa_offset 16
 3993 0004 00AF     		add	r7, sp, #0
 3994              	.LCFI123:
 3995              		.cfi_def_cfa_register 7
 3996 0006 7860     		str	r0, [r7, #4]
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3997              		.loc 1 2172 1
 3998 0008 00BF     		nop
 3999 000a 0C37     		adds	r7, r7, #12
 4000              	.LCFI124:
 4001              		.cfi_def_cfa_offset 4
 4002 000c BD46     		mov	sp, r7
 4003              	.LCFI125:
 4004              		.cfi_def_cfa_register 13
 4005              		@ sp needed
 4006 000e 5DF8047B 		ldr	r7, [sp], #4
 4007              	.LCFI126:
 4008              		.cfi_restore 7
 4009              		.cfi_def_cfa_offset 0
 4010 0012 7047     		bx	lr
 4011              		.cfi_endproc
 4012              	.LFE153:
 4014              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 4015              		.align	1
 4016              		.weak	HAL_UART_TxHalfCpltCallback
 4017              		.syntax unified
 4018              		.thumb
 4019              		.thumb_func
ARM GAS  /tmp/ccvnu0oO.s 			page 109


 4020              		.fpu fpv4-sp-d16
 4022              	HAL_UART_TxHalfCpltCallback:
 4023              	.LFB154:
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4024              		.loc 1 2181 1
 4025              		.cfi_startproc
 4026              		@ args = 0, pretend = 0, frame = 8
 4027              		@ frame_needed = 1, uses_anonymous_args = 0
 4028              		@ link register save eliminated.
 4029 0000 80B4     		push	{r7}
 4030              	.LCFI127:
 4031              		.cfi_def_cfa_offset 4
 4032              		.cfi_offset 7, -4
 4033 0002 83B0     		sub	sp, sp, #12
 4034              	.LCFI128:
 4035              		.cfi_def_cfa_offset 16
 4036 0004 00AF     		add	r7, sp, #0
 4037              	.LCFI129:
 4038              		.cfi_def_cfa_register 7
 4039 0006 7860     		str	r0, [r7, #4]
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4040              		.loc 1 2187 1
 4041 0008 00BF     		nop
 4042 000a 0C37     		adds	r7, r7, #12
 4043              	.LCFI130:
 4044              		.cfi_def_cfa_offset 4
 4045 000c BD46     		mov	sp, r7
 4046              	.LCFI131:
 4047              		.cfi_def_cfa_register 13
 4048              		@ sp needed
 4049 000e 5DF8047B 		ldr	r7, [sp], #4
 4050              	.LCFI132:
 4051              		.cfi_restore 7
 4052              		.cfi_def_cfa_offset 0
 4053 0012 7047     		bx	lr
 4054              		.cfi_endproc
 4055              	.LFE154:
 4057              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 4058              		.align	1
 4059              		.weak	HAL_UART_RxCpltCallback
 4060              		.syntax unified
 4061              		.thumb
 4062              		.thumb_func
 4063              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvnu0oO.s 			page 110


 4065              	HAL_UART_RxCpltCallback:
 4066              	.LFB155:
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4067              		.loc 1 2196 1
 4068              		.cfi_startproc
 4069              		@ args = 0, pretend = 0, frame = 8
 4070              		@ frame_needed = 1, uses_anonymous_args = 0
 4071              		@ link register save eliminated.
 4072 0000 80B4     		push	{r7}
 4073              	.LCFI133:
 4074              		.cfi_def_cfa_offset 4
 4075              		.cfi_offset 7, -4
 4076 0002 83B0     		sub	sp, sp, #12
 4077              	.LCFI134:
 4078              		.cfi_def_cfa_offset 16
 4079 0004 00AF     		add	r7, sp, #0
 4080              	.LCFI135:
 4081              		.cfi_def_cfa_register 7
 4082 0006 7860     		str	r0, [r7, #4]
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4083              		.loc 1 2202 1
 4084 0008 00BF     		nop
 4085 000a 0C37     		adds	r7, r7, #12
 4086              	.LCFI136:
 4087              		.cfi_def_cfa_offset 4
 4088 000c BD46     		mov	sp, r7
 4089              	.LCFI137:
 4090              		.cfi_def_cfa_register 13
 4091              		@ sp needed
 4092 000e 5DF8047B 		ldr	r7, [sp], #4
 4093              	.LCFI138:
 4094              		.cfi_restore 7
 4095              		.cfi_def_cfa_offset 0
 4096 0012 7047     		bx	lr
 4097              		.cfi_endproc
 4098              	.LFE155:
 4100              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4101              		.align	1
 4102              		.weak	HAL_UART_RxHalfCpltCallback
 4103              		.syntax unified
 4104              		.thumb
 4105              		.thumb_func
 4106              		.fpu fpv4-sp-d16
 4108              	HAL_UART_RxHalfCpltCallback:
ARM GAS  /tmp/ccvnu0oO.s 			page 111


 4109              	.LFB156:
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4110              		.loc 1 2211 1
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 8
 4113              		@ frame_needed = 1, uses_anonymous_args = 0
 4114              		@ link register save eliminated.
 4115 0000 80B4     		push	{r7}
 4116              	.LCFI139:
 4117              		.cfi_def_cfa_offset 4
 4118              		.cfi_offset 7, -4
 4119 0002 83B0     		sub	sp, sp, #12
 4120              	.LCFI140:
 4121              		.cfi_def_cfa_offset 16
 4122 0004 00AF     		add	r7, sp, #0
 4123              	.LCFI141:
 4124              		.cfi_def_cfa_register 7
 4125 0006 7860     		str	r0, [r7, #4]
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4126              		.loc 1 2217 1
 4127 0008 00BF     		nop
 4128 000a 0C37     		adds	r7, r7, #12
 4129              	.LCFI142:
 4130              		.cfi_def_cfa_offset 4
 4131 000c BD46     		mov	sp, r7
 4132              	.LCFI143:
 4133              		.cfi_def_cfa_register 13
 4134              		@ sp needed
 4135 000e 5DF8047B 		ldr	r7, [sp], #4
 4136              	.LCFI144:
 4137              		.cfi_restore 7
 4138              		.cfi_def_cfa_offset 0
 4139 0012 7047     		bx	lr
 4140              		.cfi_endproc
 4141              	.LFE156:
 4143              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4144              		.align	1
 4145              		.weak	HAL_UART_ErrorCallback
 4146              		.syntax unified
 4147              		.thumb
 4148              		.thumb_func
 4149              		.fpu fpv4-sp-d16
 4151              	HAL_UART_ErrorCallback:
 4152              	.LFB157:
ARM GAS  /tmp/ccvnu0oO.s 			page 112


2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4153              		.loc 1 2226 1
 4154              		.cfi_startproc
 4155              		@ args = 0, pretend = 0, frame = 8
 4156              		@ frame_needed = 1, uses_anonymous_args = 0
 4157              		@ link register save eliminated.
 4158 0000 80B4     		push	{r7}
 4159              	.LCFI145:
 4160              		.cfi_def_cfa_offset 4
 4161              		.cfi_offset 7, -4
 4162 0002 83B0     		sub	sp, sp, #12
 4163              	.LCFI146:
 4164              		.cfi_def_cfa_offset 16
 4165 0004 00AF     		add	r7, sp, #0
 4166              	.LCFI147:
 4167              		.cfi_def_cfa_register 7
 4168 0006 7860     		str	r0, [r7, #4]
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4169              		.loc 1 2232 1
 4170 0008 00BF     		nop
 4171 000a 0C37     		adds	r7, r7, #12
 4172              	.LCFI148:
 4173              		.cfi_def_cfa_offset 4
 4174 000c BD46     		mov	sp, r7
 4175              	.LCFI149:
 4176              		.cfi_def_cfa_register 13
 4177              		@ sp needed
 4178 000e 5DF8047B 		ldr	r7, [sp], #4
 4179              	.LCFI150:
 4180              		.cfi_restore 7
 4181              		.cfi_def_cfa_offset 0
 4182 0012 7047     		bx	lr
 4183              		.cfi_endproc
 4184              	.LFE157:
 4186              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4187              		.align	1
 4188              		.weak	HAL_UART_AbortCpltCallback
 4189              		.syntax unified
 4190              		.thumb
 4191              		.thumb_func
 4192              		.fpu fpv4-sp-d16
 4194              	HAL_UART_AbortCpltCallback:
 4195              	.LFB158:
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 113


2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4196              		.loc 1 2240 1
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 8
 4199              		@ frame_needed = 1, uses_anonymous_args = 0
 4200              		@ link register save eliminated.
 4201 0000 80B4     		push	{r7}
 4202              	.LCFI151:
 4203              		.cfi_def_cfa_offset 4
 4204              		.cfi_offset 7, -4
 4205 0002 83B0     		sub	sp, sp, #12
 4206              	.LCFI152:
 4207              		.cfi_def_cfa_offset 16
 4208 0004 00AF     		add	r7, sp, #0
 4209              	.LCFI153:
 4210              		.cfi_def_cfa_register 7
 4211 0006 7860     		str	r0, [r7, #4]
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4212              		.loc 1 2247 1
 4213 0008 00BF     		nop
 4214 000a 0C37     		adds	r7, r7, #12
 4215              	.LCFI154:
 4216              		.cfi_def_cfa_offset 4
 4217 000c BD46     		mov	sp, r7
 4218              	.LCFI155:
 4219              		.cfi_def_cfa_register 13
 4220              		@ sp needed
 4221 000e 5DF8047B 		ldr	r7, [sp], #4
 4222              	.LCFI156:
 4223              		.cfi_restore 7
 4224              		.cfi_def_cfa_offset 0
 4225 0012 7047     		bx	lr
 4226              		.cfi_endproc
 4227              	.LFE158:
 4229              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4230              		.align	1
 4231              		.weak	HAL_UART_AbortTransmitCpltCallback
 4232              		.syntax unified
 4233              		.thumb
 4234              		.thumb_func
 4235              		.fpu fpv4-sp-d16
 4237              	HAL_UART_AbortTransmitCpltCallback:
 4238              	.LFB159:
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccvnu0oO.s 			page 114


2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4239              		.loc 1 2255 1
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 8
 4242              		@ frame_needed = 1, uses_anonymous_args = 0
 4243              		@ link register save eliminated.
 4244 0000 80B4     		push	{r7}
 4245              	.LCFI157:
 4246              		.cfi_def_cfa_offset 4
 4247              		.cfi_offset 7, -4
 4248 0002 83B0     		sub	sp, sp, #12
 4249              	.LCFI158:
 4250              		.cfi_def_cfa_offset 16
 4251 0004 00AF     		add	r7, sp, #0
 4252              	.LCFI159:
 4253              		.cfi_def_cfa_register 7
 4254 0006 7860     		str	r0, [r7, #4]
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4255              		.loc 1 2262 1
 4256 0008 00BF     		nop
 4257 000a 0C37     		adds	r7, r7, #12
 4258              	.LCFI160:
 4259              		.cfi_def_cfa_offset 4
 4260 000c BD46     		mov	sp, r7
 4261              	.LCFI161:
 4262              		.cfi_def_cfa_register 13
 4263              		@ sp needed
 4264 000e 5DF8047B 		ldr	r7, [sp], #4
 4265              	.LCFI162:
 4266              		.cfi_restore 7
 4267              		.cfi_def_cfa_offset 0
 4268 0012 7047     		bx	lr
 4269              		.cfi_endproc
 4270              	.LFE159:
 4272              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4273              		.align	1
 4274              		.weak	HAL_UART_AbortReceiveCpltCallback
 4275              		.syntax unified
 4276              		.thumb
 4277              		.thumb_func
 4278              		.fpu fpv4-sp-d16
 4280              	HAL_UART_AbortReceiveCpltCallback:
 4281              	.LFB160:
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
ARM GAS  /tmp/ccvnu0oO.s 			page 115


2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4282              		.loc 1 2270 1
 4283              		.cfi_startproc
 4284              		@ args = 0, pretend = 0, frame = 8
 4285              		@ frame_needed = 1, uses_anonymous_args = 0
 4286              		@ link register save eliminated.
 4287 0000 80B4     		push	{r7}
 4288              	.LCFI163:
 4289              		.cfi_def_cfa_offset 4
 4290              		.cfi_offset 7, -4
 4291 0002 83B0     		sub	sp, sp, #12
 4292              	.LCFI164:
 4293              		.cfi_def_cfa_offset 16
 4294 0004 00AF     		add	r7, sp, #0
 4295              	.LCFI165:
 4296              		.cfi_def_cfa_register 7
 4297 0006 7860     		str	r0, [r7, #4]
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4298              		.loc 1 2277 1
 4299 0008 00BF     		nop
 4300 000a 0C37     		adds	r7, r7, #12
 4301              	.LCFI166:
 4302              		.cfi_def_cfa_offset 4
 4303 000c BD46     		mov	sp, r7
 4304              	.LCFI167:
 4305              		.cfi_def_cfa_register 13
 4306              		@ sp needed
 4307 000e 5DF8047B 		ldr	r7, [sp], #4
 4308              	.LCFI168:
 4309              		.cfi_restore 7
 4310              		.cfi_def_cfa_offset 0
 4311 0012 7047     		bx	lr
 4312              		.cfi_endproc
 4313              	.LFE160:
 4315              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4316              		.align	1
 4317              		.global	HAL_LIN_SendBreak
 4318              		.syntax unified
 4319              		.thumb
 4320              		.thumb_func
 4321              		.fpu fpv4-sp-d16
 4323              	HAL_LIN_SendBreak:
 4324              	.LFB161:
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccvnu0oO.s 			page 116


2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4325              		.loc 1 2309 1
 4326              		.cfi_startproc
 4327              		@ args = 0, pretend = 0, frame = 8
 4328              		@ frame_needed = 1, uses_anonymous_args = 0
 4329 0000 80B5     		push	{r7, lr}
 4330              	.LCFI169:
 4331              		.cfi_def_cfa_offset 8
 4332              		.cfi_offset 7, -8
 4333              		.cfi_offset 14, -4
 4334 0002 82B0     		sub	sp, sp, #8
 4335              	.LCFI170:
 4336              		.cfi_def_cfa_offset 16
 4337 0004 00AF     		add	r7, sp, #0
 4338              	.LCFI171:
 4339              		.cfi_def_cfa_register 7
 4340 0006 7860     		str	r0, [r7, #4]
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 4341              		.loc 1 2311 3
 4342 0008 7B68     		ldr	r3, [r7, #4]
 4343 000a 1B68     		ldr	r3, [r3]
 4344 000c 224A     		ldr	r2, .L191
 4345 000e 9342     		cmp	r3, r2
 4346 0010 1DD0     		beq	.L188
 4347              		.loc 1 2311 3 is_stmt 0 discriminator 1
 4348 0012 7B68     		ldr	r3, [r7, #4]
 4349 0014 1B68     		ldr	r3, [r3]
 4350 0016 214A     		ldr	r2, .L191+4
 4351 0018 9342     		cmp	r3, r2
ARM GAS  /tmp/ccvnu0oO.s 			page 117


 4352 001a 18D0     		beq	.L188
 4353              		.loc 1 2311 3 discriminator 2
 4354 001c 7B68     		ldr	r3, [r7, #4]
 4355 001e 1B68     		ldr	r3, [r3]
 4356 0020 1F4A     		ldr	r2, .L191+8
 4357 0022 9342     		cmp	r3, r2
 4358 0024 13D0     		beq	.L188
 4359              		.loc 1 2311 3 discriminator 3
 4360 0026 7B68     		ldr	r3, [r7, #4]
 4361 0028 1B68     		ldr	r3, [r3]
 4362 002a 1E4A     		ldr	r2, .L191+12
 4363 002c 9342     		cmp	r3, r2
 4364 002e 0ED0     		beq	.L188
 4365              		.loc 1 2311 3 discriminator 4
 4366 0030 7B68     		ldr	r3, [r7, #4]
 4367 0032 1B68     		ldr	r3, [r3]
 4368 0034 1C4A     		ldr	r2, .L191+16
 4369 0036 9342     		cmp	r3, r2
 4370 0038 09D0     		beq	.L188
 4371              		.loc 1 2311 3 discriminator 5
 4372 003a 7B68     		ldr	r3, [r7, #4]
 4373 003c 1B68     		ldr	r3, [r3]
 4374 003e 1B4A     		ldr	r2, .L191+20
 4375 0040 9342     		cmp	r3, r2
 4376 0042 04D0     		beq	.L188
 4377              		.loc 1 2311 3 discriminator 6
 4378 0044 40F60711 		movw	r1, #2311
 4379 0048 1948     		ldr	r0, .L191+24
 4380 004a FFF7FEFF 		bl	assert_failed
 4381              	.L188:
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4382              		.loc 1 2314 3 is_stmt 1
 4383 004e 7B68     		ldr	r3, [r7, #4]
 4384 0050 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4385 0054 012B     		cmp	r3, #1
 4386 0056 01D1     		bne	.L189
 4387              		.loc 1 2314 3 is_stmt 0 discriminator 1
 4388 0058 0223     		movs	r3, #2
 4389 005a 18E0     		b	.L190
 4390              	.L189:
 4391              		.loc 1 2314 3 discriminator 2
 4392 005c 7B68     		ldr	r3, [r7, #4]
 4393 005e 0122     		movs	r2, #1
 4394 0060 83F83820 		strb	r2, [r3, #56]
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4395              		.loc 1 2316 17 is_stmt 1 discriminator 2
 4396 0064 7B68     		ldr	r3, [r7, #4]
 4397 0066 2422     		movs	r2, #36
 4398 0068 83F83920 		strb	r2, [r3, #57]
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 4399              		.loc 1 2319 3 discriminator 2
 4400 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 118


 4401 006e 1B68     		ldr	r3, [r3]
 4402 0070 DA68     		ldr	r2, [r3, #12]
 4403 0072 7B68     		ldr	r3, [r7, #4]
 4404 0074 1B68     		ldr	r3, [r3]
 4405 0076 42F00102 		orr	r2, r2, #1
 4406 007a DA60     		str	r2, [r3, #12]
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4407              		.loc 1 2321 17 discriminator 2
 4408 007c 7B68     		ldr	r3, [r7, #4]
 4409 007e 2022     		movs	r2, #32
 4410 0080 83F83920 		strb	r2, [r3, #57]
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4411              		.loc 1 2324 3 discriminator 2
 4412 0084 7B68     		ldr	r3, [r7, #4]
 4413 0086 0022     		movs	r2, #0
 4414 0088 83F83820 		strb	r2, [r3, #56]
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4415              		.loc 1 2326 10 discriminator 2
 4416 008c 0023     		movs	r3, #0
 4417              	.L190:
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4418              		.loc 1 2327 1
 4419 008e 1846     		mov	r0, r3
 4420 0090 0837     		adds	r7, r7, #8
 4421              	.LCFI172:
 4422              		.cfi_def_cfa_offset 8
 4423 0092 BD46     		mov	sp, r7
 4424              	.LCFI173:
 4425              		.cfi_def_cfa_register 13
 4426              		@ sp needed
 4427 0094 80BD     		pop	{r7, pc}
 4428              	.L192:
 4429 0096 00BF     		.align	2
 4430              	.L191:
 4431 0098 00100140 		.word	1073811456
 4432 009c 00440040 		.word	1073759232
 4433 00a0 00480040 		.word	1073760256
 4434 00a4 004C0040 		.word	1073761280
 4435 00a8 00500040 		.word	1073762304
 4436 00ac 00140140 		.word	1073812480
 4437 00b0 00000000 		.word	.LC0
 4438              		.cfi_endproc
 4439              	.LFE161:
 4441              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4442              		.align	1
 4443              		.global	HAL_MultiProcessor_EnterMuteMode
 4444              		.syntax unified
 4445              		.thumb
 4446              		.thumb_func
 4447              		.fpu fpv4-sp-d16
 4449              	HAL_MultiProcessor_EnterMuteMode:
 4450              	.LFB162:
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 119


2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4451              		.loc 1 2336 1
 4452              		.cfi_startproc
 4453              		@ args = 0, pretend = 0, frame = 8
 4454              		@ frame_needed = 1, uses_anonymous_args = 0
 4455 0000 80B5     		push	{r7, lr}
 4456              	.LCFI174:
 4457              		.cfi_def_cfa_offset 8
 4458              		.cfi_offset 7, -8
 4459              		.cfi_offset 14, -4
 4460 0002 82B0     		sub	sp, sp, #8
 4461              	.LCFI175:
 4462              		.cfi_def_cfa_offset 16
 4463 0004 00AF     		add	r7, sp, #0
 4464              	.LCFI176:
 4465              		.cfi_def_cfa_register 7
 4466 0006 7860     		str	r0, [r7, #4]
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 4467              		.loc 1 2338 3
 4468 0008 7B68     		ldr	r3, [r7, #4]
 4469 000a 1B68     		ldr	r3, [r3]
 4470 000c 224A     		ldr	r2, .L197
 4471 000e 9342     		cmp	r3, r2
 4472 0010 1DD0     		beq	.L194
 4473              		.loc 1 2338 3 is_stmt 0 discriminator 1
 4474 0012 7B68     		ldr	r3, [r7, #4]
 4475 0014 1B68     		ldr	r3, [r3]
 4476 0016 214A     		ldr	r2, .L197+4
 4477 0018 9342     		cmp	r3, r2
 4478 001a 18D0     		beq	.L194
 4479              		.loc 1 2338 3 discriminator 2
 4480 001c 7B68     		ldr	r3, [r7, #4]
 4481 001e 1B68     		ldr	r3, [r3]
 4482 0020 1F4A     		ldr	r2, .L197+8
 4483 0022 9342     		cmp	r3, r2
 4484 0024 13D0     		beq	.L194
 4485              		.loc 1 2338 3 discriminator 3
 4486 0026 7B68     		ldr	r3, [r7, #4]
 4487 0028 1B68     		ldr	r3, [r3]
 4488 002a 1E4A     		ldr	r2, .L197+12
 4489 002c 9342     		cmp	r3, r2
 4490 002e 0ED0     		beq	.L194
 4491              		.loc 1 2338 3 discriminator 4
 4492 0030 7B68     		ldr	r3, [r7, #4]
 4493 0032 1B68     		ldr	r3, [r3]
 4494 0034 1C4A     		ldr	r2, .L197+16
 4495 0036 9342     		cmp	r3, r2
 4496 0038 09D0     		beq	.L194
 4497              		.loc 1 2338 3 discriminator 5
ARM GAS  /tmp/ccvnu0oO.s 			page 120


 4498 003a 7B68     		ldr	r3, [r7, #4]
 4499 003c 1B68     		ldr	r3, [r3]
 4500 003e 1B4A     		ldr	r2, .L197+20
 4501 0040 9342     		cmp	r3, r2
 4502 0042 04D0     		beq	.L194
 4503              		.loc 1 2338 3 discriminator 6
 4504 0044 40F62211 		movw	r1, #2338
 4505 0048 1948     		ldr	r0, .L197+24
 4506 004a FFF7FEFF 		bl	assert_failed
 4507              	.L194:
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4508              		.loc 1 2341 3 is_stmt 1
 4509 004e 7B68     		ldr	r3, [r7, #4]
 4510 0050 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4511 0054 012B     		cmp	r3, #1
 4512 0056 01D1     		bne	.L195
 4513              		.loc 1 2341 3 is_stmt 0 discriminator 1
 4514 0058 0223     		movs	r3, #2
 4515 005a 18E0     		b	.L196
 4516              	.L195:
 4517              		.loc 1 2341 3 discriminator 2
 4518 005c 7B68     		ldr	r3, [r7, #4]
 4519 005e 0122     		movs	r2, #1
 4520 0060 83F83820 		strb	r2, [r3, #56]
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4521              		.loc 1 2343 17 is_stmt 1 discriminator 2
 4522 0064 7B68     		ldr	r3, [r7, #4]
 4523 0066 2422     		movs	r2, #36
 4524 0068 83F83920 		strb	r2, [r3, #57]
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 4525              		.loc 1 2346 3 discriminator 2
 4526 006c 7B68     		ldr	r3, [r7, #4]
 4527 006e 1B68     		ldr	r3, [r3]
 4528 0070 DA68     		ldr	r2, [r3, #12]
 4529 0072 7B68     		ldr	r3, [r7, #4]
 4530 0074 1B68     		ldr	r3, [r3]
 4531 0076 42F00202 		orr	r2, r2, #2
 4532 007a DA60     		str	r2, [r3, #12]
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4533              		.loc 1 2348 17 discriminator 2
 4534 007c 7B68     		ldr	r3, [r7, #4]
 4535 007e 2022     		movs	r2, #32
 4536 0080 83F83920 		strb	r2, [r3, #57]
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4537              		.loc 1 2351 3 discriminator 2
 4538 0084 7B68     		ldr	r3, [r7, #4]
 4539 0086 0022     		movs	r2, #0
 4540 0088 83F83820 		strb	r2, [r3, #56]
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 121


2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4541              		.loc 1 2353 10 discriminator 2
 4542 008c 0023     		movs	r3, #0
 4543              	.L196:
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4544              		.loc 1 2354 1
 4545 008e 1846     		mov	r0, r3
 4546 0090 0837     		adds	r7, r7, #8
 4547              	.LCFI177:
 4548              		.cfi_def_cfa_offset 8
 4549 0092 BD46     		mov	sp, r7
 4550              	.LCFI178:
 4551              		.cfi_def_cfa_register 13
 4552              		@ sp needed
 4553 0094 80BD     		pop	{r7, pc}
 4554              	.L198:
 4555 0096 00BF     		.align	2
 4556              	.L197:
 4557 0098 00100140 		.word	1073811456
 4558 009c 00440040 		.word	1073759232
 4559 00a0 00480040 		.word	1073760256
 4560 00a4 004C0040 		.word	1073761280
 4561 00a8 00500040 		.word	1073762304
 4562 00ac 00140140 		.word	1073812480
 4563 00b0 00000000 		.word	.LC0
 4564              		.cfi_endproc
 4565              	.LFE162:
 4567              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 4568              		.align	1
 4569              		.global	HAL_MultiProcessor_ExitMuteMode
 4570              		.syntax unified
 4571              		.thumb
 4572              		.thumb_func
 4573              		.fpu fpv4-sp-d16
 4575              	HAL_MultiProcessor_ExitMuteMode:
 4576              	.LFB163:
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4577              		.loc 1 2363 1
 4578              		.cfi_startproc
 4579              		@ args = 0, pretend = 0, frame = 8
 4580              		@ frame_needed = 1, uses_anonymous_args = 0
 4581 0000 80B5     		push	{r7, lr}
 4582              	.LCFI179:
 4583              		.cfi_def_cfa_offset 8
 4584              		.cfi_offset 7, -8
 4585              		.cfi_offset 14, -4
 4586 0002 82B0     		sub	sp, sp, #8
 4587              	.LCFI180:
 4588              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccvnu0oO.s 			page 122


 4589 0004 00AF     		add	r7, sp, #0
 4590              	.LCFI181:
 4591              		.cfi_def_cfa_register 7
 4592 0006 7860     		str	r0, [r7, #4]
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 4593              		.loc 1 2365 3
 4594 0008 7B68     		ldr	r3, [r7, #4]
 4595 000a 1B68     		ldr	r3, [r3]
 4596 000c 224A     		ldr	r2, .L203
 4597 000e 9342     		cmp	r3, r2
 4598 0010 1DD0     		beq	.L200
 4599              		.loc 1 2365 3 is_stmt 0 discriminator 1
 4600 0012 7B68     		ldr	r3, [r7, #4]
 4601 0014 1B68     		ldr	r3, [r3]
 4602 0016 214A     		ldr	r2, .L203+4
 4603 0018 9342     		cmp	r3, r2
 4604 001a 18D0     		beq	.L200
 4605              		.loc 1 2365 3 discriminator 2
 4606 001c 7B68     		ldr	r3, [r7, #4]
 4607 001e 1B68     		ldr	r3, [r3]
 4608 0020 1F4A     		ldr	r2, .L203+8
 4609 0022 9342     		cmp	r3, r2
 4610 0024 13D0     		beq	.L200
 4611              		.loc 1 2365 3 discriminator 3
 4612 0026 7B68     		ldr	r3, [r7, #4]
 4613 0028 1B68     		ldr	r3, [r3]
 4614 002a 1E4A     		ldr	r2, .L203+12
 4615 002c 9342     		cmp	r3, r2
 4616 002e 0ED0     		beq	.L200
 4617              		.loc 1 2365 3 discriminator 4
 4618 0030 7B68     		ldr	r3, [r7, #4]
 4619 0032 1B68     		ldr	r3, [r3]
 4620 0034 1C4A     		ldr	r2, .L203+16
 4621 0036 9342     		cmp	r3, r2
 4622 0038 09D0     		beq	.L200
 4623              		.loc 1 2365 3 discriminator 5
 4624 003a 7B68     		ldr	r3, [r7, #4]
 4625 003c 1B68     		ldr	r3, [r3]
 4626 003e 1B4A     		ldr	r2, .L203+20
 4627 0040 9342     		cmp	r3, r2
 4628 0042 04D0     		beq	.L200
 4629              		.loc 1 2365 3 discriminator 6
 4630 0044 40F63D11 		movw	r1, #2365
 4631 0048 1948     		ldr	r0, .L203+24
 4632 004a FFF7FEFF 		bl	assert_failed
 4633              	.L200:
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4634              		.loc 1 2368 3 is_stmt 1
 4635 004e 7B68     		ldr	r3, [r7, #4]
 4636 0050 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4637 0054 012B     		cmp	r3, #1
 4638 0056 01D1     		bne	.L201
 4639              		.loc 1 2368 3 is_stmt 0 discriminator 1
 4640 0058 0223     		movs	r3, #2
ARM GAS  /tmp/ccvnu0oO.s 			page 123


 4641 005a 18E0     		b	.L202
 4642              	.L201:
 4643              		.loc 1 2368 3 discriminator 2
 4644 005c 7B68     		ldr	r3, [r7, #4]
 4645 005e 0122     		movs	r2, #1
 4646 0060 83F83820 		strb	r2, [r3, #56]
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4647              		.loc 1 2370 17 is_stmt 1 discriminator 2
 4648 0064 7B68     		ldr	r3, [r7, #4]
 4649 0066 2422     		movs	r2, #36
 4650 0068 83F83920 		strb	r2, [r3, #57]
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 4651              		.loc 1 2373 3 discriminator 2
 4652 006c 7B68     		ldr	r3, [r7, #4]
 4653 006e 1B68     		ldr	r3, [r3]
 4654 0070 DA68     		ldr	r2, [r3, #12]
 4655 0072 7B68     		ldr	r3, [r7, #4]
 4656 0074 1B68     		ldr	r3, [r3]
 4657 0076 22F00202 		bic	r2, r2, #2
 4658 007a DA60     		str	r2, [r3, #12]
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4659              		.loc 1 2375 17 discriminator 2
 4660 007c 7B68     		ldr	r3, [r7, #4]
 4661 007e 2022     		movs	r2, #32
 4662 0080 83F83920 		strb	r2, [r3, #57]
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4663              		.loc 1 2378 3 discriminator 2
 4664 0084 7B68     		ldr	r3, [r7, #4]
 4665 0086 0022     		movs	r2, #0
 4666 0088 83F83820 		strb	r2, [r3, #56]
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4667              		.loc 1 2380 10 discriminator 2
 4668 008c 0023     		movs	r3, #0
 4669              	.L202:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4670              		.loc 1 2381 1
 4671 008e 1846     		mov	r0, r3
 4672 0090 0837     		adds	r7, r7, #8
 4673              	.LCFI182:
 4674              		.cfi_def_cfa_offset 8
 4675 0092 BD46     		mov	sp, r7
 4676              	.LCFI183:
 4677              		.cfi_def_cfa_register 13
 4678              		@ sp needed
 4679 0094 80BD     		pop	{r7, pc}
 4680              	.L204:
 4681 0096 00BF     		.align	2
 4682              	.L203:
 4683 0098 00100140 		.word	1073811456
 4684 009c 00440040 		.word	1073759232
ARM GAS  /tmp/ccvnu0oO.s 			page 124


 4685 00a0 00480040 		.word	1073760256
 4686 00a4 004C0040 		.word	1073761280
 4687 00a8 00500040 		.word	1073762304
 4688 00ac 00140140 		.word	1073812480
 4689 00b0 00000000 		.word	.LC0
 4690              		.cfi_endproc
 4691              	.LFE163:
 4693              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4694              		.align	1
 4695              		.global	HAL_HalfDuplex_EnableTransmitter
 4696              		.syntax unified
 4697              		.thumb
 4698              		.thumb_func
 4699              		.fpu fpv4-sp-d16
 4701              	HAL_HalfDuplex_EnableTransmitter:
 4702              	.LFB164:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4703              		.loc 1 2390 1
 4704              		.cfi_startproc
 4705              		@ args = 0, pretend = 0, frame = 16
 4706              		@ frame_needed = 1, uses_anonymous_args = 0
 4707              		@ link register save eliminated.
 4708 0000 80B4     		push	{r7}
 4709              	.LCFI184:
 4710              		.cfi_def_cfa_offset 4
 4711              		.cfi_offset 7, -4
 4712 0002 85B0     		sub	sp, sp, #20
 4713              	.LCFI185:
 4714              		.cfi_def_cfa_offset 24
 4715 0004 00AF     		add	r7, sp, #0
 4716              	.LCFI186:
 4717              		.cfi_def_cfa_register 7
 4718 0006 7860     		str	r0, [r7, #4]
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4719              		.loc 1 2391 12
 4720 0008 0023     		movs	r3, #0
 4721 000a FB60     		str	r3, [r7, #12]
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4722              		.loc 1 2394 3
 4723 000c 7B68     		ldr	r3, [r7, #4]
 4724 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4725 0012 012B     		cmp	r3, #1
 4726 0014 01D1     		bne	.L206
 4727              		.loc 1 2394 3 is_stmt 0 discriminator 1
 4728 0016 0223     		movs	r3, #2
 4729 0018 20E0     		b	.L207
 4730              	.L206:
ARM GAS  /tmp/ccvnu0oO.s 			page 125


 4731              		.loc 1 2394 3 discriminator 2
 4732 001a 7B68     		ldr	r3, [r7, #4]
 4733 001c 0122     		movs	r2, #1
 4734 001e 83F83820 		strb	r2, [r3, #56]
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4735              		.loc 1 2396 17 is_stmt 1 discriminator 2
 4736 0022 7B68     		ldr	r3, [r7, #4]
 4737 0024 2422     		movs	r2, #36
 4738 0026 83F83920 		strb	r2, [r3, #57]
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4739              		.loc 1 2399 17 discriminator 2
 4740 002a 7B68     		ldr	r3, [r7, #4]
 4741 002c 1B68     		ldr	r3, [r3]
 4742              		.loc 1 2399 10 discriminator 2
 4743 002e DB68     		ldr	r3, [r3, #12]
 4744 0030 FB60     		str	r3, [r7, #12]
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4745              		.loc 1 2402 10 discriminator 2
 4746 0032 FB68     		ldr	r3, [r7, #12]
 4747 0034 23F00C03 		bic	r3, r3, #12
 4748 0038 FB60     		str	r3, [r7, #12]
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 4749              		.loc 1 2405 10 discriminator 2
 4750 003a FB68     		ldr	r3, [r7, #12]
 4751 003c 43F00803 		orr	r3, r3, #8
 4752 0040 FB60     		str	r3, [r7, #12]
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4753              		.loc 1 2408 3 discriminator 2
 4754 0042 7B68     		ldr	r3, [r7, #4]
 4755 0044 1B68     		ldr	r3, [r3]
 4756 0046 FA68     		ldr	r2, [r7, #12]
 4757 0048 DA60     		str	r2, [r3, #12]
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4758              		.loc 1 2410 17 discriminator 2
 4759 004a 7B68     		ldr	r3, [r7, #4]
 4760 004c 2022     		movs	r2, #32
 4761 004e 83F83920 		strb	r2, [r3, #57]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4762              		.loc 1 2413 3 discriminator 2
 4763 0052 7B68     		ldr	r3, [r7, #4]
 4764 0054 0022     		movs	r2, #0
 4765 0056 83F83820 		strb	r2, [r3, #56]
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4766              		.loc 1 2415 10 discriminator 2
ARM GAS  /tmp/ccvnu0oO.s 			page 126


 4767 005a 0023     		movs	r3, #0
 4768              	.L207:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4769              		.loc 1 2416 1
 4770 005c 1846     		mov	r0, r3
 4771 005e 1437     		adds	r7, r7, #20
 4772              	.LCFI187:
 4773              		.cfi_def_cfa_offset 4
 4774 0060 BD46     		mov	sp, r7
 4775              	.LCFI188:
 4776              		.cfi_def_cfa_register 13
 4777              		@ sp needed
 4778 0062 5DF8047B 		ldr	r7, [sp], #4
 4779              	.LCFI189:
 4780              		.cfi_restore 7
 4781              		.cfi_def_cfa_offset 0
 4782 0066 7047     		bx	lr
 4783              		.cfi_endproc
 4784              	.LFE164:
 4786              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4787              		.align	1
 4788              		.global	HAL_HalfDuplex_EnableReceiver
 4789              		.syntax unified
 4790              		.thumb
 4791              		.thumb_func
 4792              		.fpu fpv4-sp-d16
 4794              	HAL_HalfDuplex_EnableReceiver:
 4795              	.LFB165:
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4796              		.loc 1 2425 1
 4797              		.cfi_startproc
 4798              		@ args = 0, pretend = 0, frame = 16
 4799              		@ frame_needed = 1, uses_anonymous_args = 0
 4800              		@ link register save eliminated.
 4801 0000 80B4     		push	{r7}
 4802              	.LCFI190:
 4803              		.cfi_def_cfa_offset 4
 4804              		.cfi_offset 7, -4
 4805 0002 85B0     		sub	sp, sp, #20
 4806              	.LCFI191:
 4807              		.cfi_def_cfa_offset 24
 4808 0004 00AF     		add	r7, sp, #0
 4809              	.LCFI192:
 4810              		.cfi_def_cfa_register 7
 4811 0006 7860     		str	r0, [r7, #4]
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4812              		.loc 1 2426 12
 4813 0008 0023     		movs	r3, #0
 4814 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccvnu0oO.s 			page 127


2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4815              		.loc 1 2429 3
 4816 000c 7B68     		ldr	r3, [r7, #4]
 4817 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4818 0012 012B     		cmp	r3, #1
 4819 0014 01D1     		bne	.L209
 4820              		.loc 1 2429 3 is_stmt 0 discriminator 1
 4821 0016 0223     		movs	r3, #2
 4822 0018 20E0     		b	.L210
 4823              	.L209:
 4824              		.loc 1 2429 3 discriminator 2
 4825 001a 7B68     		ldr	r3, [r7, #4]
 4826 001c 0122     		movs	r2, #1
 4827 001e 83F83820 		strb	r2, [r3, #56]
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4828              		.loc 1 2431 17 is_stmt 1 discriminator 2
 4829 0022 7B68     		ldr	r3, [r7, #4]
 4830 0024 2422     		movs	r2, #36
 4831 0026 83F83920 		strb	r2, [r3, #57]
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4832              		.loc 1 2434 17 discriminator 2
 4833 002a 7B68     		ldr	r3, [r7, #4]
 4834 002c 1B68     		ldr	r3, [r3]
 4835              		.loc 1 2434 10 discriminator 2
 4836 002e DB68     		ldr	r3, [r3, #12]
 4837 0030 FB60     		str	r3, [r7, #12]
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4838              		.loc 1 2437 10 discriminator 2
 4839 0032 FB68     		ldr	r3, [r7, #12]
 4840 0034 23F00C03 		bic	r3, r3, #12
 4841 0038 FB60     		str	r3, [r7, #12]
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 4842              		.loc 1 2440 10 discriminator 2
 4843 003a FB68     		ldr	r3, [r7, #12]
 4844 003c 43F00403 		orr	r3, r3, #4
 4845 0040 FB60     		str	r3, [r7, #12]
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4846              		.loc 1 2443 3 discriminator 2
 4847 0042 7B68     		ldr	r3, [r7, #4]
 4848 0044 1B68     		ldr	r3, [r3]
 4849 0046 FA68     		ldr	r2, [r7, #12]
 4850 0048 DA60     		str	r2, [r3, #12]
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4851              		.loc 1 2445 17 discriminator 2
 4852 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 128


 4853 004c 2022     		movs	r2, #32
 4854 004e 83F83920 		strb	r2, [r3, #57]
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4855              		.loc 1 2448 3 discriminator 2
 4856 0052 7B68     		ldr	r3, [r7, #4]
 4857 0054 0022     		movs	r2, #0
 4858 0056 83F83820 		strb	r2, [r3, #56]
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4859              		.loc 1 2450 10 discriminator 2
 4860 005a 0023     		movs	r3, #0
 4861              	.L210:
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4862              		.loc 1 2451 1
 4863 005c 1846     		mov	r0, r3
 4864 005e 1437     		adds	r7, r7, #20
 4865              	.LCFI193:
 4866              		.cfi_def_cfa_offset 4
 4867 0060 BD46     		mov	sp, r7
 4868              	.LCFI194:
 4869              		.cfi_def_cfa_register 13
 4870              		@ sp needed
 4871 0062 5DF8047B 		ldr	r7, [sp], #4
 4872              	.LCFI195:
 4873              		.cfi_restore 7
 4874              		.cfi_def_cfa_offset 0
 4875 0066 7047     		bx	lr
 4876              		.cfi_endproc
 4877              	.LFE165:
 4879              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4880              		.align	1
 4881              		.global	HAL_UART_GetState
 4882              		.syntax unified
 4883              		.thumb
 4884              		.thumb_func
 4885              		.fpu fpv4-sp-d16
 4887              	HAL_UART_GetState:
 4888              	.LFB166:
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
ARM GAS  /tmp/ccvnu0oO.s 			page 129


2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4889              		.loc 1 2482 1
 4890              		.cfi_startproc
 4891              		@ args = 0, pretend = 0, frame = 16
 4892              		@ frame_needed = 1, uses_anonymous_args = 0
 4893              		@ link register save eliminated.
 4894 0000 80B4     		push	{r7}
 4895              	.LCFI196:
 4896              		.cfi_def_cfa_offset 4
 4897              		.cfi_offset 7, -4
 4898 0002 85B0     		sub	sp, sp, #20
 4899              	.LCFI197:
 4900              		.cfi_def_cfa_offset 24
 4901 0004 00AF     		add	r7, sp, #0
 4902              	.LCFI198:
 4903              		.cfi_def_cfa_register 7
 4904 0006 7860     		str	r0, [r7, #4]
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 4905              		.loc 1 2483 12
 4906 0008 0023     		movs	r3, #0
 4907 000a FB60     		str	r3, [r7, #12]
 4908              		.loc 1 2483 27
 4909 000c 0023     		movs	r3, #0
 4910 000e BB60     		str	r3, [r7, #8]
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 4911              		.loc 1 2484 16
 4912 0010 7B68     		ldr	r3, [r7, #4]
 4913 0012 93F83930 		ldrb	r3, [r3, #57]
 4914 0016 DBB2     		uxtb	r3, r3
 4915              		.loc 1 2484 9
 4916 0018 FB60     		str	r3, [r7, #12]
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4917              		.loc 1 2485 16
 4918 001a 7B68     		ldr	r3, [r7, #4]
 4919 001c 93F83A30 		ldrb	r3, [r3, #58]
 4920 0020 DBB2     		uxtb	r3, r3
 4921              		.loc 1 2485 9
 4922 0022 BB60     		str	r3, [r7, #8]
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4923              		.loc 1 2487 10
 4924 0024 FB68     		ldr	r3, [r7, #12]
 4925 0026 DAB2     		uxtb	r2, r3
 4926 0028 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvnu0oO.s 			page 130


 4927 002a DBB2     		uxtb	r3, r3
 4928 002c 1343     		orrs	r3, r3, r2
 4929 002e DBB2     		uxtb	r3, r3
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4930              		.loc 1 2488 1
 4931 0030 1846     		mov	r0, r3
 4932 0032 1437     		adds	r7, r7, #20
 4933              	.LCFI199:
 4934              		.cfi_def_cfa_offset 4
 4935 0034 BD46     		mov	sp, r7
 4936              	.LCFI200:
 4937              		.cfi_def_cfa_register 13
 4938              		@ sp needed
 4939 0036 5DF8047B 		ldr	r7, [sp], #4
 4940              	.LCFI201:
 4941              		.cfi_restore 7
 4942              		.cfi_def_cfa_offset 0
 4943 003a 7047     		bx	lr
 4944              		.cfi_endproc
 4945              	.LFE166:
 4947              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4948              		.align	1
 4949              		.global	HAL_UART_GetError
 4950              		.syntax unified
 4951              		.thumb
 4952              		.thumb_func
 4953              		.fpu fpv4-sp-d16
 4955              	HAL_UART_GetError:
 4956              	.LFB167:
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4957              		.loc 1 2497 1
 4958              		.cfi_startproc
 4959              		@ args = 0, pretend = 0, frame = 8
 4960              		@ frame_needed = 1, uses_anonymous_args = 0
 4961              		@ link register save eliminated.
 4962 0000 80B4     		push	{r7}
 4963              	.LCFI202:
 4964              		.cfi_def_cfa_offset 4
 4965              		.cfi_offset 7, -4
 4966 0002 83B0     		sub	sp, sp, #12
 4967              	.LCFI203:
 4968              		.cfi_def_cfa_offset 16
 4969 0004 00AF     		add	r7, sp, #0
 4970              	.LCFI204:
 4971              		.cfi_def_cfa_register 7
 4972 0006 7860     		str	r0, [r7, #4]
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4973              		.loc 1 2498 15
 4974 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 131


 4975 000a DB6B     		ldr	r3, [r3, #60]
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4976              		.loc 1 2499 1
 4977 000c 1846     		mov	r0, r3
 4978 000e 0C37     		adds	r7, r7, #12
 4979              	.LCFI205:
 4980              		.cfi_def_cfa_offset 4
 4981 0010 BD46     		mov	sp, r7
 4982              	.LCFI206:
 4983              		.cfi_def_cfa_register 13
 4984              		@ sp needed
 4985 0012 5DF8047B 		ldr	r7, [sp], #4
 4986              	.LCFI207:
 4987              		.cfi_restore 7
 4988              		.cfi_def_cfa_offset 0
 4989 0016 7047     		bx	lr
 4990              		.cfi_endproc
 4991              	.LFE167:
 4993              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4994              		.align	1
 4995              		.syntax unified
 4996              		.thumb
 4997              		.thumb_func
 4998              		.fpu fpv4-sp-d16
 5000              	UART_DMATransmitCplt:
 5001              	.LFB168:
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccvnu0oO.s 			page 132


2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5002              		.loc 1 2541 1
 5003              		.cfi_startproc
 5004              		@ args = 0, pretend = 0, frame = 16
 5005              		@ frame_needed = 1, uses_anonymous_args = 0
 5006 0000 80B5     		push	{r7, lr}
 5007              	.LCFI208:
 5008              		.cfi_def_cfa_offset 8
 5009              		.cfi_offset 7, -8
 5010              		.cfi_offset 14, -4
 5011 0002 84B0     		sub	sp, sp, #16
 5012              	.LCFI209:
 5013              		.cfi_def_cfa_offset 24
 5014 0004 00AF     		add	r7, sp, #0
 5015              	.LCFI210:
 5016              		.cfi_def_cfa_register 7
 5017 0006 7860     		str	r0, [r7, #4]
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5018              		.loc 1 2542 23
 5019 0008 7B68     		ldr	r3, [r7, #4]
 5020 000a 9B6B     		ldr	r3, [r3, #56]
 5021 000c FB60     		str	r3, [r7, #12]
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 5022              		.loc 1 2544 12
 5023 000e 7B68     		ldr	r3, [r7, #4]
 5024 0010 1B68     		ldr	r3, [r3]
 5025              		.loc 1 2544 22
 5026 0012 1B68     		ldr	r3, [r3]
 5027              		.loc 1 2544 27
 5028 0014 03F48073 		and	r3, r3, #256
 5029              		.loc 1 2544 6
 5030 0018 002B     		cmp	r3, #0
 5031 001a 13D1     		bne	.L216
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 5032              		.loc 1 2546 24
 5033 001c FB68     		ldr	r3, [r7, #12]
 5034 001e 0022     		movs	r2, #0
 5035 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 5036              		.loc 1 2550 5
 5037 0022 FB68     		ldr	r3, [r7, #12]
 5038 0024 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvnu0oO.s 			page 133


 5039 0026 5A69     		ldr	r2, [r3, #20]
 5040 0028 FB68     		ldr	r3, [r7, #12]
 5041 002a 1B68     		ldr	r3, [r3]
 5042 002c 22F08002 		bic	r2, r2, #128
 5043 0030 5A61     		str	r2, [r3, #20]
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5044              		.loc 1 2553 5
 5045 0032 FB68     		ldr	r3, [r7, #12]
 5046 0034 1B68     		ldr	r3, [r3]
 5047 0036 DA68     		ldr	r2, [r3, #12]
 5048 0038 FB68     		ldr	r3, [r7, #12]
 5049 003a 1B68     		ldr	r3, [r3]
 5050 003c 42F04002 		orr	r2, r2, #64
 5051 0040 DA60     		str	r2, [r3, #12]
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5052              		.loc 1 2567 1
 5053 0042 02E0     		b	.L218
 5054              	.L216:
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5055              		.loc 1 2564 5
 5056 0044 F868     		ldr	r0, [r7, #12]
 5057 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 5058              	.L218:
 5059              		.loc 1 2567 1
 5060 004a 00BF     		nop
 5061 004c 1037     		adds	r7, r7, #16
 5062              	.LCFI211:
 5063              		.cfi_def_cfa_offset 8
 5064 004e BD46     		mov	sp, r7
 5065              	.LCFI212:
 5066              		.cfi_def_cfa_register 13
 5067              		@ sp needed
 5068 0050 80BD     		pop	{r7, pc}
 5069              		.cfi_endproc
 5070              	.LFE168:
 5072              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 5073              		.align	1
 5074              		.syntax unified
 5075              		.thumb
 5076              		.thumb_func
 5077              		.fpu fpv4-sp-d16
 5079              	UART_DMATxHalfCplt:
ARM GAS  /tmp/ccvnu0oO.s 			page 134


 5080              	.LFB169:
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5081              		.loc 1 2576 1
 5082              		.cfi_startproc
 5083              		@ args = 0, pretend = 0, frame = 16
 5084              		@ frame_needed = 1, uses_anonymous_args = 0
 5085 0000 80B5     		push	{r7, lr}
 5086              	.LCFI213:
 5087              		.cfi_def_cfa_offset 8
 5088              		.cfi_offset 7, -8
 5089              		.cfi_offset 14, -4
 5090 0002 84B0     		sub	sp, sp, #16
 5091              	.LCFI214:
 5092              		.cfi_def_cfa_offset 24
 5093 0004 00AF     		add	r7, sp, #0
 5094              	.LCFI215:
 5095              		.cfi_def_cfa_register 7
 5096 0006 7860     		str	r0, [r7, #4]
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5097              		.loc 1 2577 23
 5098 0008 7B68     		ldr	r3, [r7, #4]
 5099 000a 9B6B     		ldr	r3, [r3, #56]
 5100 000c FB60     		str	r3, [r7, #12]
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 5101              		.loc 1 2584 3
 5102 000e F868     		ldr	r0, [r7, #12]
 5103 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5104              		.loc 1 2586 1
 5105 0014 00BF     		nop
 5106 0016 1037     		adds	r7, r7, #16
 5107              	.LCFI216:
 5108              		.cfi_def_cfa_offset 8
 5109 0018 BD46     		mov	sp, r7
 5110              	.LCFI217:
 5111              		.cfi_def_cfa_register 13
 5112              		@ sp needed
 5113 001a 80BD     		pop	{r7, pc}
 5114              		.cfi_endproc
 5115              	.LFE169:
 5117              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5118              		.align	1
ARM GAS  /tmp/ccvnu0oO.s 			page 135


 5119              		.syntax unified
 5120              		.thumb
 5121              		.thumb_func
 5122              		.fpu fpv4-sp-d16
 5124              	UART_DMAReceiveCplt:
 5125              	.LFB170:
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5126              		.loc 1 2595 1
 5127              		.cfi_startproc
 5128              		@ args = 0, pretend = 0, frame = 16
 5129              		@ frame_needed = 1, uses_anonymous_args = 0
 5130 0000 80B5     		push	{r7, lr}
 5131              	.LCFI218:
 5132              		.cfi_def_cfa_offset 8
 5133              		.cfi_offset 7, -8
 5134              		.cfi_offset 14, -4
 5135 0002 84B0     		sub	sp, sp, #16
 5136              	.LCFI219:
 5137              		.cfi_def_cfa_offset 24
 5138 0004 00AF     		add	r7, sp, #0
 5139              	.LCFI220:
 5140              		.cfi_def_cfa_register 7
 5141 0006 7860     		str	r0, [r7, #4]
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5142              		.loc 1 2596 23
 5143 0008 7B68     		ldr	r3, [r7, #4]
 5144 000a 9B6B     		ldr	r3, [r3, #56]
 5145 000c FB60     		str	r3, [r7, #12]
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 5146              		.loc 1 2598 12
 5147 000e 7B68     		ldr	r3, [r7, #4]
 5148 0010 1B68     		ldr	r3, [r3]
 5149              		.loc 1 2598 22
 5150 0012 1B68     		ldr	r3, [r3]
 5151              		.loc 1 2598 27
 5152 0014 03F48073 		and	r3, r3, #256
 5153              		.loc 1 2598 6
 5154 0018 002B     		cmp	r3, #0
 5155 001a 1ED1     		bne	.L221
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5156              		.loc 1 2600 24
 5157 001c FB68     		ldr	r3, [r7, #12]
 5158 001e 0022     		movs	r2, #0
 5159 0020 DA85     		strh	r2, [r3, #46]	@ movhi
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccvnu0oO.s 			page 136


 5160              		.loc 1 2603 5
 5161 0022 FB68     		ldr	r3, [r7, #12]
 5162 0024 1B68     		ldr	r3, [r3]
 5163 0026 DA68     		ldr	r2, [r3, #12]
 5164 0028 FB68     		ldr	r3, [r7, #12]
 5165 002a 1B68     		ldr	r3, [r3]
 5166 002c 22F48072 		bic	r2, r2, #256
 5167 0030 DA60     		str	r2, [r3, #12]
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5168              		.loc 1 2604 5
 5169 0032 FB68     		ldr	r3, [r7, #12]
 5170 0034 1B68     		ldr	r3, [r3]
 5171 0036 5A69     		ldr	r2, [r3, #20]
 5172 0038 FB68     		ldr	r3, [r7, #12]
 5173 003a 1B68     		ldr	r3, [r3]
 5174 003c 22F00102 		bic	r2, r2, #1
 5175 0040 5A61     		str	r2, [r3, #20]
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5176              		.loc 1 2608 5
 5177 0042 FB68     		ldr	r3, [r7, #12]
 5178 0044 1B68     		ldr	r3, [r3]
 5179 0046 5A69     		ldr	r2, [r3, #20]
 5180 0048 FB68     		ldr	r3, [r7, #12]
 5181 004a 1B68     		ldr	r3, [r3]
 5182 004c 22F04002 		bic	r2, r2, #64
 5183 0050 5A61     		str	r2, [r3, #20]
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5184              		.loc 1 2611 20
 5185 0052 FB68     		ldr	r3, [r7, #12]
 5186 0054 2022     		movs	r2, #32
 5187 0056 83F83A20 		strb	r2, [r3, #58]
 5188              	.L221:
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 5189              		.loc 1 2618 3
 5190 005a F868     		ldr	r0, [r7, #12]
 5191 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5192              		.loc 1 2620 1
 5193 0060 00BF     		nop
 5194 0062 1037     		adds	r7, r7, #16
 5195              	.LCFI221:
 5196              		.cfi_def_cfa_offset 8
 5197 0064 BD46     		mov	sp, r7
 5198              	.LCFI222:
 5199              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccvnu0oO.s 			page 137


 5200              		@ sp needed
 5201 0066 80BD     		pop	{r7, pc}
 5202              		.cfi_endproc
 5203              	.LFE170:
 5205              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5206              		.align	1
 5207              		.syntax unified
 5208              		.thumb
 5209              		.thumb_func
 5210              		.fpu fpv4-sp-d16
 5212              	UART_DMARxHalfCplt:
 5213              	.LFB171:
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5214              		.loc 1 2629 1
 5215              		.cfi_startproc
 5216              		@ args = 0, pretend = 0, frame = 16
 5217              		@ frame_needed = 1, uses_anonymous_args = 0
 5218 0000 80B5     		push	{r7, lr}
 5219              	.LCFI223:
 5220              		.cfi_def_cfa_offset 8
 5221              		.cfi_offset 7, -8
 5222              		.cfi_offset 14, -4
 5223 0002 84B0     		sub	sp, sp, #16
 5224              	.LCFI224:
 5225              		.cfi_def_cfa_offset 24
 5226 0004 00AF     		add	r7, sp, #0
 5227              	.LCFI225:
 5228              		.cfi_def_cfa_register 7
 5229 0006 7860     		str	r0, [r7, #4]
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5230              		.loc 1 2630 23
 5231 0008 7B68     		ldr	r3, [r7, #4]
 5232 000a 9B6B     		ldr	r3, [r3, #56]
 5233 000c FB60     		str	r3, [r7, #12]
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 5234              		.loc 1 2637 3
 5235 000e F868     		ldr	r0, [r7, #12]
 5236 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5237              		.loc 1 2639 1
 5238 0014 00BF     		nop
 5239 0016 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccvnu0oO.s 			page 138


 5240              	.LCFI226:
 5241              		.cfi_def_cfa_offset 8
 5242 0018 BD46     		mov	sp, r7
 5243              	.LCFI227:
 5244              		.cfi_def_cfa_register 13
 5245              		@ sp needed
 5246 001a 80BD     		pop	{r7, pc}
 5247              		.cfi_endproc
 5248              	.LFE171:
 5250              		.section	.text.UART_DMAError,"ax",%progbits
 5251              		.align	1
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5255              		.fpu fpv4-sp-d16
 5257              	UART_DMAError:
 5258              	.LFB172:
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5259              		.loc 1 2648 1
 5260              		.cfi_startproc
 5261              		@ args = 0, pretend = 0, frame = 16
 5262              		@ frame_needed = 1, uses_anonymous_args = 0
 5263 0000 80B5     		push	{r7, lr}
 5264              	.LCFI228:
 5265              		.cfi_def_cfa_offset 8
 5266              		.cfi_offset 7, -8
 5267              		.cfi_offset 14, -4
 5268 0002 84B0     		sub	sp, sp, #16
 5269              	.LCFI229:
 5270              		.cfi_def_cfa_offset 24
 5271 0004 00AF     		add	r7, sp, #0
 5272              	.LCFI230:
 5273              		.cfi_def_cfa_register 7
 5274 0006 7860     		str	r0, [r7, #4]
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5275              		.loc 1 2649 12
 5276 0008 0023     		movs	r3, #0
 5277 000a FB60     		str	r3, [r7, #12]
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5278              		.loc 1 2650 23
 5279 000c 7B68     		ldr	r3, [r7, #4]
 5280 000e 9B6B     		ldr	r3, [r3, #56]
 5281 0010 BB60     		str	r3, [r7, #8]
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 5282              		.loc 1 2653 16
 5283 0012 BB68     		ldr	r3, [r7, #8]
 5284 0014 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvnu0oO.s 			page 139


 5285 0016 5B69     		ldr	r3, [r3, #20]
 5286 0018 03F08003 		and	r3, r3, #128
 5287 001c 802B     		cmp	r3, #128
 5288 001e 0CBF     		ite	eq
 5289 0020 0123     		moveq	r3, #1
 5290 0022 0023     		movne	r3, #0
 5291 0024 DBB2     		uxtb	r3, r3
 5292              		.loc 1 2653 14
 5293 0026 FB60     		str	r3, [r7, #12]
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 5294              		.loc 1 2654 13
 5295 0028 BB68     		ldr	r3, [r7, #8]
 5296 002a 93F83930 		ldrb	r3, [r3, #57]
 5297 002e DBB2     		uxtb	r3, r3
 5298              		.loc 1 2654 6
 5299 0030 212B     		cmp	r3, #33
 5300 0032 08D1     		bne	.L224
 5301              		.loc 1 2654 49 discriminator 1
 5302 0034 FB68     		ldr	r3, [r7, #12]
 5303 0036 002B     		cmp	r3, #0
 5304 0038 05D0     		beq	.L224
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 5305              		.loc 1 2656 24
 5306 003a BB68     		ldr	r3, [r7, #8]
 5307 003c 0022     		movs	r2, #0
 5308 003e DA84     		strh	r2, [r3, #38]	@ movhi
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 5309              		.loc 1 2657 5
 5310 0040 B868     		ldr	r0, [r7, #8]
 5311 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 5312              	.L224:
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5313              		.loc 1 2661 16
 5314 0046 BB68     		ldr	r3, [r7, #8]
 5315 0048 1B68     		ldr	r3, [r3]
 5316 004a 5B69     		ldr	r3, [r3, #20]
 5317 004c 03F04003 		and	r3, r3, #64
 5318 0050 402B     		cmp	r3, #64
 5319 0052 0CBF     		ite	eq
 5320 0054 0123     		moveq	r3, #1
 5321 0056 0023     		movne	r3, #0
 5322 0058 DBB2     		uxtb	r3, r3
 5323              		.loc 1 2661 14
 5324 005a FB60     		str	r3, [r7, #12]
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 5325              		.loc 1 2662 13
 5326 005c BB68     		ldr	r3, [r7, #8]
 5327 005e 93F83A30 		ldrb	r3, [r3, #58]
 5328 0062 DBB2     		uxtb	r3, r3
 5329              		.loc 1 2662 6
 5330 0064 222B     		cmp	r3, #34
 5331 0066 08D1     		bne	.L225
 5332              		.loc 1 2662 50 discriminator 1
ARM GAS  /tmp/ccvnu0oO.s 			page 140


 5333 0068 FB68     		ldr	r3, [r7, #12]
 5334 006a 002B     		cmp	r3, #0
 5335 006c 05D0     		beq	.L225
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 5336              		.loc 1 2664 24
 5337 006e BB68     		ldr	r3, [r7, #8]
 5338 0070 0022     		movs	r2, #0
 5339 0072 DA85     		strh	r2, [r3, #46]	@ movhi
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 5340              		.loc 1 2665 5
 5341 0074 B868     		ldr	r0, [r7, #8]
 5342 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 5343              	.L225:
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 5344              		.loc 1 2668 20
 5345 007a BB68     		ldr	r3, [r7, #8]
 5346 007c DB6B     		ldr	r3, [r3, #60]
 5347 007e 43F01002 		orr	r2, r3, #16
 5348 0082 BB68     		ldr	r3, [r7, #8]
 5349 0084 DA63     		str	r2, [r3, #60]
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5350              		.loc 1 2674 3
 5351 0086 B868     		ldr	r0, [r7, #8]
 5352 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5353              		.loc 1 2676 1
 5354 008c 00BF     		nop
 5355 008e 1037     		adds	r7, r7, #16
 5356              	.LCFI231:
 5357              		.cfi_def_cfa_offset 8
 5358 0090 BD46     		mov	sp, r7
 5359              	.LCFI232:
 5360              		.cfi_def_cfa_register 13
 5361              		@ sp needed
 5362 0092 80BD     		pop	{r7, pc}
 5363              		.cfi_endproc
 5364              	.LFE172:
 5366              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5367              		.align	1
 5368              		.syntax unified
 5369              		.thumb
 5370              		.thumb_func
 5371              		.fpu fpv4-sp-d16
 5373              	UART_WaitOnFlagUntilTimeout:
 5374              	.LFB173:
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
ARM GAS  /tmp/ccvnu0oO.s 			page 141


2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5375              		.loc 1 2689 1
 5376              		.cfi_startproc
 5377              		@ args = 4, pretend = 0, frame = 16
 5378              		@ frame_needed = 1, uses_anonymous_args = 0
 5379 0000 80B5     		push	{r7, lr}
 5380              	.LCFI233:
 5381              		.cfi_def_cfa_offset 8
 5382              		.cfi_offset 7, -8
 5383              		.cfi_offset 14, -4
 5384 0002 84B0     		sub	sp, sp, #16
 5385              	.LCFI234:
 5386              		.cfi_def_cfa_offset 24
 5387 0004 00AF     		add	r7, sp, #0
 5388              	.LCFI235:
 5389              		.cfi_def_cfa_register 7
 5390 0006 F860     		str	r0, [r7, #12]
 5391 0008 B960     		str	r1, [r7, #8]
 5392 000a 3B60     		str	r3, [r7]
 5393 000c 1346     		mov	r3, r2
 5394 000e FB71     		strb	r3, [r7, #7]
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 5395              		.loc 1 2691 9
 5396 0010 2CE0     		b	.L227
 5397              	.L230:
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 5398              		.loc 1 2694 8
 5399 0012 BB69     		ldr	r3, [r7, #24]
 5400 0014 B3F1FF3F 		cmp	r3, #-1
 5401 0018 28D0     		beq	.L227
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 5402              		.loc 1 2696 10
 5403 001a BB69     		ldr	r3, [r7, #24]
 5404 001c 002B     		cmp	r3, #0
 5405 001e 07D0     		beq	.L228
 5406              		.loc 1 2696 32 discriminator 1
 5407 0020 FFF7FEFF 		bl	HAL_GetTick
 5408 0024 0246     		mov	r2, r0
 5409              		.loc 1 2696 46 discriminator 1
 5410 0026 3B68     		ldr	r3, [r7]
 5411 0028 D31A     		subs	r3, r2, r3
 5412              		.loc 1 2696 27 discriminator 1
 5413 002a BA69     		ldr	r2, [r7, #24]
 5414 002c 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 142


 5415 002e 1DD2     		bcs	.L227
 5416              	.L228:
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5417              		.loc 1 2699 9
 5418 0030 FB68     		ldr	r3, [r7, #12]
 5419 0032 1B68     		ldr	r3, [r3]
 5420 0034 DA68     		ldr	r2, [r3, #12]
 5421 0036 FB68     		ldr	r3, [r7, #12]
 5422 0038 1B68     		ldr	r3, [r3]
 5423 003a 22F4D072 		bic	r2, r2, #416
 5424 003e DA60     		str	r2, [r3, #12]
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5425              		.loc 1 2700 9
 5426 0040 FB68     		ldr	r3, [r7, #12]
 5427 0042 1B68     		ldr	r3, [r3]
 5428 0044 5A69     		ldr	r2, [r3, #20]
 5429 0046 FB68     		ldr	r3, [r7, #12]
 5430 0048 1B68     		ldr	r3, [r3]
 5431 004a 22F00102 		bic	r2, r2, #1
 5432 004e 5A61     		str	r2, [r3, #20]
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 5433              		.loc 1 2702 24
 5434 0050 FB68     		ldr	r3, [r7, #12]
 5435 0052 2022     		movs	r2, #32
 5436 0054 83F83920 		strb	r2, [r3, #57]
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5437              		.loc 1 2703 24
 5438 0058 FB68     		ldr	r3, [r7, #12]
 5439 005a 2022     		movs	r2, #32
 5440 005c 83F83A20 		strb	r2, [r3, #58]
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 5441              		.loc 1 2706 9
 5442 0060 FB68     		ldr	r3, [r7, #12]
 5443 0062 0022     		movs	r2, #0
 5444 0064 83F83820 		strb	r2, [r3, #56]
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 5445              		.loc 1 2708 16
 5446 0068 0323     		movs	r3, #3
 5447 006a 0FE0     		b	.L229
 5448              	.L227:
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5449              		.loc 1 2691 11
 5450 006c FB68     		ldr	r3, [r7, #12]
 5451 006e 1B68     		ldr	r3, [r3]
 5452 0070 1A68     		ldr	r2, [r3]
 5453 0072 BB68     		ldr	r3, [r7, #8]
 5454 0074 1340     		ands	r3, r3, r2
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5455              		.loc 1 2691 50
 5456 0076 BA68     		ldr	r2, [r7, #8]
 5457 0078 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 143


 5458 007a 0CBF     		ite	eq
 5459 007c 0123     		moveq	r3, #1
 5460 007e 0023     		movne	r3, #0
 5461 0080 DBB2     		uxtb	r3, r3
 5462 0082 1A46     		mov	r2, r3
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5463              		.loc 1 2691 59
 5464 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5465              		.loc 1 2691 9
 5466 0086 9A42     		cmp	r2, r3
 5467 0088 C3D0     		beq	.L230
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5468              		.loc 1 2712 10
 5469 008a 0023     		movs	r3, #0
 5470              	.L229:
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5471              		.loc 1 2713 1
 5472 008c 1846     		mov	r0, r3
 5473 008e 1037     		adds	r7, r7, #16
 5474              	.LCFI236:
 5475              		.cfi_def_cfa_offset 8
 5476 0090 BD46     		mov	sp, r7
 5477              	.LCFI237:
 5478              		.cfi_def_cfa_register 13
 5479              		@ sp needed
 5480 0092 80BD     		pop	{r7, pc}
 5481              		.cfi_endproc
 5482              	.LFE173:
 5484              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 5485              		.align	1
 5486              		.syntax unified
 5487              		.thumb
 5488              		.thumb_func
 5489              		.fpu fpv4-sp-d16
 5491              	UART_EndTxTransfer:
 5492              	.LFB174:
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5493              		.loc 1 2721 1
 5494              		.cfi_startproc
 5495              		@ args = 0, pretend = 0, frame = 8
 5496              		@ frame_needed = 1, uses_anonymous_args = 0
 5497              		@ link register save eliminated.
 5498 0000 80B4     		push	{r7}
 5499              	.LCFI238:
 5500              		.cfi_def_cfa_offset 4
 5501              		.cfi_offset 7, -4
ARM GAS  /tmp/ccvnu0oO.s 			page 144


 5502 0002 83B0     		sub	sp, sp, #12
 5503              	.LCFI239:
 5504              		.cfi_def_cfa_offset 16
 5505 0004 00AF     		add	r7, sp, #0
 5506              	.LCFI240:
 5507              		.cfi_def_cfa_register 7
 5508 0006 7860     		str	r0, [r7, #4]
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 5509              		.loc 1 2723 3
 5510 0008 7B68     		ldr	r3, [r7, #4]
 5511 000a 1B68     		ldr	r3, [r3]
 5512 000c DA68     		ldr	r2, [r3, #12]
 5513 000e 7B68     		ldr	r3, [r7, #4]
 5514 0010 1B68     		ldr	r3, [r3]
 5515 0012 22F0C002 		bic	r2, r2, #192
 5516 0016 DA60     		str	r2, [r3, #12]
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5517              		.loc 1 2726 17
 5518 0018 7B68     		ldr	r3, [r7, #4]
 5519 001a 2022     		movs	r2, #32
 5520 001c 83F83920 		strb	r2, [r3, #57]
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5521              		.loc 1 2727 1
 5522 0020 00BF     		nop
 5523 0022 0C37     		adds	r7, r7, #12
 5524              	.LCFI241:
 5525              		.cfi_def_cfa_offset 4
 5526 0024 BD46     		mov	sp, r7
 5527              	.LCFI242:
 5528              		.cfi_def_cfa_register 13
 5529              		@ sp needed
 5530 0026 5DF8047B 		ldr	r7, [sp], #4
 5531              	.LCFI243:
 5532              		.cfi_restore 7
 5533              		.cfi_def_cfa_offset 0
 5534 002a 7047     		bx	lr
 5535              		.cfi_endproc
 5536              	.LFE174:
 5538              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 5539              		.align	1
 5540              		.syntax unified
 5541              		.thumb
 5542              		.thumb_func
 5543              		.fpu fpv4-sp-d16
 5545              	UART_EndRxTransfer:
 5546              	.LFB175:
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccvnu0oO.s 			page 145


 5547              		.loc 1 2735 1
 5548              		.cfi_startproc
 5549              		@ args = 0, pretend = 0, frame = 8
 5550              		@ frame_needed = 1, uses_anonymous_args = 0
 5551              		@ link register save eliminated.
 5552 0000 80B4     		push	{r7}
 5553              	.LCFI244:
 5554              		.cfi_def_cfa_offset 4
 5555              		.cfi_offset 7, -4
 5556 0002 83B0     		sub	sp, sp, #12
 5557              	.LCFI245:
 5558              		.cfi_def_cfa_offset 16
 5559 0004 00AF     		add	r7, sp, #0
 5560              	.LCFI246:
 5561              		.cfi_def_cfa_register 7
 5562 0006 7860     		str	r0, [r7, #4]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5563              		.loc 1 2737 3
 5564 0008 7B68     		ldr	r3, [r7, #4]
 5565 000a 1B68     		ldr	r3, [r3]
 5566 000c DA68     		ldr	r2, [r3, #12]
 5567 000e 7B68     		ldr	r3, [r7, #4]
 5568 0010 1B68     		ldr	r3, [r3]
 5569 0012 22F49072 		bic	r2, r2, #288
 5570 0016 DA60     		str	r2, [r3, #12]
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5571              		.loc 1 2738 3
 5572 0018 7B68     		ldr	r3, [r7, #4]
 5573 001a 1B68     		ldr	r3, [r3]
 5574 001c 5A69     		ldr	r2, [r3, #20]
 5575 001e 7B68     		ldr	r3, [r7, #4]
 5576 0020 1B68     		ldr	r3, [r3]
 5577 0022 22F00102 		bic	r2, r2, #1
 5578 0026 5A61     		str	r2, [r3, #20]
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5579              		.loc 1 2741 18
 5580 0028 7B68     		ldr	r3, [r7, #4]
 5581 002a 2022     		movs	r2, #32
 5582 002c 83F83A20 		strb	r2, [r3, #58]
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5583              		.loc 1 2742 1
 5584 0030 00BF     		nop
 5585 0032 0C37     		adds	r7, r7, #12
 5586              	.LCFI247:
 5587              		.cfi_def_cfa_offset 4
 5588 0034 BD46     		mov	sp, r7
 5589              	.LCFI248:
 5590              		.cfi_def_cfa_register 13
 5591              		@ sp needed
 5592 0036 5DF8047B 		ldr	r7, [sp], #4
 5593              	.LCFI249:
 5594              		.cfi_restore 7
 5595              		.cfi_def_cfa_offset 0
 5596 003a 7047     		bx	lr
ARM GAS  /tmp/ccvnu0oO.s 			page 146


 5597              		.cfi_endproc
 5598              	.LFE175:
 5600              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 5601              		.align	1
 5602              		.syntax unified
 5603              		.thumb
 5604              		.thumb_func
 5605              		.fpu fpv4-sp-d16
 5607              	UART_DMAAbortOnError:
 5608              	.LFB176:
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5609              		.loc 1 2752 1
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 16
 5612              		@ frame_needed = 1, uses_anonymous_args = 0
 5613 0000 80B5     		push	{r7, lr}
 5614              	.LCFI250:
 5615              		.cfi_def_cfa_offset 8
 5616              		.cfi_offset 7, -8
 5617              		.cfi_offset 14, -4
 5618 0002 84B0     		sub	sp, sp, #16
 5619              	.LCFI251:
 5620              		.cfi_def_cfa_offset 24
 5621 0004 00AF     		add	r7, sp, #0
 5622              	.LCFI252:
 5623              		.cfi_def_cfa_register 7
 5624 0006 7860     		str	r0, [r7, #4]
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5625              		.loc 1 2753 23
 5626 0008 7B68     		ldr	r3, [r7, #4]
 5627 000a 9B6B     		ldr	r3, [r3, #56]
 5628 000c FB60     		str	r3, [r7, #12]
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5629              		.loc 1 2754 22
 5630 000e FB68     		ldr	r3, [r7, #12]
 5631 0010 0022     		movs	r2, #0
 5632 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5633              		.loc 1 2755 22
 5634 0014 FB68     		ldr	r3, [r7, #12]
 5635 0016 0022     		movs	r2, #0
 5636 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
ARM GAS  /tmp/ccvnu0oO.s 			page 147


2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5637              		.loc 1 2762 3
 5638 001a F868     		ldr	r0, [r7, #12]
 5639 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5640              		.loc 1 2764 1
 5641 0020 00BF     		nop
 5642 0022 1037     		adds	r7, r7, #16
 5643              	.LCFI253:
 5644              		.cfi_def_cfa_offset 8
 5645 0024 BD46     		mov	sp, r7
 5646              	.LCFI254:
 5647              		.cfi_def_cfa_register 13
 5648              		@ sp needed
 5649 0026 80BD     		pop	{r7, pc}
 5650              		.cfi_endproc
 5651              	.LFE176:
 5653              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 5654              		.align	1
 5655              		.syntax unified
 5656              		.thumb
 5657              		.thumb_func
 5658              		.fpu fpv4-sp-d16
 5660              	UART_DMATxAbortCallback:
 5661              	.LFB177:
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5662              		.loc 1 2776 1
 5663              		.cfi_startproc
 5664              		@ args = 0, pretend = 0, frame = 16
 5665              		@ frame_needed = 1, uses_anonymous_args = 0
 5666 0000 80B5     		push	{r7, lr}
 5667              	.LCFI255:
 5668              		.cfi_def_cfa_offset 8
 5669              		.cfi_offset 7, -8
 5670              		.cfi_offset 14, -4
 5671 0002 84B0     		sub	sp, sp, #16
 5672              	.LCFI256:
 5673              		.cfi_def_cfa_offset 24
 5674 0004 00AF     		add	r7, sp, #0
 5675              	.LCFI257:
 5676              		.cfi_def_cfa_register 7
 5677 0006 7860     		str	r0, [r7, #4]
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5678              		.loc 1 2777 23
 5679 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvnu0oO.s 			page 148


 5680 000a 9B6B     		ldr	r3, [r3, #56]
 5681 000c FB60     		str	r3, [r7, #12]
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 5682              		.loc 1 2779 8
 5683 000e FB68     		ldr	r3, [r7, #12]
 5684 0010 1B6B     		ldr	r3, [r3, #48]
 5685              		.loc 1 2779 36
 5686 0012 0022     		movs	r2, #0
 5687 0014 1A65     		str	r2, [r3, #80]
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 5688              		.loc 1 2782 12
 5689 0016 FB68     		ldr	r3, [r7, #12]
 5690 0018 5B6B     		ldr	r3, [r3, #52]
 5691              		.loc 1 2782 6
 5692 001a 002B     		cmp	r3, #0
 5693 001c 04D0     		beq	.L235
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 5694              		.loc 1 2784 14
 5695 001e FB68     		ldr	r3, [r7, #12]
 5696 0020 5B6B     		ldr	r3, [r3, #52]
 5697              		.loc 1 2784 22
 5698 0022 1B6D     		ldr	r3, [r3, #80]
 5699              		.loc 1 2784 8
 5700 0024 002B     		cmp	r3, #0
 5701 0026 14D1     		bne	.L237
 5702              	.L235:
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5703              		.loc 1 2791 22
 5704 0028 FB68     		ldr	r3, [r7, #12]
 5705 002a 0022     		movs	r2, #0
 5706 002c DA84     		strh	r2, [r3, #38]	@ movhi
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5707              		.loc 1 2792 22
 5708 002e FB68     		ldr	r3, [r7, #12]
 5709 0030 0022     		movs	r2, #0
 5710 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5711              		.loc 1 2795 20
 5712 0034 FB68     		ldr	r3, [r7, #12]
 5713 0036 0022     		movs	r2, #0
 5714 0038 DA63     		str	r2, [r3, #60]
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5715              		.loc 1 2798 18
ARM GAS  /tmp/ccvnu0oO.s 			page 149


 5716 003a FB68     		ldr	r3, [r7, #12]
 5717 003c 2022     		movs	r2, #32
 5718 003e 83F83920 		strb	r2, [r3, #57]
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5719              		.loc 1 2799 18
 5720 0042 FB68     		ldr	r3, [r7, #12]
 5721 0044 2022     		movs	r2, #32
 5722 0046 83F83A20 		strb	r2, [r3, #58]
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5723              		.loc 1 2807 3
 5724 004a F868     		ldr	r0, [r7, #12]
 5725 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5726 0050 00E0     		b	.L234
 5727              	.L237:
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5728              		.loc 1 2786 7
 5729 0052 00BF     		nop
 5730              	.L234:
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5731              		.loc 1 2809 1
 5732 0054 1037     		adds	r7, r7, #16
 5733              	.LCFI258:
 5734              		.cfi_def_cfa_offset 8
 5735 0056 BD46     		mov	sp, r7
 5736              	.LCFI259:
 5737              		.cfi_def_cfa_register 13
 5738              		@ sp needed
 5739 0058 80BD     		pop	{r7, pc}
 5740              		.cfi_endproc
 5741              	.LFE177:
 5743              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 5744              		.align	1
 5745              		.syntax unified
 5746              		.thumb
 5747              		.thumb_func
 5748              		.fpu fpv4-sp-d16
 5750              	UART_DMARxAbortCallback:
 5751              	.LFB178:
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccvnu0oO.s 			page 150


2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5752              		.loc 1 2821 1
 5753              		.cfi_startproc
 5754              		@ args = 0, pretend = 0, frame = 16
 5755              		@ frame_needed = 1, uses_anonymous_args = 0
 5756 0000 80B5     		push	{r7, lr}
 5757              	.LCFI260:
 5758              		.cfi_def_cfa_offset 8
 5759              		.cfi_offset 7, -8
 5760              		.cfi_offset 14, -4
 5761 0002 84B0     		sub	sp, sp, #16
 5762              	.LCFI261:
 5763              		.cfi_def_cfa_offset 24
 5764 0004 00AF     		add	r7, sp, #0
 5765              	.LCFI262:
 5766              		.cfi_def_cfa_register 7
 5767 0006 7860     		str	r0, [r7, #4]
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5768              		.loc 1 2822 23
 5769 0008 7B68     		ldr	r3, [r7, #4]
 5770 000a 9B6B     		ldr	r3, [r3, #56]
 5771 000c FB60     		str	r3, [r7, #12]
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5772              		.loc 1 2824 8
 5773 000e FB68     		ldr	r3, [r7, #12]
 5774 0010 5B6B     		ldr	r3, [r3, #52]
 5775              		.loc 1 2824 36
 5776 0012 0022     		movs	r2, #0
 5777 0014 1A65     		str	r2, [r3, #80]
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 5778              		.loc 1 2827 12
 5779 0016 FB68     		ldr	r3, [r7, #12]
 5780 0018 1B6B     		ldr	r3, [r3, #48]
 5781              		.loc 1 2827 6
 5782 001a 002B     		cmp	r3, #0
 5783 001c 04D0     		beq	.L239
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 5784              		.loc 1 2829 14
 5785 001e FB68     		ldr	r3, [r7, #12]
 5786 0020 1B6B     		ldr	r3, [r3, #48]
 5787              		.loc 1 2829 22
 5788 0022 1B6D     		ldr	r3, [r3, #80]
 5789              		.loc 1 2829 8
 5790 0024 002B     		cmp	r3, #0
 5791 0026 14D1     		bne	.L241
 5792              	.L239:
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
ARM GAS  /tmp/ccvnu0oO.s 			page 151


 5793              		.loc 1 2836 22
 5794 0028 FB68     		ldr	r3, [r7, #12]
 5795 002a 0022     		movs	r2, #0
 5796 002c DA84     		strh	r2, [r3, #38]	@ movhi
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5797              		.loc 1 2837 22
 5798 002e FB68     		ldr	r3, [r7, #12]
 5799 0030 0022     		movs	r2, #0
 5800 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5801              		.loc 1 2840 20
 5802 0034 FB68     		ldr	r3, [r7, #12]
 5803 0036 0022     		movs	r2, #0
 5804 0038 DA63     		str	r2, [r3, #60]
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5805              		.loc 1 2843 18
 5806 003a FB68     		ldr	r3, [r7, #12]
 5807 003c 2022     		movs	r2, #32
 5808 003e 83F83920 		strb	r2, [r3, #57]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5809              		.loc 1 2844 18
 5810 0042 FB68     		ldr	r3, [r7, #12]
 5811 0044 2022     		movs	r2, #32
 5812 0046 83F83A20 		strb	r2, [r3, #58]
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5813              		.loc 1 2852 3
 5814 004a F868     		ldr	r0, [r7, #12]
 5815 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5816 0050 00E0     		b	.L238
 5817              	.L241:
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5818              		.loc 1 2831 7
 5819 0052 00BF     		nop
 5820              	.L238:
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5821              		.loc 1 2854 1
 5822 0054 1037     		adds	r7, r7, #16
 5823              	.LCFI263:
 5824              		.cfi_def_cfa_offset 8
 5825 0056 BD46     		mov	sp, r7
 5826              	.LCFI264:
 5827              		.cfi_def_cfa_register 13
 5828              		@ sp needed
 5829 0058 80BD     		pop	{r7, pc}
 5830              		.cfi_endproc
ARM GAS  /tmp/ccvnu0oO.s 			page 152


 5831              	.LFE178:
 5833              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5834              		.align	1
 5835              		.syntax unified
 5836              		.thumb
 5837              		.thumb_func
 5838              		.fpu fpv4-sp-d16
 5840              	UART_DMATxOnlyAbortCallback:
 5841              	.LFB179:
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5842              		.loc 1 2866 1
 5843              		.cfi_startproc
 5844              		@ args = 0, pretend = 0, frame = 16
 5845              		@ frame_needed = 1, uses_anonymous_args = 0
 5846 0000 80B5     		push	{r7, lr}
 5847              	.LCFI265:
 5848              		.cfi_def_cfa_offset 8
 5849              		.cfi_offset 7, -8
 5850              		.cfi_offset 14, -4
 5851 0002 84B0     		sub	sp, sp, #16
 5852              	.LCFI266:
 5853              		.cfi_def_cfa_offset 24
 5854 0004 00AF     		add	r7, sp, #0
 5855              	.LCFI267:
 5856              		.cfi_def_cfa_register 7
 5857 0006 7860     		str	r0, [r7, #4]
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5858              		.loc 1 2867 23
 5859 0008 7B68     		ldr	r3, [r7, #4]
 5860 000a 9B6B     		ldr	r3, [r3, #56]
 5861 000c FB60     		str	r3, [r7, #12]
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5862              		.loc 1 2869 22
 5863 000e FB68     		ldr	r3, [r7, #12]
 5864 0010 0022     		movs	r2, #0
 5865 0012 DA84     		strh	r2, [r3, #38]	@ movhi
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5866              		.loc 1 2872 17
 5867 0014 FB68     		ldr	r3, [r7, #12]
 5868 0016 2022     		movs	r2, #32
 5869 0018 83F83920 		strb	r2, [r3, #57]
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
ARM GAS  /tmp/ccvnu0oO.s 			page 153


2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 5870              		.loc 1 2880 3
 5871 001c F868     		ldr	r0, [r7, #12]
 5872 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5873              		.loc 1 2882 1
 5874 0022 00BF     		nop
 5875 0024 1037     		adds	r7, r7, #16
 5876              	.LCFI268:
 5877              		.cfi_def_cfa_offset 8
 5878 0026 BD46     		mov	sp, r7
 5879              	.LCFI269:
 5880              		.cfi_def_cfa_register 13
 5881              		@ sp needed
 5882 0028 80BD     		pop	{r7, pc}
 5883              		.cfi_endproc
 5884              	.LFE179:
 5886              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 5887              		.align	1
 5888              		.syntax unified
 5889              		.thumb
 5890              		.thumb_func
 5891              		.fpu fpv4-sp-d16
 5893              	UART_DMARxOnlyAbortCallback:
 5894              	.LFB180:
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5895              		.loc 1 2894 1
 5896              		.cfi_startproc
 5897              		@ args = 0, pretend = 0, frame = 16
 5898              		@ frame_needed = 1, uses_anonymous_args = 0
 5899 0000 80B5     		push	{r7, lr}
 5900              	.LCFI270:
 5901              		.cfi_def_cfa_offset 8
 5902              		.cfi_offset 7, -8
 5903              		.cfi_offset 14, -4
 5904 0002 84B0     		sub	sp, sp, #16
 5905              	.LCFI271:
 5906              		.cfi_def_cfa_offset 24
 5907 0004 00AF     		add	r7, sp, #0
 5908              	.LCFI272:
ARM GAS  /tmp/ccvnu0oO.s 			page 154


 5909              		.cfi_def_cfa_register 7
 5910 0006 7860     		str	r0, [r7, #4]
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5911              		.loc 1 2895 23
 5912 0008 7B68     		ldr	r3, [r7, #4]
 5913 000a 9B6B     		ldr	r3, [r3, #56]
 5914 000c FB60     		str	r3, [r7, #12]
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5915              		.loc 1 2897 22
 5916 000e FB68     		ldr	r3, [r7, #12]
 5917 0010 0022     		movs	r2, #0
 5918 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5919              		.loc 1 2900 18
 5920 0014 FB68     		ldr	r3, [r7, #12]
 5921 0016 2022     		movs	r2, #32
 5922 0018 83F83A20 		strb	r2, [r3, #58]
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 5923              		.loc 1 2908 3
 5924 001c F868     		ldr	r0, [r7, #12]
 5925 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5926              		.loc 1 2910 1
 5927 0022 00BF     		nop
 5928 0024 1037     		adds	r7, r7, #16
 5929              	.LCFI273:
 5930              		.cfi_def_cfa_offset 8
 5931 0026 BD46     		mov	sp, r7
 5932              	.LCFI274:
 5933              		.cfi_def_cfa_register 13
 5934              		@ sp needed
 5935 0028 80BD     		pop	{r7, pc}
 5936              		.cfi_endproc
 5937              	.LFE180:
 5939              		.section	.text.UART_Transmit_IT,"ax",%progbits
 5940              		.align	1
 5941              		.syntax unified
 5942              		.thumb
 5943              		.thumb_func
 5944              		.fpu fpv4-sp-d16
 5946              	UART_Transmit_IT:
 5947              	.LFB181:
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccvnu0oO.s 			page 155


2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5948              		.loc 1 2919 1
 5949              		.cfi_startproc
 5950              		@ args = 0, pretend = 0, frame = 16
 5951              		@ frame_needed = 1, uses_anonymous_args = 0
 5952              		@ link register save eliminated.
 5953 0000 80B4     		push	{r7}
 5954              	.LCFI275:
 5955              		.cfi_def_cfa_offset 4
 5956              		.cfi_offset 7, -4
 5957 0002 85B0     		sub	sp, sp, #20
 5958              	.LCFI276:
 5959              		.cfi_def_cfa_offset 24
 5960 0004 00AF     		add	r7, sp, #0
 5961              	.LCFI277:
 5962              		.cfi_def_cfa_register 7
 5963 0006 7860     		str	r0, [r7, #4]
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 5964              		.loc 1 2923 12
 5965 0008 7B68     		ldr	r3, [r7, #4]
 5966 000a 93F83930 		ldrb	r3, [r3, #57]
 5967 000e DBB2     		uxtb	r3, r3
 5968              		.loc 1 2923 6
 5969 0010 212B     		cmp	r3, #33
 5970 0012 44D1     		bne	.L245
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 5971              		.loc 1 2925 20
 5972 0014 7B68     		ldr	r3, [r7, #4]
 5973 0016 9B68     		ldr	r3, [r3, #8]
 5974              		.loc 1 2925 8
 5975 0018 B3F5805F 		cmp	r3, #4096
 5976 001c 1AD1     		bne	.L246
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 5977              		.loc 1 2927 11
 5978 001e 7B68     		ldr	r3, [r7, #4]
 5979 0020 1B6A     		ldr	r3, [r3, #32]
 5980 0022 FB60     		str	r3, [r7, #12]
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 5981              		.loc 1 2928 40
 5982 0024 FB68     		ldr	r3, [r7, #12]
 5983 0026 1B88     		ldrh	r3, [r3]
 5984              		.loc 1 2928 29
 5985 0028 1A46     		mov	r2, r3
 5986              		.loc 1 2928 12
 5987 002a 7B68     		ldr	r3, [r7, #4]
 5988 002c 1B68     		ldr	r3, [r3]
 5989              		.loc 1 2928 29
 5990 002e C2F30802 		ubfx	r2, r2, #0, #9
ARM GAS  /tmp/ccvnu0oO.s 			page 156


 5991              		.loc 1 2928 27
 5992 0032 5A60     		str	r2, [r3, #4]
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5993              		.loc 1 2929 22
 5994 0034 7B68     		ldr	r3, [r7, #4]
 5995 0036 1B69     		ldr	r3, [r3, #16]
 5996              		.loc 1 2929 10
 5997 0038 002B     		cmp	r3, #0
 5998 003a 05D1     		bne	.L247
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 5999              		.loc 1 2931 27
 6000 003c 7B68     		ldr	r3, [r7, #4]
 6001 003e 1B6A     		ldr	r3, [r3, #32]
 6002 0040 9A1C     		adds	r2, r3, #2
 6003 0042 7B68     		ldr	r3, [r7, #4]
 6004 0044 1A62     		str	r2, [r3, #32]
 6005 0046 0EE0     		b	.L248
 6006              	.L247:
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 6007              		.loc 1 2935 27
 6008 0048 7B68     		ldr	r3, [r7, #4]
 6009 004a 1B6A     		ldr	r3, [r3, #32]
 6010 004c 5A1C     		adds	r2, r3, #1
 6011 004e 7B68     		ldr	r3, [r7, #4]
 6012 0050 1A62     		str	r2, [r3, #32]
 6013 0052 08E0     		b	.L248
 6014              	.L246:
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 6015              		.loc 1 2940 45
 6016 0054 7B68     		ldr	r3, [r7, #4]
 6017 0056 1B6A     		ldr	r3, [r3, #32]
 6018              		.loc 1 2940 57
 6019 0058 591C     		adds	r1, r3, #1
 6020 005a 7A68     		ldr	r2, [r7, #4]
 6021 005c 1162     		str	r1, [r2, #32]
 6022              		.loc 1 2940 39
 6023 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6024              		.loc 1 2940 12
 6025 0060 7B68     		ldr	r3, [r7, #4]
 6026 0062 1B68     		ldr	r3, [r3]
 6027              		.loc 1 2940 27
 6028 0064 5A60     		str	r2, [r3, #4]
 6029              	.L248:
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 6030              		.loc 1 2943 16
 6031 0066 7B68     		ldr	r3, [r7, #4]
 6032 0068 DB8C     		ldrh	r3, [r3, #38]	@ movhi
ARM GAS  /tmp/ccvnu0oO.s 			page 157


 6033 006a 9BB2     		uxth	r3, r3
 6034              		.loc 1 2943 9
 6035 006c 013B     		subs	r3, r3, #1
 6036 006e 9BB2     		uxth	r3, r3
 6037              		.loc 1 2943 8
 6038 0070 7A68     		ldr	r2, [r7, #4]
 6039 0072 1946     		mov	r1, r3	@ movhi
 6040 0074 D184     		strh	r1, [r2, #38]	@ movhi
 6041 0076 002B     		cmp	r3, #0
 6042 0078 0FD1     		bne	.L249
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 6043              		.loc 1 2946 7
 6044 007a 7B68     		ldr	r3, [r7, #4]
 6045 007c 1B68     		ldr	r3, [r3]
 6046 007e DA68     		ldr	r2, [r3, #12]
 6047 0080 7B68     		ldr	r3, [r7, #4]
 6048 0082 1B68     		ldr	r3, [r3]
 6049 0084 22F08002 		bic	r2, r2, #128
 6050 0088 DA60     		str	r2, [r3, #12]
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 6051              		.loc 1 2949 7
 6052 008a 7B68     		ldr	r3, [r7, #4]
 6053 008c 1B68     		ldr	r3, [r3]
 6054 008e DA68     		ldr	r2, [r3, #12]
 6055 0090 7B68     		ldr	r3, [r7, #4]
 6056 0092 1B68     		ldr	r3, [r3]
 6057 0094 42F04002 		orr	r2, r2, #64
 6058 0098 DA60     		str	r2, [r3, #12]
 6059              	.L249:
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 6060              		.loc 1 2951 12
 6061 009a 0023     		movs	r3, #0
 6062 009c 00E0     		b	.L250
 6063              	.L245:
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 6064              		.loc 1 2955 12
 6065 009e 0223     		movs	r3, #2
 6066              	.L250:
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6067              		.loc 1 2957 1
 6068 00a0 1846     		mov	r0, r3
 6069 00a2 1437     		adds	r7, r7, #20
 6070              	.LCFI278:
 6071              		.cfi_def_cfa_offset 4
 6072 00a4 BD46     		mov	sp, r7
 6073              	.LCFI279:
 6074              		.cfi_def_cfa_register 13
 6075              		@ sp needed
ARM GAS  /tmp/ccvnu0oO.s 			page 158


 6076 00a6 5DF8047B 		ldr	r7, [sp], #4
 6077              	.LCFI280:
 6078              		.cfi_restore 7
 6079              		.cfi_def_cfa_offset 0
 6080 00aa 7047     		bx	lr
 6081              		.cfi_endproc
 6082              	.LFE181:
 6084              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 6085              		.align	1
 6086              		.syntax unified
 6087              		.thumb
 6088              		.thumb_func
 6089              		.fpu fpv4-sp-d16
 6091              	UART_EndTransmit_IT:
 6092              	.LFB182:
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6093              		.loc 1 2966 1
 6094              		.cfi_startproc
 6095              		@ args = 0, pretend = 0, frame = 8
 6096              		@ frame_needed = 1, uses_anonymous_args = 0
 6097 0000 80B5     		push	{r7, lr}
 6098              	.LCFI281:
 6099              		.cfi_def_cfa_offset 8
 6100              		.cfi_offset 7, -8
 6101              		.cfi_offset 14, -4
 6102 0002 82B0     		sub	sp, sp, #8
 6103              	.LCFI282:
 6104              		.cfi_def_cfa_offset 16
 6105 0004 00AF     		add	r7, sp, #0
 6106              	.LCFI283:
 6107              		.cfi_def_cfa_register 7
 6108 0006 7860     		str	r0, [r7, #4]
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 6109              		.loc 1 2968 3
 6110 0008 7B68     		ldr	r3, [r7, #4]
 6111 000a 1B68     		ldr	r3, [r3]
 6112 000c DA68     		ldr	r2, [r3, #12]
 6113 000e 7B68     		ldr	r3, [r7, #4]
 6114 0010 1B68     		ldr	r3, [r3]
 6115 0012 22F04002 		bic	r2, r2, #64
 6116 0016 DA60     		str	r2, [r3, #12]
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6117              		.loc 1 2971 17
 6118 0018 7B68     		ldr	r3, [r7, #4]
 6119 001a 2022     		movs	r2, #32
 6120 001c 83F83920 		strb	r2, [r3, #57]
ARM GAS  /tmp/ccvnu0oO.s 			page 159


2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 6121              		.loc 1 2978 3
 6122 0020 7868     		ldr	r0, [r7, #4]
 6123 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6124              		.loc 1 2981 10
 6125 0026 0023     		movs	r3, #0
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6126              		.loc 1 2982 1
 6127 0028 1846     		mov	r0, r3
 6128 002a 0837     		adds	r7, r7, #8
 6129              	.LCFI284:
 6130              		.cfi_def_cfa_offset 8
 6131 002c BD46     		mov	sp, r7
 6132              	.LCFI285:
 6133              		.cfi_def_cfa_register 13
 6134              		@ sp needed
 6135 002e 80BD     		pop	{r7, pc}
 6136              		.cfi_endproc
 6137              	.LFE182:
 6139              		.section	.text.UART_Receive_IT,"ax",%progbits
 6140              		.align	1
 6141              		.syntax unified
 6142              		.thumb
 6143              		.thumb_func
 6144              		.fpu fpv4-sp-d16
 6146              	UART_Receive_IT:
 6147              	.LFB183:
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6148              		.loc 1 2991 1
 6149              		.cfi_startproc
 6150              		@ args = 0, pretend = 0, frame = 16
 6151              		@ frame_needed = 1, uses_anonymous_args = 0
 6152 0000 80B5     		push	{r7, lr}
 6153              	.LCFI286:
 6154              		.cfi_def_cfa_offset 8
 6155              		.cfi_offset 7, -8
 6156              		.cfi_offset 14, -4
 6157 0002 84B0     		sub	sp, sp, #16
 6158              	.LCFI287:
 6159              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccvnu0oO.s 			page 160


 6160 0004 00AF     		add	r7, sp, #0
 6161              	.LCFI288:
 6162              		.cfi_def_cfa_register 7
 6163 0006 7860     		str	r0, [r7, #4]
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6164              		.loc 1 2995 12
 6165 0008 7B68     		ldr	r3, [r7, #4]
 6166 000a 93F83A30 		ldrb	r3, [r3, #58]
 6167 000e DBB2     		uxtb	r3, r3
 6168              		.loc 1 2995 6
 6169 0010 222B     		cmp	r3, #34
 6170 0012 71D1     		bne	.L254
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 6171              		.loc 1 2997 20
 6172 0014 7B68     		ldr	r3, [r7, #4]
 6173 0016 9B68     		ldr	r3, [r3, #8]
 6174              		.loc 1 2997 8
 6175 0018 B3F5805F 		cmp	r3, #4096
 6176 001c 23D1     		bne	.L255
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
 6177              		.loc 1 2999 11
 6178 001e 7B68     		ldr	r3, [r7, #4]
 6179 0020 9B6A     		ldr	r3, [r3, #40]
 6180 0022 FB60     		str	r3, [r7, #12]
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 6181              		.loc 1 3000 22
 6182 0024 7B68     		ldr	r3, [r7, #4]
 6183 0026 1B69     		ldr	r3, [r3, #16]
 6184              		.loc 1 3000 10
 6185 0028 002B     		cmp	r3, #0
 6186 002a 0ED1     		bne	.L256
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 6187              		.loc 1 3002 32
 6188 002c 7B68     		ldr	r3, [r7, #4]
 6189 002e 1B68     		ldr	r3, [r3]
 6190              		.loc 1 3002 42
 6191 0030 5B68     		ldr	r3, [r3, #4]
 6192              		.loc 1 3002 16
 6193 0032 9BB2     		uxth	r3, r3
 6194 0034 C3F30803 		ubfx	r3, r3, #0, #9
 6195 0038 9AB2     		uxth	r2, r3
 6196              		.loc 1 3002 14
 6197 003a FB68     		ldr	r3, [r7, #12]
 6198 003c 1A80     		strh	r2, [r3]	@ movhi
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 6199              		.loc 1 3003 27
 6200 003e 7B68     		ldr	r3, [r7, #4]
 6201 0040 9B6A     		ldr	r3, [r3, #40]
 6202 0042 9A1C     		adds	r2, r3, #2
 6203 0044 7B68     		ldr	r3, [r7, #4]
 6204 0046 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccvnu0oO.s 			page 161


 6205 0048 29E0     		b	.L257
 6206              	.L256:
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 6207              		.loc 1 3007 32
 6208 004a 7B68     		ldr	r3, [r7, #4]
 6209 004c 1B68     		ldr	r3, [r3]
 6210              		.loc 1 3007 42
 6211 004e 5B68     		ldr	r3, [r3, #4]
 6212              		.loc 1 3007 16
 6213 0050 9BB2     		uxth	r3, r3
 6214 0052 DBB2     		uxtb	r3, r3
 6215 0054 9AB2     		uxth	r2, r3
 6216              		.loc 1 3007 14
 6217 0056 FB68     		ldr	r3, [r7, #12]
 6218 0058 1A80     		strh	r2, [r3]	@ movhi
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 6219              		.loc 1 3008 27
 6220 005a 7B68     		ldr	r3, [r7, #4]
 6221 005c 9B6A     		ldr	r3, [r3, #40]
 6222 005e 5A1C     		adds	r2, r3, #1
 6223 0060 7B68     		ldr	r3, [r7, #4]
 6224 0062 9A62     		str	r2, [r3, #40]
 6225 0064 1BE0     		b	.L257
 6226              	.L255:
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 6227              		.loc 1 3013 22
 6228 0066 7B68     		ldr	r3, [r7, #4]
 6229 0068 1B69     		ldr	r3, [r3, #16]
 6230              		.loc 1 3013 10
 6231 006a 002B     		cmp	r3, #0
 6232 006c 0AD1     		bne	.L258
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 6233              		.loc 1 3015 47
 6234 006e 7B68     		ldr	r3, [r7, #4]
 6235 0070 1B68     		ldr	r3, [r3]
 6236              		.loc 1 3015 57
 6237 0072 5868     		ldr	r0, [r3, #4]
 6238              		.loc 1 3015 15
 6239 0074 7B68     		ldr	r3, [r7, #4]
 6240 0076 9B6A     		ldr	r3, [r3, #40]
 6241              		.loc 1 3015 27
 6242 0078 591C     		adds	r1, r3, #1
 6243 007a 7A68     		ldr	r2, [r7, #4]
 6244 007c 9162     		str	r1, [r2, #40]
 6245              		.loc 1 3015 32
 6246 007e C2B2     		uxtb	r2, r0
 6247              		.loc 1 3015 30
 6248 0080 1A70     		strb	r2, [r3]
 6249 0082 0CE0     		b	.L257
ARM GAS  /tmp/ccvnu0oO.s 			page 162


 6250              	.L258:
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 6251              		.loc 1 3019 47
 6252 0084 7B68     		ldr	r3, [r7, #4]
 6253 0086 1B68     		ldr	r3, [r3]
 6254              		.loc 1 3019 57
 6255 0088 5B68     		ldr	r3, [r3, #4]
 6256              		.loc 1 3019 32
 6257 008a DAB2     		uxtb	r2, r3
 6258              		.loc 1 3019 15
 6259 008c 7B68     		ldr	r3, [r7, #4]
 6260 008e 9B6A     		ldr	r3, [r3, #40]
 6261              		.loc 1 3019 27
 6262 0090 581C     		adds	r0, r3, #1
 6263 0092 7968     		ldr	r1, [r7, #4]
 6264 0094 8862     		str	r0, [r1, #40]
 6265              		.loc 1 3019 32
 6266 0096 02F07F02 		and	r2, r2, #127
 6267 009a D2B2     		uxtb	r2, r2
 6268              		.loc 1 3019 30
 6269 009c 1A70     		strb	r2, [r3]
 6270              	.L257:
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 6271              		.loc 1 3023 16
 6272 009e 7B68     		ldr	r3, [r7, #4]
 6273 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 6274 00a2 9BB2     		uxth	r3, r3
 6275              		.loc 1 3023 9
 6276 00a4 013B     		subs	r3, r3, #1
 6277 00a6 9BB2     		uxth	r3, r3
 6278              		.loc 1 3023 8
 6279 00a8 7A68     		ldr	r2, [r7, #4]
 6280 00aa 1946     		mov	r1, r3	@ movhi
 6281 00ac D185     		strh	r1, [r2, #46]	@ movhi
 6282 00ae 002B     		cmp	r3, #0
 6283 00b0 20D1     		bne	.L259
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 6284              		.loc 1 3026 7
 6285 00b2 7B68     		ldr	r3, [r7, #4]
 6286 00b4 1B68     		ldr	r3, [r3]
 6287 00b6 DA68     		ldr	r2, [r3, #12]
 6288 00b8 7B68     		ldr	r3, [r7, #4]
 6289 00ba 1B68     		ldr	r3, [r3]
 6290 00bc 22F02002 		bic	r2, r2, #32
 6291 00c0 DA60     		str	r2, [r3, #12]
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 6292              		.loc 1 3029 7
ARM GAS  /tmp/ccvnu0oO.s 			page 163


 6293 00c2 7B68     		ldr	r3, [r7, #4]
 6294 00c4 1B68     		ldr	r3, [r3]
 6295 00c6 DA68     		ldr	r2, [r3, #12]
 6296 00c8 7B68     		ldr	r3, [r7, #4]
 6297 00ca 1B68     		ldr	r3, [r3]
 6298 00cc 22F48072 		bic	r2, r2, #256
 6299 00d0 DA60     		str	r2, [r3, #12]
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 6300              		.loc 1 3032 7
 6301 00d2 7B68     		ldr	r3, [r7, #4]
 6302 00d4 1B68     		ldr	r3, [r3]
 6303 00d6 5A69     		ldr	r2, [r3, #20]
 6304 00d8 7B68     		ldr	r3, [r7, #4]
 6305 00da 1B68     		ldr	r3, [r3]
 6306 00dc 22F00102 		bic	r2, r2, #1
 6307 00e0 5A61     		str	r2, [r3, #20]
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 6308              		.loc 1 3035 22
 6309 00e2 7B68     		ldr	r3, [r7, #4]
 6310 00e4 2022     		movs	r2, #32
 6311 00e6 83F83A20 		strb	r2, [r3, #58]
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 6312              		.loc 1 3042 7
 6313 00ea 7868     		ldr	r0, [r7, #4]
 6314 00ec FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 6315              		.loc 1 3045 14
 6316 00f0 0023     		movs	r3, #0
 6317 00f2 02E0     		b	.L260
 6318              	.L259:
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 6319              		.loc 1 3047 12
 6320 00f4 0023     		movs	r3, #0
 6321 00f6 00E0     		b	.L260
 6322              	.L254:
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 6323              		.loc 1 3051 12
 6324 00f8 0223     		movs	r3, #2
 6325              	.L260:
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccvnu0oO.s 			page 164


 6326              		.loc 1 3053 1
 6327 00fa 1846     		mov	r0, r3
 6328 00fc 1037     		adds	r7, r7, #16
 6329              	.LCFI289:
 6330              		.cfi_def_cfa_offset 8
 6331 00fe BD46     		mov	sp, r7
 6332              	.LCFI290:
 6333              		.cfi_def_cfa_register 13
 6334              		@ sp needed
 6335 0100 80BD     		pop	{r7, pc}
 6336              		.cfi_endproc
 6337              	.LFE183:
 6339              		.global	__aeabi_uldivmod
 6340              		.section	.text.UART_SetConfig,"ax",%progbits
 6341              		.align	1
 6342              		.syntax unified
 6343              		.thumb
 6344              		.thumb_func
 6345              		.fpu fpv4-sp-d16
 6347              	UART_SetConfig:
 6348              	.LFB184:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6349              		.loc 1 3062 1
 6350              		.cfi_startproc
 6351              		@ args = 0, pretend = 0, frame = 240
 6352              		@ frame_needed = 1, uses_anonymous_args = 0
 6353 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6354              	.LCFI291:
 6355              		.cfi_def_cfa_offset 36
 6356              		.cfi_offset 4, -36
 6357              		.cfi_offset 5, -32
 6358              		.cfi_offset 6, -28
 6359              		.cfi_offset 7, -24
 6360              		.cfi_offset 8, -20
 6361              		.cfi_offset 9, -16
 6362              		.cfi_offset 10, -12
 6363              		.cfi_offset 11, -8
 6364              		.cfi_offset 14, -4
 6365 0004 BDB0     		sub	sp, sp, #244
 6366              	.LCFI292:
 6367              		.cfi_def_cfa_offset 280
 6368 0006 00AF     		add	r7, sp, #0
 6369              	.LCFI293:
 6370              		.cfi_def_cfa_register 7
 6371 0008 C7F8E400 		str	r0, [r7, #228]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  /tmp/ccvnu0oO.s 			page 165


3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 6372              		.loc 1 3067 3
 6373 000c D7F8E430 		ldr	r3, [r7, #228]
 6374 0010 5A68     		ldr	r2, [r3, #4]
 6375 0012 AE4B     		ldr	r3, .L275
 6376 0014 9A42     		cmp	r2, r3
 6377 0016 04D9     		bls	.L262
 6378              		.loc 1 3067 3 is_stmt 0 discriminator 1
 6379 0018 40F6FB31 		movw	r1, #3067
 6380 001c AC48     		ldr	r0, .L275+4
 6381 001e FFF7FEFF 		bl	assert_failed
 6382              	.L262:
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 6383              		.loc 1 3068 3 is_stmt 1
 6384 0022 D7F8E430 		ldr	r3, [r7, #228]
 6385 0026 DB68     		ldr	r3, [r3, #12]
 6386 0028 002B     		cmp	r3, #0
 6387 002a 0AD0     		beq	.L263
 6388              		.loc 1 3068 3 is_stmt 0 discriminator 1
 6389 002c D7F8E430 		ldr	r3, [r7, #228]
 6390 0030 DB68     		ldr	r3, [r3, #12]
 6391 0032 B3F5005F 		cmp	r3, #8192
 6392 0036 04D0     		beq	.L263
 6393              		.loc 1 3068 3 discriminator 2
 6394 0038 40F6FC31 		movw	r1, #3068
 6395 003c A448     		ldr	r0, .L275+4
 6396 003e FFF7FEFF 		bl	assert_failed
 6397              	.L263:
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 6398              		.loc 1 3069 3 is_stmt 1
 6399 0042 D7F8E430 		ldr	r3, [r7, #228]
 6400 0046 1B69     		ldr	r3, [r3, #16]
 6401 0048 002B     		cmp	r3, #0
 6402 004a 10D0     		beq	.L264
 6403              		.loc 1 3069 3 is_stmt 0 discriminator 1
 6404 004c D7F8E430 		ldr	r3, [r7, #228]
 6405 0050 1B69     		ldr	r3, [r3, #16]
 6406 0052 B3F5806F 		cmp	r3, #1024
 6407 0056 0AD0     		beq	.L264
 6408              		.loc 1 3069 3 discriminator 2
 6409 0058 D7F8E430 		ldr	r3, [r7, #228]
 6410 005c 1B69     		ldr	r3, [r3, #16]
 6411 005e B3F5C06F 		cmp	r3, #1536
 6412 0062 04D0     		beq	.L264
 6413              		.loc 1 3069 3 discriminator 3
 6414 0064 40F6FD31 		movw	r1, #3069
 6415 0068 9948     		ldr	r0, .L275+4
 6416 006a FFF7FEFF 		bl	assert_failed
 6417              	.L264:
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 6418              		.loc 1 3070 3 is_stmt 1
 6419 006e D7F8E430 		ldr	r3, [r7, #228]
 6420 0072 5A69     		ldr	r2, [r3, #20]
 6421 0074 4FF6F373 		movw	r3, #65523
 6422 0078 1340     		ands	r3, r3, r2
 6423 007a 002B     		cmp	r3, #0
 6424 007c 04D1     		bne	.L265
ARM GAS  /tmp/ccvnu0oO.s 			page 166


 6425              		.loc 1 3070 3 is_stmt 0 discriminator 2
 6426 007e D7F8E430 		ldr	r3, [r7, #228]
 6427 0082 5B69     		ldr	r3, [r3, #20]
 6428 0084 002B     		cmp	r3, #0
 6429 0086 04D1     		bne	.L266
 6430              	.L265:
 6431              		.loc 1 3070 3 discriminator 3
 6432 0088 40F6FE31 		movw	r1, #3070
 6433 008c 9048     		ldr	r0, .L275+4
 6434 008e FFF7FEFF 		bl	assert_failed
 6435              	.L266:
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 6436              		.loc 1 3075 3 is_stmt 1
 6437 0092 D7F8E430 		ldr	r3, [r7, #228]
 6438 0096 1B68     		ldr	r3, [r3]
 6439 0098 1B69     		ldr	r3, [r3, #16]
 6440 009a 23F44050 		bic	r0, r3, #12288
 6441 009e D7F8E430 		ldr	r3, [r7, #228]
 6442 00a2 D968     		ldr	r1, [r3, #12]
 6443 00a4 D7F8E430 		ldr	r3, [r7, #228]
 6444 00a8 1A68     		ldr	r2, [r3]
 6445 00aa 40EA0103 		orr	r3, r0, r1
 6446 00ae 1361     		str	r3, [r2, #16]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 6447              		.loc 1 3084 33
 6448 00b0 D7F8E430 		ldr	r3, [r7, #228]
 6449 00b4 9A68     		ldr	r2, [r3, #8]
 6450              		.loc 1 3084 58
 6451 00b6 D7F8E430 		ldr	r3, [r7, #228]
 6452 00ba 1B69     		ldr	r3, [r3, #16]
 6453              		.loc 1 3084 45
 6454 00bc 1A43     		orrs	r2, r2, r3
 6455              		.loc 1 3084 79
 6456 00be D7F8E430 		ldr	r3, [r7, #228]
 6457 00c2 5B69     		ldr	r3, [r3, #20]
 6458              		.loc 1 3084 66
 6459 00c4 1A43     		orrs	r2, r2, r3
 6460              		.loc 1 3084 98
 6461 00c6 D7F8E430 		ldr	r3, [r7, #228]
 6462 00ca DB69     		ldr	r3, [r3, #28]
 6463              		.loc 1 3084 10
 6464 00cc 1343     		orrs	r3, r3, r2
 6465 00ce C7F8EC30 		str	r3, [r7, #236]
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 6466              		.loc 1 3085 3
ARM GAS  /tmp/ccvnu0oO.s 			page 167


 6467 00d2 D7F8E430 		ldr	r3, [r7, #228]
 6468 00d6 1B68     		ldr	r3, [r3]
 6469 00d8 DB68     		ldr	r3, [r3, #12]
 6470 00da 23F41641 		bic	r1, r3, #38400
 6471 00de 21F00C01 		bic	r1, r1, #12
 6472 00e2 D7F8E430 		ldr	r3, [r7, #228]
 6473 00e6 1A68     		ldr	r2, [r3]
 6474 00e8 D7F8EC30 		ldr	r3, [r7, #236]
 6475 00ec 0B43     		orrs	r3, r3, r1
 6476 00ee D360     		str	r3, [r2, #12]
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 6477              		.loc 1 3091 3
 6478 00f0 D7F8E430 		ldr	r3, [r7, #228]
 6479 00f4 1B68     		ldr	r3, [r3]
 6480 00f6 5B69     		ldr	r3, [r3, #20]
 6481 00f8 23F44070 		bic	r0, r3, #768
 6482 00fc D7F8E430 		ldr	r3, [r7, #228]
 6483 0100 9969     		ldr	r1, [r3, #24]
 6484 0102 D7F8E430 		ldr	r3, [r7, #228]
 6485 0106 1A68     		ldr	r2, [r3]
 6486 0108 40EA0103 		orr	r3, r0, r1
 6487 010c 5361     		str	r3, [r2, #20]
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 6488              		.loc 1 3094 18
 6489 010e D7F8E430 		ldr	r3, [r7, #228]
 6490 0112 DB69     		ldr	r3, [r3, #28]
 6491              		.loc 1 3094 6
 6492 0114 B3F5004F 		cmp	r3, #32768
 6493 0118 40F0A981 		bne	.L267
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 6494              		.loc 1 3104 15
 6495 011c D7F8E430 		ldr	r3, [r7, #228]
 6496 0120 1A68     		ldr	r2, [r3]
 6497              		.loc 1 3104 8
 6498 0122 6C4B     		ldr	r3, .L275+8
 6499 0124 9A42     		cmp	r2, r3
 6500 0126 06D0     		beq	.L268
 6501              		.loc 1 3104 46 discriminator 1
 6502 0128 D7F8E430 		ldr	r3, [r7, #228]
 6503 012c 1A68     		ldr	r2, [r3]
 6504              		.loc 1 3104 37 discriminator 1
ARM GAS  /tmp/ccvnu0oO.s 			page 168


 6505 012e 6A4B     		ldr	r3, .L275+12
 6506 0130 9A42     		cmp	r2, r3
 6507 0132 40F0D580 		bne	.L269
 6508              	.L268:
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 6509              		.loc 1 3106 14
 6510 0136 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6511 013a C7F8E800 		str	r0, [r7, #232]
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 6512              		.loc 1 3107 30
 6513 013e D7F8E830 		ldr	r3, [r7, #232]
 6514 0142 1C46     		mov	r4, r3
 6515 0144 4FF00005 		mov	r5, #0
 6516 0148 2246     		mov	r2, r4
 6517 014a 2B46     		mov	r3, r5
 6518 014c 9118     		adds	r1, r2, r2
 6519 014e C7F88810 		str	r1, [r7, #136]
 6520 0152 5B41     		adcs	r3, r3, r3
 6521 0154 C7F88C30 		str	r3, [r7, #140]
 6522 0158 D7E92223 		ldrd	r2, [r7, #136]
 6523 015c 1219     		adds	r2, r2, r4
 6524 015e 45EB0303 		adc	r3, r5, r3
 6525 0162 4FF00000 		mov	r0, #0
 6526 0166 4FF00001 		mov	r1, #0
 6527 016a D900     		lsls	r1, r3, #3
 6528 016c 41EA5271 		orr	r1, r1, r2, lsr #29
 6529 0170 D000     		lsls	r0, r2, #3
 6530 0172 0246     		mov	r2, r0
 6531 0174 0B46     		mov	r3, r1
 6532 0176 1119     		adds	r1, r2, r4
 6533 0178 C7F8D810 		str	r1, [r7, #216]
 6534 017c 6B41     		adcs	r3, r3, r5
 6535 017e C7F8DC30 		str	r3, [r7, #220]
 6536 0182 D7F8E430 		ldr	r3, [r7, #228]
 6537 0186 5B68     		ldr	r3, [r3, #4]
 6538 0188 1A46     		mov	r2, r3
 6539 018a 4FF00003 		mov	r3, #0
 6540 018e 9118     		adds	r1, r2, r2
 6541 0190 C7F88010 		str	r1, [r7, #128]
 6542 0194 5B41     		adcs	r3, r3, r3
 6543 0196 C7F88430 		str	r3, [r7, #132]
 6544 019a D7E92023 		ldrd	r2, [r7, #128]
 6545 019e D7E93601 		ldrd	r0, [r7, #216]
 6546 01a2 FFF7FEFF 		bl	__aeabi_uldivmod
 6547              	.LVL3:
 6548 01a6 0246     		mov	r2, r0
 6549 01a8 0B46     		mov	r3, r1
 6550 01aa 4C4B     		ldr	r3, .L275+16
 6551 01ac A3FB0223 		umull	r2, r3, r3, r2
 6552 01b0 5B09     		lsrs	r3, r3, #5
 6553 01b2 1E01     		lsls	r6, r3, #4
 6554 01b4 D7F8E830 		ldr	r3, [r7, #232]
 6555 01b8 1C46     		mov	r4, r3
 6556 01ba 4FF00005 		mov	r5, #0
 6557 01be 2246     		mov	r2, r4
 6558 01c0 2B46     		mov	r3, r5
ARM GAS  /tmp/ccvnu0oO.s 			page 169


 6559 01c2 9118     		adds	r1, r2, r2
 6560 01c4 B967     		str	r1, [r7, #120]
 6561 01c6 5B41     		adcs	r3, r3, r3
 6562 01c8 FB67     		str	r3, [r7, #124]
 6563 01ca D7E91E23 		ldrd	r2, [r7, #120]
 6564 01ce 1219     		adds	r2, r2, r4
 6565 01d0 45EB0303 		adc	r3, r5, r3
 6566 01d4 4FF00000 		mov	r0, #0
 6567 01d8 4FF00001 		mov	r1, #0
 6568 01dc D900     		lsls	r1, r3, #3
 6569 01de 41EA5271 		orr	r1, r1, r2, lsr #29
 6570 01e2 D000     		lsls	r0, r2, #3
 6571 01e4 0246     		mov	r2, r0
 6572 01e6 0B46     		mov	r3, r1
 6573 01e8 1119     		adds	r1, r2, r4
 6574 01ea C7F8D010 		str	r1, [r7, #208]
 6575 01ee 6B41     		adcs	r3, r3, r5
 6576 01f0 C7F8D430 		str	r3, [r7, #212]
 6577 01f4 D7F8E430 		ldr	r3, [r7, #228]
 6578 01f8 5B68     		ldr	r3, [r3, #4]
 6579 01fa 1A46     		mov	r2, r3
 6580 01fc 4FF00003 		mov	r3, #0
 6581 0200 9118     		adds	r1, r2, r2
 6582 0202 3967     		str	r1, [r7, #112]
 6583 0204 5B41     		adcs	r3, r3, r3
 6584 0206 7B67     		str	r3, [r7, #116]
 6585 0208 D7E91C23 		ldrd	r2, [r7, #112]
 6586 020c D7E93401 		ldrd	r0, [r7, #208]
 6587 0210 FFF7FEFF 		bl	__aeabi_uldivmod
 6588              	.LVL4:
 6589 0214 0246     		mov	r2, r0
 6590 0216 0B46     		mov	r3, r1
 6591 0218 304B     		ldr	r3, .L275+16
 6592 021a A3FB0213 		umull	r1, r3, r3, r2
 6593 021e 5B09     		lsrs	r3, r3, #5
 6594 0220 6421     		movs	r1, #100
 6595 0222 01FB03F3 		mul	r3, r1, r3
 6596 0226 D31A     		subs	r3, r2, r3
 6597 0228 DB00     		lsls	r3, r3, #3
 6598 022a 3233     		adds	r3, r3, #50
 6599 022c 2B4A     		ldr	r2, .L275+16
 6600 022e A2FB0323 		umull	r2, r3, r2, r3
 6601 0232 5B09     		lsrs	r3, r3, #5
 6602 0234 5B00     		lsls	r3, r3, #1
 6603 0236 03F4F873 		and	r3, r3, #496
 6604 023a 1E44     		add	r6, r6, r3
 6605 023c D7F8E830 		ldr	r3, [r7, #232]
 6606 0240 1846     		mov	r0, r3
 6607 0242 4FF00001 		mov	r1, #0
 6608 0246 0246     		mov	r2, r0
 6609 0248 0B46     		mov	r3, r1
 6610 024a 9418     		adds	r4, r2, r2
 6611 024c BC66     		str	r4, [r7, #104]
 6612 024e 5B41     		adcs	r3, r3, r3
 6613 0250 FB66     		str	r3, [r7, #108]
 6614 0252 D7E91A23 		ldrd	r2, [r7, #104]
 6615 0256 1218     		adds	r2, r2, r0
ARM GAS  /tmp/ccvnu0oO.s 			page 170


 6616 0258 41EB0303 		adc	r3, r1, r3
 6617 025c 4FF00004 		mov	r4, #0
 6618 0260 4FF00005 		mov	r5, #0
 6619 0264 DD00     		lsls	r5, r3, #3
 6620 0266 45EA5275 		orr	r5, r5, r2, lsr #29
 6621 026a D400     		lsls	r4, r2, #3
 6622 026c 2246     		mov	r2, r4
 6623 026e 2B46     		mov	r3, r5
 6624 0270 1418     		adds	r4, r2, r0
 6625 0272 C7F8C840 		str	r4, [r7, #200]
 6626 0276 4B41     		adcs	r3, r3, r1
 6627 0278 C7F8CC30 		str	r3, [r7, #204]
 6628 027c D7F8E430 		ldr	r3, [r7, #228]
 6629 0280 5B68     		ldr	r3, [r3, #4]
 6630 0282 1A46     		mov	r2, r3
 6631 0284 4FF00003 		mov	r3, #0
 6632 0288 9118     		adds	r1, r2, r2
 6633 028a 3966     		str	r1, [r7, #96]
 6634 028c 5B41     		adcs	r3, r3, r3
 6635 028e 7B66     		str	r3, [r7, #100]
 6636 0290 D7E91823 		ldrd	r2, [r7, #96]
 6637 0294 D7E93201 		ldrd	r0, [r7, #200]
 6638 0298 FFF7FEFF 		bl	__aeabi_uldivmod
 6639              	.LVL5:
 6640 029c 0246     		mov	r2, r0
 6641 029e 0B46     		mov	r3, r1
 6642 02a0 0E4B     		ldr	r3, .L275+16
 6643 02a2 A3FB0213 		umull	r1, r3, r3, r2
 6644 02a6 5B09     		lsrs	r3, r3, #5
 6645 02a8 6421     		movs	r1, #100
 6646 02aa 01FB03F3 		mul	r3, r1, r3
 6647 02ae D31A     		subs	r3, r2, r3
 6648 02b0 DB00     		lsls	r3, r3, #3
 6649 02b2 3233     		adds	r3, r3, #50
 6650 02b4 094A     		ldr	r2, .L275+16
 6651 02b6 A2FB0323 		umull	r2, r3, r2, r3
 6652 02ba 5B09     		lsrs	r3, r3, #5
 6653 02bc 03F00702 		and	r2, r3, #7
 6654              		.loc 1 3107 12
 6655 02c0 D7F8E430 		ldr	r3, [r7, #228]
 6656 02c4 1B68     		ldr	r3, [r3]
 6657              		.loc 1 3107 30
 6658 02c6 3244     		add	r2, r2, r6
 6659              		.loc 1 3107 28
 6660 02c8 9A60     		str	r2, [r3, #8]
 6661 02ca 77E2     		b	.L271
 6662              	.L276:
 6663              		.align	2
 6664              	.L275:
 6665 02cc A037A000 		.word	10500000
 6666 02d0 00000000 		.word	.LC0
 6667 02d4 00100140 		.word	1073811456
 6668 02d8 00140140 		.word	1073812480
 6669 02dc 1F85EB51 		.word	1374389535
 6670              	.L269:
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccvnu0oO.s 			page 171


3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 6671              		.loc 1 3118 14
 6672 02e0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6673 02e4 C7F8E800 		str	r0, [r7, #232]
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 6674              		.loc 1 3119 30
 6675 02e8 D7F8E830 		ldr	r3, [r7, #232]
 6676 02ec 1C46     		mov	r4, r3
 6677 02ee 4FF00005 		mov	r5, #0
 6678 02f2 2246     		mov	r2, r4
 6679 02f4 2B46     		mov	r3, r5
 6680 02f6 9118     		adds	r1, r2, r2
 6681 02f8 B965     		str	r1, [r7, #88]
 6682 02fa 5B41     		adcs	r3, r3, r3
 6683 02fc FB65     		str	r3, [r7, #92]
 6684 02fe D7E91623 		ldrd	r2, [r7, #88]
 6685 0302 1219     		adds	r2, r2, r4
 6686 0304 45EB0303 		adc	r3, r5, r3
 6687 0308 4FF00000 		mov	r0, #0
 6688 030c 4FF00001 		mov	r1, #0
 6689 0310 D900     		lsls	r1, r3, #3
 6690 0312 41EA5271 		orr	r1, r1, r2, lsr #29
 6691 0316 D000     		lsls	r0, r2, #3
 6692 0318 0246     		mov	r2, r0
 6693 031a 0B46     		mov	r3, r1
 6694 031c 1119     		adds	r1, r2, r4
 6695 031e C7F8C010 		str	r1, [r7, #192]
 6696 0322 6B41     		adcs	r3, r3, r5
 6697 0324 C7F8C430 		str	r3, [r7, #196]
 6698 0328 D7F8E430 		ldr	r3, [r7, #228]
 6699 032c 5B68     		ldr	r3, [r3, #4]
 6700 032e 1A46     		mov	r2, r3
 6701 0330 4FF00003 		mov	r3, #0
 6702 0334 9118     		adds	r1, r2, r2
 6703 0336 3965     		str	r1, [r7, #80]
 6704 0338 5B41     		adcs	r3, r3, r3
 6705 033a 7B65     		str	r3, [r7, #84]
 6706 033c D7E91423 		ldrd	r2, [r7, #80]
 6707 0340 D7E93001 		ldrd	r0, [r7, #192]
 6708 0344 FFF7FEFF 		bl	__aeabi_uldivmod
 6709              	.LVL6:
 6710 0348 0246     		mov	r2, r0
 6711 034a 0B46     		mov	r3, r1
 6712 034c B34B     		ldr	r3, .L277
 6713 034e A3FB0223 		umull	r2, r3, r3, r2
 6714 0352 5B09     		lsrs	r3, r3, #5
 6715 0354 1E01     		lsls	r6, r3, #4
 6716 0356 D7F8E830 		ldr	r3, [r7, #232]
 6717 035a 1C46     		mov	r4, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 172


 6718 035c 4FF00005 		mov	r5, #0
 6719 0360 2246     		mov	r2, r4
 6720 0362 2B46     		mov	r3, r5
 6721 0364 9118     		adds	r1, r2, r2
 6722 0366 B964     		str	r1, [r7, #72]
 6723 0368 5B41     		adcs	r3, r3, r3
 6724 036a FB64     		str	r3, [r7, #76]
 6725 036c D7E91223 		ldrd	r2, [r7, #72]
 6726 0370 1219     		adds	r2, r2, r4
 6727 0372 45EB0303 		adc	r3, r5, r3
 6728 0376 4FF00000 		mov	r0, #0
 6729 037a 4FF00001 		mov	r1, #0
 6730 037e D900     		lsls	r1, r3, #3
 6731 0380 41EA5271 		orr	r1, r1, r2, lsr #29
 6732 0384 D000     		lsls	r0, r2, #3
 6733 0386 0246     		mov	r2, r0
 6734 0388 0B46     		mov	r3, r1
 6735 038a 1119     		adds	r1, r2, r4
 6736 038c C7F8B810 		str	r1, [r7, #184]
 6737 0390 6B41     		adcs	r3, r3, r5
 6738 0392 C7F8BC30 		str	r3, [r7, #188]
 6739 0396 D7F8E430 		ldr	r3, [r7, #228]
 6740 039a 5B68     		ldr	r3, [r3, #4]
 6741 039c 1A46     		mov	r2, r3
 6742 039e 4FF00003 		mov	r3, #0
 6743 03a2 9118     		adds	r1, r2, r2
 6744 03a4 3964     		str	r1, [r7, #64]
 6745 03a6 5B41     		adcs	r3, r3, r3
 6746 03a8 7B64     		str	r3, [r7, #68]
 6747 03aa D7E91023 		ldrd	r2, [r7, #64]
 6748 03ae D7E92E01 		ldrd	r0, [r7, #184]
 6749 03b2 FFF7FEFF 		bl	__aeabi_uldivmod
 6750              	.LVL7:
 6751 03b6 0246     		mov	r2, r0
 6752 03b8 0B46     		mov	r3, r1
 6753 03ba 984B     		ldr	r3, .L277
 6754 03bc A3FB0213 		umull	r1, r3, r3, r2
 6755 03c0 5B09     		lsrs	r3, r3, #5
 6756 03c2 6421     		movs	r1, #100
 6757 03c4 01FB03F3 		mul	r3, r1, r3
 6758 03c8 D31A     		subs	r3, r2, r3
 6759 03ca DB00     		lsls	r3, r3, #3
 6760 03cc 3233     		adds	r3, r3, #50
 6761 03ce 934A     		ldr	r2, .L277
 6762 03d0 A2FB0323 		umull	r2, r3, r2, r3
 6763 03d4 5B09     		lsrs	r3, r3, #5
 6764 03d6 5B00     		lsls	r3, r3, #1
 6765 03d8 03F4F873 		and	r3, r3, #496
 6766 03dc 1E44     		add	r6, r6, r3
 6767 03de D7F8E830 		ldr	r3, [r7, #232]
 6768 03e2 1846     		mov	r0, r3
 6769 03e4 4FF00001 		mov	r1, #0
 6770 03e8 0246     		mov	r2, r0
 6771 03ea 0B46     		mov	r3, r1
 6772 03ec 9418     		adds	r4, r2, r2
 6773 03ee BC63     		str	r4, [r7, #56]
 6774 03f0 5B41     		adcs	r3, r3, r3
ARM GAS  /tmp/ccvnu0oO.s 			page 173


 6775 03f2 FB63     		str	r3, [r7, #60]
 6776 03f4 D7E90E23 		ldrd	r2, [r7, #56]
 6777 03f8 1218     		adds	r2, r2, r0
 6778 03fa 41EB0303 		adc	r3, r1, r3
 6779 03fe 4FF00004 		mov	r4, #0
 6780 0402 4FF00005 		mov	r5, #0
 6781 0406 DD00     		lsls	r5, r3, #3
 6782 0408 45EA5275 		orr	r5, r5, r2, lsr #29
 6783 040c D400     		lsls	r4, r2, #3
 6784 040e 2246     		mov	r2, r4
 6785 0410 2B46     		mov	r3, r5
 6786 0412 1418     		adds	r4, r2, r0
 6787 0414 C7F8B040 		str	r4, [r7, #176]
 6788 0418 4B41     		adcs	r3, r3, r1
 6789 041a C7F8B430 		str	r3, [r7, #180]
 6790 041e D7F8E430 		ldr	r3, [r7, #228]
 6791 0422 5B68     		ldr	r3, [r3, #4]
 6792 0424 1A46     		mov	r2, r3
 6793 0426 4FF00003 		mov	r3, #0
 6794 042a 9118     		adds	r1, r2, r2
 6795 042c 3963     		str	r1, [r7, #48]
 6796 042e 5B41     		adcs	r3, r3, r3
 6797 0430 7B63     		str	r3, [r7, #52]
 6798 0432 D7E90C23 		ldrd	r2, [r7, #48]
 6799 0436 D7E92C01 		ldrd	r0, [r7, #176]
 6800 043a FFF7FEFF 		bl	__aeabi_uldivmod
 6801              	.LVL8:
 6802 043e 0246     		mov	r2, r0
 6803 0440 0B46     		mov	r3, r1
 6804 0442 764B     		ldr	r3, .L277
 6805 0444 A3FB0213 		umull	r1, r3, r3, r2
 6806 0448 5B09     		lsrs	r3, r3, #5
 6807 044a 6421     		movs	r1, #100
 6808 044c 01FB03F3 		mul	r3, r1, r3
 6809 0450 D31A     		subs	r3, r2, r3
 6810 0452 DB00     		lsls	r3, r3, #3
 6811 0454 3233     		adds	r3, r3, #50
 6812 0456 714A     		ldr	r2, .L277
 6813 0458 A2FB0323 		umull	r2, r3, r2, r3
 6814 045c 5B09     		lsrs	r3, r3, #5
 6815 045e 03F00702 		and	r2, r3, #7
 6816              		.loc 1 3119 12
 6817 0462 D7F8E430 		ldr	r3, [r7, #228]
 6818 0466 1B68     		ldr	r3, [r3]
 6819              		.loc 1 3119 30
 6820 0468 3244     		add	r2, r2, r6
 6821              		.loc 1 3119 28
 6822 046a 9A60     		str	r2, [r3, #8]
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
ARM GAS  /tmp/ccvnu0oO.s 			page 174


3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6823              		.loc 1 3150 1
 6824 046c A6E1     		b	.L274
 6825              	.L267:
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6826              		.loc 1 3132 15
 6827 046e D7F8E430 		ldr	r3, [r7, #228]
 6828 0472 1A68     		ldr	r2, [r3]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6829              		.loc 1 3132 8
 6830 0474 6A4B     		ldr	r3, .L277+4
 6831 0476 9A42     		cmp	r2, r3
 6832 0478 06D0     		beq	.L272
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6833              		.loc 1 3132 46 discriminator 1
 6834 047a D7F8E430 		ldr	r3, [r7, #228]
 6835 047e 1A68     		ldr	r2, [r3]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6836              		.loc 1 3132 37 discriminator 1
 6837 0480 684B     		ldr	r3, .L277+8
 6838 0482 9A42     		cmp	r2, r3
 6839 0484 40F0D080 		bne	.L273
 6840              	.L272:
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6841              		.loc 1 3134 14
 6842 0488 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6843 048c C7F8E800 		str	r0, [r7, #232]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6844              		.loc 1 3135 30
 6845 0490 D7F8E830 		ldr	r3, [r7, #232]
 6846 0494 1C46     		mov	r4, r3
 6847 0496 4FF00005 		mov	r5, #0
 6848 049a 2246     		mov	r2, r4
 6849 049c 2B46     		mov	r3, r5
 6850 049e 9118     		adds	r1, r2, r2
 6851 04a0 B962     		str	r1, [r7, #40]
ARM GAS  /tmp/ccvnu0oO.s 			page 175


 6852 04a2 5B41     		adcs	r3, r3, r3
 6853 04a4 FB62     		str	r3, [r7, #44]
 6854 04a6 D7E90A23 		ldrd	r2, [r7, #40]
 6855 04aa 1219     		adds	r2, r2, r4
 6856 04ac 45EB0303 		adc	r3, r5, r3
 6857 04b0 4FF00000 		mov	r0, #0
 6858 04b4 4FF00001 		mov	r1, #0
 6859 04b8 D900     		lsls	r1, r3, #3
 6860 04ba 41EA5271 		orr	r1, r1, r2, lsr #29
 6861 04be D000     		lsls	r0, r2, #3
 6862 04c0 0246     		mov	r2, r0
 6863 04c2 0B46     		mov	r3, r1
 6864 04c4 12EB040A 		adds	r10, r2, r4
 6865 04c8 43EB050B 		adc	fp, r3, r5
 6866 04cc D7F8E430 		ldr	r3, [r7, #228]
 6867 04d0 5B68     		ldr	r3, [r3, #4]
 6868 04d2 1846     		mov	r0, r3
 6869 04d4 4FF00001 		mov	r1, #0
 6870 04d8 4FF00002 		mov	r2, #0
 6871 04dc 4FF00003 		mov	r3, #0
 6872 04e0 8B00     		lsls	r3, r1, #2
 6873 04e2 43EA9073 		orr	r3, r3, r0, lsr #30
 6874 04e6 8200     		lsls	r2, r0, #2
 6875 04e8 5046     		mov	r0, r10
 6876 04ea 5946     		mov	r1, fp
 6877 04ec FFF7FEFF 		bl	__aeabi_uldivmod
 6878              	.LVL9:
 6879 04f0 0246     		mov	r2, r0
 6880 04f2 0B46     		mov	r3, r1
 6881 04f4 494B     		ldr	r3, .L277
 6882 04f6 A3FB0223 		umull	r2, r3, r3, r2
 6883 04fa 5B09     		lsrs	r3, r3, #5
 6884 04fc 1E01     		lsls	r6, r3, #4
 6885 04fe D7F8E830 		ldr	r3, [r7, #232]
 6886 0502 1846     		mov	r0, r3
 6887 0504 4FF00001 		mov	r1, #0
 6888 0508 0246     		mov	r2, r0
 6889 050a 0B46     		mov	r3, r1
 6890 050c 9418     		adds	r4, r2, r2
 6891 050e 3C62     		str	r4, [r7, #32]
 6892 0510 5B41     		adcs	r3, r3, r3
 6893 0512 7B62     		str	r3, [r7, #36]
 6894 0514 D7E90823 		ldrd	r2, [r7, #32]
 6895 0518 1218     		adds	r2, r2, r0
 6896 051a 41EB0303 		adc	r3, r1, r3
 6897 051e 4FF00004 		mov	r4, #0
 6898 0522 4FF00005 		mov	r5, #0
 6899 0526 DD00     		lsls	r5, r3, #3
 6900 0528 45EA5275 		orr	r5, r5, r2, lsr #29
 6901 052c D400     		lsls	r4, r2, #3
 6902 052e 2246     		mov	r2, r4
 6903 0530 2B46     		mov	r3, r5
 6904 0532 1418     		adds	r4, r2, r0
 6905 0534 C7F8A840 		str	r4, [r7, #168]
 6906 0538 4B41     		adcs	r3, r3, r1
 6907 053a C7F8AC30 		str	r3, [r7, #172]
 6908 053e D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  /tmp/ccvnu0oO.s 			page 176


 6909 0542 5B68     		ldr	r3, [r3, #4]
 6910 0544 1846     		mov	r0, r3
 6911 0546 4FF00001 		mov	r1, #0
 6912 054a 4FF00002 		mov	r2, #0
 6913 054e 4FF00003 		mov	r3, #0
 6914 0552 8B00     		lsls	r3, r1, #2
 6915 0554 43EA9073 		orr	r3, r3, r0, lsr #30
 6916 0558 8200     		lsls	r2, r0, #2
 6917 055a D7E92A01 		ldrd	r0, [r7, #168]
 6918 055e FFF7FEFF 		bl	__aeabi_uldivmod
 6919              	.LVL10:
 6920 0562 0246     		mov	r2, r0
 6921 0564 0B46     		mov	r3, r1
 6922 0566 2D4B     		ldr	r3, .L277
 6923 0568 A3FB0213 		umull	r1, r3, r3, r2
 6924 056c 5B09     		lsrs	r3, r3, #5
 6925 056e 6421     		movs	r1, #100
 6926 0570 01FB03F3 		mul	r3, r1, r3
 6927 0574 D31A     		subs	r3, r2, r3
 6928 0576 1B01     		lsls	r3, r3, #4
 6929 0578 3233     		adds	r3, r3, #50
 6930 057a 284A     		ldr	r2, .L277
 6931 057c A2FB0323 		umull	r2, r3, r2, r3
 6932 0580 5B09     		lsrs	r3, r3, #5
 6933 0582 03F0F003 		and	r3, r3, #240
 6934 0586 1E44     		add	r6, r6, r3
 6935 0588 D7F8E830 		ldr	r3, [r7, #232]
 6936 058c 1846     		mov	r0, r3
 6937 058e 4FF00001 		mov	r1, #0
 6938 0592 0246     		mov	r2, r0
 6939 0594 0B46     		mov	r3, r1
 6940 0596 9418     		adds	r4, r2, r2
 6941 0598 BC61     		str	r4, [r7, #24]
 6942 059a 5B41     		adcs	r3, r3, r3
 6943 059c FB61     		str	r3, [r7, #28]
 6944 059e D7E90623 		ldrd	r2, [r7, #24]
 6945 05a2 1218     		adds	r2, r2, r0
 6946 05a4 41EB0303 		adc	r3, r1, r3
 6947 05a8 4FF00004 		mov	r4, #0
 6948 05ac 4FF00005 		mov	r5, #0
 6949 05b0 DD00     		lsls	r5, r3, #3
 6950 05b2 45EA5275 		orr	r5, r5, r2, lsr #29
 6951 05b6 D400     		lsls	r4, r2, #3
 6952 05b8 2246     		mov	r2, r4
 6953 05ba 2B46     		mov	r3, r5
 6954 05bc 1418     		adds	r4, r2, r0
 6955 05be C7F8A040 		str	r4, [r7, #160]
 6956 05c2 4B41     		adcs	r3, r3, r1
 6957 05c4 C7F8A430 		str	r3, [r7, #164]
 6958 05c8 D7F8E430 		ldr	r3, [r7, #228]
 6959 05cc 5B68     		ldr	r3, [r3, #4]
 6960 05ce 1846     		mov	r0, r3
 6961 05d0 4FF00001 		mov	r1, #0
 6962 05d4 4FF00002 		mov	r2, #0
 6963 05d8 4FF00003 		mov	r3, #0
 6964 05dc 8B00     		lsls	r3, r1, #2
 6965 05de 43EA9073 		orr	r3, r3, r0, lsr #30
ARM GAS  /tmp/ccvnu0oO.s 			page 177


 6966 05e2 8200     		lsls	r2, r0, #2
 6967 05e4 D7E92801 		ldrd	r0, [r7, #160]
 6968 05e8 FFF7FEFF 		bl	__aeabi_uldivmod
 6969              	.LVL11:
 6970 05ec 0246     		mov	r2, r0
 6971 05ee 0B46     		mov	r3, r1
 6972 05f0 0A4B     		ldr	r3, .L277
 6973 05f2 A3FB0213 		umull	r1, r3, r3, r2
 6974 05f6 5B09     		lsrs	r3, r3, #5
 6975 05f8 6421     		movs	r1, #100
 6976 05fa 01FB03F3 		mul	r3, r1, r3
 6977 05fe D31A     		subs	r3, r2, r3
 6978 0600 1B01     		lsls	r3, r3, #4
 6979 0602 3233     		adds	r3, r3, #50
 6980 0604 054A     		ldr	r2, .L277
 6981 0606 A2FB0323 		umull	r2, r3, r2, r3
 6982 060a 5B09     		lsrs	r3, r3, #5
 6983 060c 03F00F02 		and	r2, r3, #15
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6984              		.loc 1 3135 12
 6985 0610 D7F8E430 		ldr	r3, [r7, #228]
 6986 0614 1B68     		ldr	r3, [r3]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6987              		.loc 1 3135 30
 6988 0616 3244     		add	r2, r2, r6
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6989              		.loc 1 3135 28
 6990 0618 9A60     		str	r2, [r3, #8]
 6991 061a CFE0     		b	.L271
 6992              	.L278:
 6993              		.align	2
 6994              	.L277:
 6995 061c 1F85EB51 		.word	1374389535
 6996 0620 00100140 		.word	1073811456
 6997 0624 00140140 		.word	1073812480
 6998              	.L273:
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6999              		.loc 1 3146 14
 7000 0628 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7001 062c C7F8E800 		str	r0, [r7, #232]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 7002              		.loc 1 3147 30
 7003 0630 D7F8E830 		ldr	r3, [r7, #232]
 7004 0634 1C46     		mov	r4, r3
 7005 0636 4FF00005 		mov	r5, #0
 7006 063a 2246     		mov	r2, r4
 7007 063c 2B46     		mov	r3, r5
 7008 063e 9118     		adds	r1, r2, r2
 7009 0640 3961     		str	r1, [r7, #16]
 7010 0642 5B41     		adcs	r3, r3, r3
 7011 0644 7B61     		str	r3, [r7, #20]
 7012 0646 D7E90423 		ldrd	r2, [r7, #16]
 7013 064a 1219     		adds	r2, r2, r4
 7014 064c 45EB0303 		adc	r3, r5, r3
 7015 0650 4FF00000 		mov	r0, #0
 7016 0654 4FF00001 		mov	r1, #0
 7017 0658 D900     		lsls	r1, r3, #3
ARM GAS  /tmp/ccvnu0oO.s 			page 178


 7018 065a 41EA5271 		orr	r1, r1, r2, lsr #29
 7019 065e D000     		lsls	r0, r2, #3
 7020 0660 0246     		mov	r2, r0
 7021 0662 0B46     		mov	r3, r1
 7022 0664 12EB0408 		adds	r8, r2, r4
 7023 0668 43EB0509 		adc	r9, r3, r5
 7024 066c D7F8E430 		ldr	r3, [r7, #228]
 7025 0670 5B68     		ldr	r3, [r3, #4]
 7026 0672 1846     		mov	r0, r3
 7027 0674 4FF00001 		mov	r1, #0
 7028 0678 4FF00002 		mov	r2, #0
 7029 067c 4FF00003 		mov	r3, #0
 7030 0680 8B00     		lsls	r3, r1, #2
 7031 0682 43EA9073 		orr	r3, r3, r0, lsr #30
 7032 0686 8200     		lsls	r2, r0, #2
 7033 0688 4046     		mov	r0, r8
 7034 068a 4946     		mov	r1, r9
 7035 068c FFF7FEFF 		bl	__aeabi_uldivmod
 7036              	.LVL12:
 7037 0690 0246     		mov	r2, r0
 7038 0692 0B46     		mov	r3, r1
 7039 0694 4C4B     		ldr	r3, .L279
 7040 0696 A3FB0223 		umull	r2, r3, r3, r2
 7041 069a 5B09     		lsrs	r3, r3, #5
 7042 069c 1E01     		lsls	r6, r3, #4
 7043 069e D7F8E830 		ldr	r3, [r7, #232]
 7044 06a2 1846     		mov	r0, r3
 7045 06a4 4FF00001 		mov	r1, #0
 7046 06a8 0246     		mov	r2, r0
 7047 06aa 0B46     		mov	r3, r1
 7048 06ac 9418     		adds	r4, r2, r2
 7049 06ae BC60     		str	r4, [r7, #8]
 7050 06b0 5B41     		adcs	r3, r3, r3
 7051 06b2 FB60     		str	r3, [r7, #12]
 7052 06b4 D7E90223 		ldrd	r2, [r7, #8]
 7053 06b8 1218     		adds	r2, r2, r0
 7054 06ba 41EB0303 		adc	r3, r1, r3
 7055 06be 4FF00004 		mov	r4, #0
 7056 06c2 4FF00005 		mov	r5, #0
 7057 06c6 DD00     		lsls	r5, r3, #3
 7058 06c8 45EA5275 		orr	r5, r5, r2, lsr #29
 7059 06cc D400     		lsls	r4, r2, #3
 7060 06ce 2246     		mov	r2, r4
 7061 06d0 2B46     		mov	r3, r5
 7062 06d2 1418     		adds	r4, r2, r0
 7063 06d4 C7F89840 		str	r4, [r7, #152]
 7064 06d8 4B41     		adcs	r3, r3, r1
 7065 06da C7F89C30 		str	r3, [r7, #156]
 7066 06de D7F8E430 		ldr	r3, [r7, #228]
 7067 06e2 5B68     		ldr	r3, [r3, #4]
 7068 06e4 1846     		mov	r0, r3
 7069 06e6 4FF00001 		mov	r1, #0
 7070 06ea 4FF00002 		mov	r2, #0
 7071 06ee 4FF00003 		mov	r3, #0
 7072 06f2 8B00     		lsls	r3, r1, #2
 7073 06f4 43EA9073 		orr	r3, r3, r0, lsr #30
 7074 06f8 8200     		lsls	r2, r0, #2
ARM GAS  /tmp/ccvnu0oO.s 			page 179


 7075 06fa D7E92601 		ldrd	r0, [r7, #152]
 7076 06fe FFF7FEFF 		bl	__aeabi_uldivmod
 7077              	.LVL13:
 7078 0702 0246     		mov	r2, r0
 7079 0704 0B46     		mov	r3, r1
 7080 0706 304B     		ldr	r3, .L279
 7081 0708 A3FB0213 		umull	r1, r3, r3, r2
 7082 070c 5B09     		lsrs	r3, r3, #5
 7083 070e 6421     		movs	r1, #100
 7084 0710 01FB03F3 		mul	r3, r1, r3
 7085 0714 D31A     		subs	r3, r2, r3
 7086 0716 1B01     		lsls	r3, r3, #4
 7087 0718 3233     		adds	r3, r3, #50
 7088 071a 2B4A     		ldr	r2, .L279
 7089 071c A2FB0323 		umull	r2, r3, r2, r3
 7090 0720 5B09     		lsrs	r3, r3, #5
 7091 0722 03F0F003 		and	r3, r3, #240
 7092 0726 1E44     		add	r6, r6, r3
 7093 0728 D7F8E830 		ldr	r3, [r7, #232]
 7094 072c 1846     		mov	r0, r3
 7095 072e 4FF00001 		mov	r1, #0
 7096 0732 0246     		mov	r2, r0
 7097 0734 0B46     		mov	r3, r1
 7098 0736 9418     		adds	r4, r2, r2
 7099 0738 3C60     		str	r4, [r7]
 7100 073a 5B41     		adcs	r3, r3, r3
 7101 073c 7B60     		str	r3, [r7, #4]
 7102 073e D7E90023 		ldrd	r2, [r7]
 7103 0742 1218     		adds	r2, r2, r0
 7104 0744 41EB0303 		adc	r3, r1, r3
 7105 0748 4FF00004 		mov	r4, #0
 7106 074c 4FF00005 		mov	r5, #0
 7107 0750 DD00     		lsls	r5, r3, #3
 7108 0752 45EA5275 		orr	r5, r5, r2, lsr #29
 7109 0756 D400     		lsls	r4, r2, #3
 7110 0758 2246     		mov	r2, r4
 7111 075a 2B46     		mov	r3, r5
 7112 075c 1418     		adds	r4, r2, r0
 7113 075e C7F89040 		str	r4, [r7, #144]
 7114 0762 4B41     		adcs	r3, r3, r1
 7115 0764 C7F89430 		str	r3, [r7, #148]
 7116 0768 D7F8E430 		ldr	r3, [r7, #228]
 7117 076c 5B68     		ldr	r3, [r3, #4]
 7118 076e 1846     		mov	r0, r3
 7119 0770 4FF00001 		mov	r1, #0
 7120 0774 4FF00002 		mov	r2, #0
 7121 0778 4FF00003 		mov	r3, #0
 7122 077c 8B00     		lsls	r3, r1, #2
 7123 077e 43EA9073 		orr	r3, r3, r0, lsr #30
 7124 0782 8200     		lsls	r2, r0, #2
 7125 0784 D7E92401 		ldrd	r0, [r7, #144]
 7126 0788 FFF7FEFF 		bl	__aeabi_uldivmod
 7127              	.LVL14:
 7128 078c 0246     		mov	r2, r0
 7129 078e 0B46     		mov	r3, r1
 7130 0790 0D4B     		ldr	r3, .L279
 7131 0792 A3FB0213 		umull	r1, r3, r3, r2
ARM GAS  /tmp/ccvnu0oO.s 			page 180


 7132 0796 5B09     		lsrs	r3, r3, #5
 7133 0798 6421     		movs	r1, #100
 7134 079a 01FB03F3 		mul	r3, r1, r3
 7135 079e D31A     		subs	r3, r2, r3
 7136 07a0 1B01     		lsls	r3, r3, #4
 7137 07a2 3233     		adds	r3, r3, #50
 7138 07a4 084A     		ldr	r2, .L279
 7139 07a6 A2FB0323 		umull	r2, r3, r2, r3
 7140 07aa 5B09     		lsrs	r3, r3, #5
 7141 07ac 03F00F02 		and	r2, r3, #15
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 7142              		.loc 1 3147 12
 7143 07b0 D7F8E430 		ldr	r3, [r7, #228]
 7144 07b4 1B68     		ldr	r3, [r3]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 7145              		.loc 1 3147 30
 7146 07b6 3244     		add	r2, r2, r6
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 7147              		.loc 1 3147 28
 7148 07b8 9A60     		str	r2, [r3, #8]
 7149              		.loc 1 3150 1
 7150 07ba FFE7     		b	.L274
 7151              	.L271:
 7152              	.L274:
 7153 07bc 00BF     		nop
 7154 07be F437     		adds	r7, r7, #244
 7155              	.LCFI294:
 7156              		.cfi_def_cfa_offset 36
 7157 07c0 BD46     		mov	sp, r7
 7158              	.LCFI295:
 7159              		.cfi_def_cfa_register 13
 7160              		@ sp needed
 7161 07c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7162              	.L280:
 7163 07c6 00BF     		.align	2
 7164              	.L279:
 7165 07c8 1F85EB51 		.word	1374389535
 7166              		.cfi_endproc
 7167              	.LFE184:
 7169              		.text
 7170              	.Letext0:
 7171              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 7172              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 7173              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 7174              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 7175              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 7176              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 7177              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 7178              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 7179              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 7180              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccvnu0oO.s 			page 181


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccvnu0oO.s:18     .rodata:0000000000000000 $d
     /tmp/ccvnu0oO.s:23     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccvnu0oO.s:31     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccvnu0oO.s:1109   .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccvnu0oO.s:6347   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccvnu0oO.s:272    .text.HAL_UART_Init:0000000000000184 $d
     /tmp/ccvnu0oO.s:283    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccvnu0oO.s:290    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccvnu0oO.s:477    .text.HAL_HalfDuplex_Init:0000000000000128 $d
     /tmp/ccvnu0oO.s:488    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccvnu0oO.s:495    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccvnu0oO.s:703    .text.HAL_LIN_Init:000000000000014c $d
     /tmp/ccvnu0oO.s:714    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccvnu0oO.s:721    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccvnu0oO.s:959    .text.HAL_MultiProcessor_Init:0000000000000188 $d
     /tmp/ccvnu0oO.s:970    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccvnu0oO.s:977    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccvnu0oO.s:1152   .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccvnu0oO.s:1091   .text.HAL_UART_DeInit:00000000000000a0 $d
     /tmp/ccvnu0oO.s:1102   .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccvnu0oO.s:1145   .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccvnu0oO.s:1188   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccvnu0oO.s:1195   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccvnu0oO.s:5373   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccvnu0oO.s:1419   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccvnu0oO.s:1426   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccvnu0oO.s:1672   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:1679   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccvnu0oO.s:1790   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:1797   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccvnu0oO.s:1924   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccvnu0oO.s:1931   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccvnu0oO.s:2084   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
     /tmp/ccvnu0oO.s:5000   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccvnu0oO.s:5079   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccvnu0oO.s:5257   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccvnu0oO.s:2091   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccvnu0oO.s:2098   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccvnu0oO.s:2272   .text.HAL_UART_Receive_DMA:00000000000000f4 $d
     /tmp/ccvnu0oO.s:5124   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccvnu0oO.s:5212   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccvnu0oO.s:2279   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccvnu0oO.s:2286   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccvnu0oO.s:2425   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccvnu0oO.s:2432   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccvnu0oO.s:2550   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccvnu0oO.s:2557   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccvnu0oO.s:5491   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccvnu0oO.s:5545   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccvnu0oO.s:2688   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccvnu0oO.s:2695   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccvnu0oO.s:2874   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccvnu0oO.s:2881   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccvnu0oO.s:2986   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccvnu0oO.s:2993   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
ARM GAS  /tmp/ccvnu0oO.s 			page 182


     /tmp/ccvnu0oO.s:3106   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:3113   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccvnu0oO.s:4194   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccvnu0oO.s:3340   .text.HAL_UART_Abort_IT:0000000000000140 $d
     /tmp/ccvnu0oO.s:5660   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccvnu0oO.s:5750   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccvnu0oO.s:3346   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:3353   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccvnu0oO.s:4237   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccvnu0oO.s:3470   .text.HAL_UART_AbortTransmit_IT:000000000000009c $d
     /tmp/ccvnu0oO.s:5840   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccvnu0oO.s:3475   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:3482   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccvnu0oO.s:4280   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccvnu0oO.s:3607   .text.HAL_UART_AbortReceive_IT:00000000000000ac $d
     /tmp/ccvnu0oO.s:5893   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccvnu0oO.s:3612   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccvnu0oO.s:3619   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccvnu0oO.s:6146   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccvnu0oO.s:4151   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccvnu0oO.s:5946   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccvnu0oO.s:6091   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccvnu0oO.s:3967   .text.HAL_UART_IRQHandler:00000000000001fc $d
     /tmp/ccvnu0oO.s:5607   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccvnu0oO.s:3972   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:3979   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccvnu0oO.s:4015   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4022   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccvnu0oO.s:4058   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4065   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccvnu0oO.s:4101   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4108   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccvnu0oO.s:4144   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4187   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4230   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4273   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:4316   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccvnu0oO.s:4323   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccvnu0oO.s:4431   .text.HAL_LIN_SendBreak:0000000000000098 $d
     /tmp/ccvnu0oO.s:4442   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccvnu0oO.s:4449   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccvnu0oO.s:4557   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000098 $d
     /tmp/ccvnu0oO.s:4568   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccvnu0oO.s:4575   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccvnu0oO.s:4683   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000098 $d
     /tmp/ccvnu0oO.s:4694   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccvnu0oO.s:4701   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccvnu0oO.s:4787   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccvnu0oO.s:4794   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccvnu0oO.s:4880   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccvnu0oO.s:4887   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccvnu0oO.s:4948   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccvnu0oO.s:4955   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccvnu0oO.s:4994   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccvnu0oO.s:5073   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccvnu0oO.s:5118   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccvnu0oO.s:5206   .text.UART_DMARxHalfCplt:0000000000000000 $t
ARM GAS  /tmp/ccvnu0oO.s 			page 183


     /tmp/ccvnu0oO.s:5251   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccvnu0oO.s:5367   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccvnu0oO.s:5485   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccvnu0oO.s:5539   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccvnu0oO.s:5601   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccvnu0oO.s:5654   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:5744   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:5834   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:5887   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccvnu0oO.s:5940   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:6085   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:6140   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccvnu0oO.s:6341   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccvnu0oO.s:6665   .text.UART_SetConfig:00000000000002cc $d
     /tmp/ccvnu0oO.s:6672   .text.UART_SetConfig:00000000000002e0 $t
     /tmp/ccvnu0oO.s:6995   .text.UART_SetConfig:000000000000061c $d
     /tmp/ccvnu0oO.s:7000   .text.UART_SetConfig:0000000000000628 $t
     /tmp/ccvnu0oO.s:7165   .text.UART_SetConfig:00000000000007c8 $d

UNDEFINED SYMBOLS
assert_failed
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
